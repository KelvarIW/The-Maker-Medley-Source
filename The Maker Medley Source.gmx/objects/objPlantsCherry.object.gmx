<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCherry</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objPlantsEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
scaleTo = 2;
alarm[0] = 1; //Subtype
attackingTimer = 0;
hp = 7;
moveDelay = 45;
scrPlantsGoreInit(2);
rowInit = 0;  // for "killing" animation

image_xscale = 2;
image_yscale = 2;

subtype_guyblock = 1;
subtype_mega = 2;
subtype_flag = 3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Subtype
if (!dead){
    if (subtype == subtype_guyblock || subtype == subtype_mega){
        shield = instance_create(x, y, objPlantsHat);
        shield.image_index = subtype-1;
        shield.durability = 8 + 6*(subtype-1);
        shield.attached = id;
    }else if (subtype == 3){
        flag = instance_create(x, y, objPlantsCarriedFlag);
        flag.following = id;
        flag.row = row;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrPlantsEnemyStepEnd();

// game over anim
if (killing){
    if (killingState == 0  &amp;&amp;  killingTimer &gt;= (killingDelay-15)){
        image_index = 1;
        rowInit = row;  // see condition below
    }else if (killingState == 1 &amp;&amp; row == rowInit &amp;&amp; instance_exists(objPlantsPlayerCage) &amp;&amp; x &lt; objPlantsPlayerCage.x){
        // change psuedo-depth relative to the cage
        if (rowInit &lt;= 2){
            row = 3;
        }else{
            row = 2;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!frozen){
    scrPlantsEnemyStep();
    
    if (instance_exists(attacking) &amp;&amp; pushAmt &lt;= 0){
        if (attackingTimer &gt;= 0 &amp;&amp; attackingTimer &lt;= 6){
            if (attackingTimer == 6){
                image_index = 0;
            }
            x -= attackingTimer/3;
        }else if (attackingTimer &gt;= (attackingTimerLen-6)){
            if (attackingTimer == (attackingTimerLen-6)){
                image_index = 1;
            }
            x += (attackingTimerLen-attackingTimer)/3;
        }
    }else if (!dead){
        if (attacking != noone){
            moveDelay = 45;
            attackingTimer = 0;
            attacking = noone;
        }
        
        if (!killing){
            moveDelay --;
            if (moveDelay &lt;= 0){
                hspeed = -3;
                friction = 0.15;
                image_index = 0;
                moveDelay += 70;
            }else if (moveDelay &lt;= 15){
                image_index = 1;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game Over `killing` animation
if (killingState == 1){
    image_index = 0;
    if (instance_exists(objPlantsPlayerCage)){
        direction = point_direction(x, y, objPlantsPlayerCage.x, objPlantsPlayerCage.y);
        speed = 2.4;
        friction = -0.08;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Gore adjustments
if (bodyState &gt;= 0 &amp;&amp; bodyState &lt; goreAmt){
    event_inherited();
    if (subtype == subtype_flag  &amp;&amp;  bodyState == 1){
        with (flag){
            if (following == other.id){  // failsafe
                following = other.gore[(other.bodyState-1)];
            }
        }
    }
    //Adjust the spawn position of gore to account for the manual offset in the draw code (User Event 0)
    if (image_yscale &lt; scaleTo &amp;&amp; bodyState &gt;= 1){  // optimization; failsafe
        var _heightOff = 12*max(scaleTo - image_yscale, 0);  // scale from the bottom of the sprite, not the center
        gore[(bodyState-1)].y += _heightOff;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Death
if (!dead &amp;&amp; !killing){
    if (instance_exists(shield) &amp;&amp; !shield.fallen){
        with (shield){
            durability = 0;
            hspeed = random_range(0.8, 1.9)*other.goreSpd;
            vspeed = random_range(-2, -1);
            gravity = random_range(0.125, 0.149);
            fallen = true;
            glowFrame = 20;
        }
    }
    repeat(goreAmt-bodyState){
        event_user(4);
    }
    glowFrame = 20;
}
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Damage
if (!dead &amp;&amp; !killing){
    event_inherited();
    if (hp &lt;= 3 &amp;&amp; bodyState == 0){
        event_user(4);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
var _heightOff = 12*max(scaleTo - image_yscale, 0);  // scale from the bottom of the sprite, not the center
y += _heightOff;

scrPlantsCrushStart(64, 128 - 12*image_yscale);

if (!dead || crushed){
    var _glowAlpha = 0;
    if ((!instance_exists(shield) || shield.fallen) &amp;&amp; glowFrame &gt; 0){
        _glowAlpha = scrPlantsGlow(glowFrame, glowLen);
    }
    draw_sprite_ext(sprPlantsCherry, image_index, floor(x), floor(y), image_xscale, image_yscale, image_angle, c_white, image_alpha);
    if (_glowAlpha &gt; 0){
        draw_sprite_ext(sprPlantsCherryHit, 2 + image_index, floor(x), floor(y), image_xscale, image_yscale, image_angle, image_blend, _glowAlpha);
    }
        
    if (bodyState == 0){
        draw_sprite_ext(sprPlantsCherryGore, image_index, floor(x)+2*image_xscale, floor(y) - 4*image_yscale, image_xscale, image_yscale, image_angle, c_white, image_alpha);
        if (_glowAlpha &gt; 0){
            draw_sprite_ext(sprPlantsCherryHit, 4 + image_index, floor(x)+2*image_xscale, floor(y) - 4*image_yscale, image_xscale, image_yscale, image_angle, image_blend, _glowAlpha);
        }
    }
}
scrPlantsEnemyDrawShield();

scrPlantsCrushEnd(crushTimer);
y -= _heightOff;

event_inherited();  // gore
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
