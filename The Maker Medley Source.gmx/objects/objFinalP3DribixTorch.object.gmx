<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFinalDribixTorch</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>objFinalP3UndertaleObject</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>following = noone;
image_angle = 180; //pretend it's propelling the ball upwards
shootCounter = 0;
image_speed = 1/4;

trailPieces = 0;
trailPieceMax = 8;
for (i=(trailPieceMax-1); i &gt;= 0; i--){
    trailX[i] = -100;
    trailY[i] = -100;
}
rotSpd = -6;
if (buff()){
    rotSpd *= 2.87;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(following) &amp;&amp; following.image_alpha &gt;= 1){
    x = following.x;
    y = following.y;
}else if (following != noone){ //first frame after instance starts disappearing
    vspeed = -8;
    y += vspeed;
    following = noone;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (following == noone){
    if (image_xscale &lt; 2){
        image_xscale += 1/30;
        if (image_xscale &gt; 2)
            image_xscale = 2;
        image_yscale = image_xscale;
    }
    if (vspeed &lt; 12){
        vspeed = min(vspeed + 0.3, 12);
    }
    
    //fire projectiles
    shootCounter += 1;
    if (buff()){
        if (shootCounter &gt;= 20 &amp;&amp; (shootCounter mod 3) == 2 &amp;&amp; y &lt; 440){
            var _inst;
            _inst = instance_create(x + lengthdir_x(11*image_yscale, image_angle + 90), y + lengthdir_y(11*image_yscale, image_angle + 90), objFinalP3DribixTorchProj);
            _inst.direction = image_angle + 90;
            _inst.speed = random_range(5, 7);
            _inst.vspeed -= 3; 
            
            var _snd = audio_play_sound(sndMakerSampleThrow, 0, 0);
            audio_sound_pitch(_snd, lerp(1.15, 0.85, clamp((y / 608), 0, 1)));
            audio_sound_gain(_snd, 0.6, 0);
        }
    }else{
        if (shootCounter &gt;= 20 &amp;&amp; y &lt; 380){
            var _inst = -4;
            //always right
            _inst = instance_create(x + lengthdir_x(11*image_yscale, image_angle + 90), y + lengthdir_y(11*image_yscale, image_angle + 90), objFinalP3DribixTorchProj);
            _inst.hspeed = max(abs(_inst.hspeed), 1.75);
            //always left
            _inst = instance_create(x + lengthdir_x(11*image_yscale, image_angle + 90), y + lengthdir_y(11*image_yscale, image_angle + 90), objFinalP3DribixTorchProj);
            _inst.hspeed = -(max(abs(_inst.hspeed), 1.75));
            //truly random
            _inst = instance_create(x + lengthdir_x(11*image_yscale, image_angle + 90), y + lengthdir_y(11*image_yscale, image_angle + 90), objFinalP3DribixTorchProj);
            
            //sfx
            if (x &lt; 400){
                var _snd = audio_play_sound(sndMakerSampleThrow, 0, 0);
                audio_sound_pitch(_snd, random_range(0.9, 1.1));
            }
            shootCounter = 0;
        }
    }
    
    if (trailPieces &lt; trailPieceMax)
        trailPieces = min(trailPieces+1, trailPieceMax);
    
    for (var i=floor(trailPieceMax-1); i &gt; 0; i--;){
        trailX[i] = trailX[i-1];
        trailY[i] = trailY[i-1];
    }
    trailX[0] = xprevious;
    trailY[0] = yprevious;
    
    image_angle += rotSpd;
}

if (bbox_top &gt; room_height+64 &amp;&amp; trailY[floor(trailPieceMax-1)] &gt; room_height+64+18*image_yscale){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (trailPieces &gt;= 1){
    var i;
    for(i=floor(trailPieces-1); i&gt;=0; i-=1){
        draw_sprite_ext(sprite_index, image_index-image_speed*(i+1), trailX[i], trailY[i], image_xscale, image_yscale, image_angle-rotSpd*(i+1), c_white, 1 - ((i+2)/(trailPieceMax+1)));
    }
}

draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
