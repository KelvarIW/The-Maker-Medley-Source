<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerFruit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-8</depth>
  <persistent>0</persistent>
  <parentName>objMakerFruit</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
image_xscale = 4;
image_yscale = 4;
if (instance_exists(objBeelzebubCtrl)){
    if (!global.practicing)
        timer = objBeelzebubCtrl.timer - 0.5;
    else
        timer = max(objBeelzebubCtrl.progressMarker[global.practiceWaypointStart], objBeelzebubCtrl.timer) - 0.5;
}else{
    timer = 0;
}
timerEvent = timer;
image_speed = 1/15;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
timer += global.deathSlow/2;
y = 128*sin((timer-126)*pi/36) - 48;
if (timer &gt;= 162)
    instance_destroy();
else if (timerEvent != floor(timer*2)/2 &amp;&amp; (!global.practicing || (instance_exists(objBeelzebubCtrl) &amp;&amp; global.practicing &amp;&amp; floor(timer*2)/2 &lt; objBeelzebubCtrl.progressMarker[global.practiceWaypointEnd]))){
    timerEvent = floor(2*timer)/2;
    if (timerEvent == 138){
        var _proj;
        for(var i=0;i&lt;7;i++){
            _proj = instance_create(400, y, objMakerFruit);
            _proj.image_index = 2*i;
            _proj.direction = i*180/7 + 180/14 + 90;
            _proj.speed = 6;
            if (buff()){
                _proj.gravity = 0.125;
            }
            _proj = instance_create(400, y, objMakerFruit);
            _proj.image_index = 2*i;
            _proj.direction = i*360/14 + 180/14 + 90;
            _proj.speed = 6;
            if (buff()){
                _proj.gravity = 0.125;
            }
            _proj.hspeed *= -1;
        }
    }else if (timerEvent &gt;= 145 &amp;&amp; timerEvent &lt; 157 &amp;&amp; (((timerEvent mod 1.5) == 1 &amp;&amp; buff()) || ((timerEvent mod 3) == 1 &amp;&amp; !buff()))){
        var _proj;
        var _ind = (2*(timerEvent-145)/1.5);
        if (_ind == 14){
            _ind = 16;
        }
        for(var i=0; i&lt;4; i++){
            _proj = instance_create(x, y, objMakerFruit);
            _proj.speed = 6*global.deathSlow;
            _proj.direction = 3*(timerEvent*4-10) + 90*i;
            _proj.image_index = _ind;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
