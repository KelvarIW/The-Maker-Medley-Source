<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCamera</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shake = 0;
if (instance_number(object_index) &gt; 1){  //prevent more than one object existing at a time
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (global.screenshake == 2){ //mild
    view_xview += irandom_range(-shake/3, shake/3);
    view_yview += irandom_range(-shake/3, shake/3);
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shake &gt; 0){
    if (room == rStage02Flappy){
        shake *= 0.85;
    }else{
        if (shake &lt;= 0.333){
            shake = 0;
        }else{
            shake -= 0.333;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/* global.screenshake values:
    1 = Strong
    2 = Mild
    3 = Disabled
*/
if (global.screenshake != 3){  // (not) Disabled
    if (shake &gt; 0 &amp;&amp; surface_exists(application_surface)){
        var _strength, _copies, _scale;
        _scale = view_wview/800;
        if (global.screenshake == 2){ //mild
            _strength = shake/3;
            _copies = 6;
        }else{
            _strength = shake;
            _copies = 12;
        }
        _strength *= _scale;
        
        if (!surface_exists(global.sharedSurf)){
            global.sharedSurf = surface_create(800, 608);
        }
        if (surface_exists(global.sharedSurf)){
            surface_set_target(global.sharedSurf);
            draw_clear_alpha(c_black, 0);
            surface_copy(global.sharedSurf, 0, 0, application_surface);
            
            //alpha correction
            draw_set_colour_write_enable(false, false, false, true);
            draw_rectangle(0, 0, 800, 608, false);
            draw_set_colour_write_enable(true, true, true, true);
            
            surface_reset_target();
            
            if (surface_exists(global.sharedSurf)){
                var _distFromCenter = point_distance(400, 304, 0, 0);
                var _dirFromCenter = point_direction(400, 304, 0, 0);
                var _drawX = (view_xview + view_wview/2) + (lengthdir_x(_distFromCenter, _dirFromCenter - view_angle) * view_wview/800);
                var _drawY = (view_yview + view_hview/2) + (lengthdir_y(_distFromCenter, _dirFromCenter - view_angle) * view_hview/608);
                repeat(_copies){
                    draw_surface_ext(global.sharedSurf, _drawX + irandom_range(-_strength, _strength), _drawY + irandom_range(-_strength, _strength), _scale, _scale, -view_angle, c_white, 0.33);
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
