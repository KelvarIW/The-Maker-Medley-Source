<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTriggerMask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[0] = 22;
drawTiles = true;
tileAlpha = 0;
active = false;
//Give Geezer Blocks Textures
for(var i=474;i&gt;=0;i--) block[i] = -1;
//0-49
block[00] = 16;
block[01] = 09;
block[02] = 09;
block[03] = 09;
block[04] = 09;
block[05] = 09;
block[06] = 09;
block[07] = 09;
block[08] = 09;
block[09] = 09;
block[10] = 09;
block[11] = 09;
block[12] = 28;
block[13] = 09;
block[14] = 09;
block[15] = 09;
block[16] = 09;
block[17] = 09;
block[18] = 09;
block[19] = 09;
block[20] = 09;
block[21] = 09;
block[22] = 09;
block[23] = 09;
block[24] = 17;
block[25] = 34;
block[37] = 13;
block[49] = 35;

//50-99
block[50] = 34;
block[52] = 00;
block[53] = 01;
block[54] = 02;
block[56] = 00;
block[57] = 01;
block[58] = 01;
block[59] = 01;
block[60] = 02;
block[62] = 13;
block[64] = 00;
block[65] = 01;
block[66] = 01;
block[67] = 01;
block[68] = 02;
block[70] = 00;
block[71] = 01;
block[72] = 02;
block[74] = 35;

block[75] = 34;
block[77] = 08;
block[78] = 09;
block[79] = 10;
block[81] = 08;
block[82] = 09;
block[83] = 09;
block[84] = 09;
block[85] = 10;
block[87] = 21;
block[89] = 08;
block[90] = 09;
block[91] = 09;
block[92] = 09;
block[93] = 10;
block[95] = 08;
block[96] = 09;
block[97] = 10;
block[99] = 35;

//100-149
block[100] = 34;
block[124] = 35;

block[125] = 34;
block[127] = 18;
block[128] = 19;
block[129] = 19;
block[130] = 19;
block[131] = 04;
block[133] = 18;
block[134] = 19;
block[135] = 19;
block[136] = 19;
block[137] = 06;
block[138] = 19;
block[139] = 19;
block[140] = 19;
block[141] = 20;
block[143] = 03;
block[144] = 19;
block[145] = 19;
block[146] = 19;
block[147] = 20;
block[149] = 35;

//150-199
block[150] = 34;
block[156] = 13;
block[162] = 13;
block[168] = 13;
block[174] = 35;

block[175] = 37;
block[176] = 19;
block[177] = 19;
block[178] = 19;
block[179] = 20;
block[181] = 14;
block[182] = 19;
block[183] = 19;
block[184] = 19;
block[185] = 20;
block[187] = 21;
block[189] = 18;
block[190] = 19;
block[191] = 19;
block[192] = 19;
block[193] = 15;
block[195] = 18;
block[196] = 19;
block[197] = 19;
block[198] = 19;
block[199] = 36;

//200-249
//block[200] = 34;
block[206] = 13;
block[218] = 13;
//block[224] = 35;

block[225] = 33;
block[226] = 19;
block[227] = 19;
block[228] = 19;
block[229] = 20;
block[231] = 21;
block[233] = 03;
block[234] = 19;
block[235] = 19;
block[236] = 20;
//block[237] = platform;
block[238] = 18;
block[239] = 19;
block[240] = 19;
block[241] = 04;
block[243] = 21;
block[245] = 18;
block[246] = 19;
block[247] = 19;
block[248] = 19;
block[249] = 32;

//250 - 299
block[250] = 34;
block[258] = 13;
block[266] = 13;
block[274] = 35;

block[275] = 34;
block[277] = 18;
block[278] = 19;
block[279] = 06;
block[280] = 19;
block[281] = 20;
block[283] = 13;
block[291] = 13;
block[293] = 18;
block[294] = 19;
block[295] = 06;
block[296] = 19;
block[297] = 20;
block[299] = 35;

//300-349
block[300] = 34;
block[304] = 13;
block[308] = 11;
block[309] = 19;
block[310] = 19;
block[311] = 19;
block[312] = 19;
block[313] = 19;
block[314] = 19;
block[315] = 19;
block[316] = 12;
block[320] = 13;
block[324] = 35;

block[325] = 30;
block[326] = 01;
block[327] = 02;
block[329] = 13;
block[331] = 05;
block[343] = 05;
block[345] = 13;
block[347] = 00;
block[348] = 01;
block[349] = 31;

//350-399
block[350] = 38;
block[351] = 09;
block[352] = 10;
block[354] = 21;
block[356] = 13;
block[358] = 18;
block[359] = 19;
block[360] = 19;
block[361] = 32;
block[362] = 01;
block[363] = 33;
block[364] = 19;
block[365] = 19;
block[366] = 20;
block[368] = 13;
block[370] = 21;
block[372] = 08;
block[373] = 09;
block[374] = 17;

block[375] = 34;
block[381] = 13;
block[386] = 35;
block[387] = 29;
block[388] = 34;
block[393] = 13;
block[399] = 35;

//400-449
block[400] = 34;
block[402] = 18;
block[403] = 19;
block[404] = 19;
block[405] = 19;
block[406] = 07;
block[407] = 19;
block[408] = 19;
block[409] = 20;
block[411] = 08;
block[412] = 09;
block[413] = 10;
block[415] = 18;
block[416] = 19;
block[417] = 19;
block[418] = 07;
block[419] = 19;
block[420] = 19;
block[421] = 19;
block[422] = 20;
block[424] = 35;

block[425] = 34;
block[449] = 35;
//450-499
block[450] = 24;
block[451] = 01;
block[452] = 01;
block[453] = 01;
block[454] = 01;
block[455] = 01;
block[456] = 01;
block[457] = 01;
block[458] = 01;
block[459] = 01;
block[460] = 01;
block[461] = 01;
block[462] = 01;
block[463] = 01;
block[464] = 01;
block[465] = 01;
block[466] = 01;
block[467] = 01;
block[468] = 01;
block[469] = 01;
block[470] = 01;
block[471] = 01;
block[472] = 01;
block[473] = 01;
block[474] = 25;

speedTimer = -1;
speedTimerMax = 350;
if (buff()){
    speedTimerMax = 200;
}
speedGlow = 0;
speedColor = make_color_rgb(0, 205, 118);
playerGlowSurf = -4;

if (!buff()){
    scrGiveShields(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.infJump = false;
if (surface_exists(playerGlowSurf)) surface_free(playerGlowSurf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Transition from Pacman to normal room
with (objExpandFade) instance_destroy()
with (objBullet) instance_destroy()
audio_play_sound(sndTouhouExplosion, 0, 0);
with (objGeezerBlock) instance_destroy();
with (objBlock) instance_destroy();
with (objGeezerPacGhost) instance_destroy();
global.shield = 0;
with (objMakerPShield) instance_destroy();
with (objGeezerBoss) {waiting = false;image_blend = c_white;}

for(i=0;i&lt;25;i++;){
    instance_create(i*32, 576, objGeezerBlock);
}
for(i=12;i&lt;18;i++;){
    instance_create(0, i*32, objGeezerBlock);
    instance_create(768, i*32, objGeezerBlock);
}

with (instance_create(0, 384, objBlock)) image_yscale = 7;
with (instance_create(768, 384, objBlock)) image_yscale = 7;
with (instance_create(32, 576, objBlock)) image_xscale = 23;
instance_create(0, 352, objMakerSpikeUp)
instance_create(768, 352, objMakerSpikeUp)

with (objPlayer){
    x = 400;
    y = 567;
    xprevious = 400;
    yprevious = 567;
}

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (objBlock) instance_destroy();
with (objMakerSpikeUp) instance_destroy();
with (objGeezerLaser) instance_destroy();
with (objGeezerBlock) if (y &lt; 608) instance_destroy();
with (objPlayer){
    x = 400;
    y = 151;
    xprevious = x;
    yprevious = y;
}

event_user(0); //coins
event_user(1); //blocks
with (objBlock){
    for(i=0;i&lt;image_xscale;i++){
        for(j=0;j&lt;image_yscale;j++) instance_create(x+32*i, y+32*j, objGeezerBlock);
    }
}

with (instance_create(384, 288, objPlatform)){
    visible = false;
}

with (objGeezerBlock) if (y &lt; 608) {
    pacLeft = (other.block[(x div 32) + 25*(y div 32)] mod 8)*32;
    pacTop  = (other.block[(x div 32) + 25*(y div 32)] div 8)*32;
    pacman = true;
    blockAlphaMult = 1;
}

with (objGeezerPacGhost){
    alarm[0] = 30 + 70*color;
    showLetter = true;  // color blind accessability
}

if (instance_exists(objPlayer)){
    global.infJump = true; //Player has Infinite Jumps
    with (instance_create(objPlayer.x, objPlayer.y - 30, objMakerMessage)){
        message = "You can jump infinitely";
    }
}
instance_create(-32, 256, objGeezerPacScreenWrap);
instance_create(800, 256, objGeezerPacScreenWrap);

drawTiles = false;

with (objGeezerBoss){image_blend = c_dkgray;}  // only affects screen
scrIdentAttack(rGeezer01, 1);
active = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (instance_create(0, 0, objScreenFade)){
    color = c_white;
    fade = 0;
    alpha = 0;
    fadeIn = 0.25;
    alarm[0] = 5;
    fadeOut = 0.125;
}
audio_play_sound(sndTouhouExplosion, 0, 0);
alarm[1] = 5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Power Pellets
if (speedTimer &gt; 0){
    if (instance_exists(objPlayer)){
        speedTimer --;
        
        var _glowExpandLen = 25;
        var _glowExpandTime = (speedTimerMax-_glowExpandLen);
        var _glowShrinkFastTime = (speedTimerMax/10);
        if (speedTimer &gt;= _glowExpandTime){
            if (speedGlow &lt; pi/2){
                speedGlow += pi/(2*_glowExpandLen); //the glow amt should not reset if the player collects another pellet. Instead, it should increase from where it is to the maximum amount
                if (speedGlow &gt; pi/2) speedGlow = pi/2;
            }
        }else if (speedGlow &gt; 0){
            if (speedTimer &gt; speedTimerMax/20){
                speedGlow += (pi/4)/(_glowExpandTime - _glowShrinkFastTime);
            }else{
                speedGlow += ((pi/2) - (pi/4))/_glowShrinkFastTime;
            }
            if (speedGlow &gt;= pi){speedGlow = 0;}
        }
        if (speedTimer &gt; 0){
            // double player's movement
            with (objPlayer){
                if (hspeed != 0){
                    if (!place_meeting(x+hspeed, y, objBlock)){
                        x += hspeed;  // *(_amt-1)  where _amt = 2
                    }else{
                        scrMoveContactObject(sign(hspeed), 0, abs(hspeed), objBlock);
                    }
                }
                if (vspeed != 0){
                    if (!place_meeting(x, y+vspeed, objBlock)){
                        y += vspeed;  // *(_amt-1)  where _amt = 2
                    }else{
                        scrMoveContactObject(0, sign(vspeed), abs(vspeed), objBlock);
                    }
                }
            }
        }else{
            audio_play_sound(sndMakerPowerDown, 0, 0);
        }
    }else{
        speedTimer = 0;
        audio_play_sound(sndMakerPowerDown, 0, 0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// End Pac-Man section
if (!instance_exists(objMakerCoin) &amp;&amp; !instance_exists(objGeezerPacPower) &amp;&amp; active){
    with (instance_create(0, 0, objScreenFade)){
        color = c_white;
        fade = 0;
        alpha = 0;
        fadeIn = 0.25;
        fadeOut = 0.125;
        alarm[0] = 5;
    }
    with (objGeezerPacGhost) fade = true;
    alarm[2] = 5;
    active = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Code-generating code
/*if (file_exists(working_directory + "\pacmanblocks.txt")) file_delete(working_directory + "\pacmanblocks.txt");
file = file_text_open_append(working_directory + "\pacmanblocks.txt");
with (objBlock){
    file_text_write_string(other.file, "with (instance_create(" + string(x) + ", " + string(y) + ", objBlock)){image_xscale = " + string(image_xscale) +"; image_yscale = " + string(image_yscale) + ";}");
    file_text_writeln(other.file);
}
with (objMakerCoin){
    file_text_write_string(other.file, "instance_create(" + string(x+16) + ", " + string(y+16) + ", objMakerCoin);");
    file_text_writeln(other.file);
}
file_text_close(file);*/

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Blocks
with (instance_create(416, 288, objBlock)){image_xscale = 4; image_yscale = 1;}
with (instance_create(256, 288, objBlock)){image_xscale = 4; image_yscale = 1;}
with (instance_create(512, 320, objBlock)){image_xscale = 1; image_yscale = 2;}
with (instance_create(256, 320, objBlock)){image_xscale = 1; image_yscale = 2;}
with (instance_create(768, 288, objBlock)){image_xscale = 1; image_yscale = 9;}
with (instance_create(0, 288, objBlock)){image_xscale = 1; image_yscale = 9;}
with (instance_create(384, 192, objBlock)){image_xscale = 1; image_yscale = 2;}
with (instance_create(352, 480, objBlock)){image_xscale = 3; image_yscale = 2;}
with (instance_create(256, 448, objBlock)){image_xscale = 9; image_yscale = 1;}
with (instance_create(128, 384, objBlock)){image_xscale = 1; image_yscale = 3;}
with (instance_create(64, 352, objBlock)){image_xscale = 5; image_yscale = 1;}
with (instance_create(32, 416, objBlock)){image_xscale = 2; image_yscale = 2;}
with (instance_create(192, 416, objBlock)){image_xscale = 1; image_yscale = 3;}
with (instance_create(64, 512, objBlock)){image_xscale = 8; image_yscale = 1;}
with (instance_create(704, 416, objBlock)){image_xscale = 2; image_yscale = 2;}
with (instance_create(480, 512, objBlock)){image_xscale = 8; image_yscale = 1;}
with (instance_create(576, 416, objBlock)){image_xscale = 1; image_yscale = 3;}
with (instance_create(640, 384, objBlock)){image_xscale = 1; image_yscale = 3;}
with (instance_create(576, 352, objBlock)){image_xscale = 5; image_yscale = 1;}
with (instance_create(256, 384, objBlock)){image_xscale = 9; image_yscale = 1;}
with (instance_create(32, 224, objBlock)){image_xscale = 4; image_yscale = 1;}
with (instance_create(640, 224, objBlock)){image_xscale = 4; image_yscale = 1;}
with (instance_create(640, 288, objBlock)){image_xscale = 4; image_yscale = 1;}
with (instance_create(32, 288, objBlock)){image_xscale = 4; image_yscale = 1;}
with (instance_create(448, 224, objBlock)){image_xscale = 4; image_yscale = 1;}
with (instance_create(576, 192, objBlock)){image_xscale = 1; image_yscale = 4;}
with (instance_create(576, 160, objBlock)){image_xscale = 5; image_yscale = 1;}
with (instance_create(256, 160, objBlock)){image_xscale = 9; image_yscale = 1;}
with (instance_create(224, 224, objBlock)){image_xscale = 4; image_yscale = 1;}
with (instance_create(192, 192, objBlock)){image_xscale = 1; image_yscale = 4;}
with (instance_create(64, 160, objBlock)){image_xscale = 5; image_yscale = 1;}
with (instance_create(640, 64, objBlock)){image_xscale = 3; image_yscale = 2;}
with (instance_create(448, 64, objBlock)){image_xscale = 5; image_yscale = 2;}
with (instance_create(192, 64, objBlock)){image_xscale = 5; image_yscale = 2;}
with (instance_create(384, 32, objBlock)){image_xscale = 1; image_yscale = 3;}
with (instance_create(64, 64, objBlock)){image_xscale = 3; image_yscale = 2;}
with (instance_create(0, 32, objBlock)){image_xscale = 1; image_yscale = 7;}
with (instance_create(768, 32, objBlock)){image_xscale = 1; image_yscale = 7;}
with (instance_create(0, 576, objBlock)){image_xscale = 25; image_yscale = 1;}
with (instance_create(0, 0, objBlock)){image_xscale = 25; image_yscale = 1;}

//Warp Tunnels
with (instance_create(-32, 224, objBlock)){image_xscale = 1; image_yscale = 1;}
with (instance_create(-32, 288, objBlock)){image_xscale = 1; image_yscale = 1;}
with (instance_create(800, 224, objBlock)){image_xscale = 1; image_yscale = 1;}
with (instance_create(800, 288, objBlock)){image_xscale = 1; image_yscale = 1;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate Coins + Pellets
instance_create(656, 496, objMakerCoin);
instance_create(624, 496, objMakerCoin);
instance_create(688, 496, objMakerCoin);
instance_create(752, 496, objMakerCoin);
instance_create(720, 496, objMakerCoin);
instance_create(752, 528, objMakerCoin);
instance_create(48, 528, objMakerCoin);
instance_create(752, 560, objMakerCoin);
instance_create(720, 560, objMakerCoin);
instance_create(688, 560, objMakerCoin);
instance_create(656, 560, objMakerCoin);
instance_create(624, 560, objMakerCoin);
instance_create(592, 560, objMakerCoin);
instance_create(560, 560, objMakerCoin);
instance_create(528, 560, objMakerCoin);
instance_create(496, 560, objMakerCoin);
instance_create(464, 560, objMakerCoin);
instance_create(432, 560, objMakerCoin);
instance_create(400, 560, objMakerCoin);
instance_create(368, 560, objMakerCoin);
instance_create(336, 560, objMakerCoin);
instance_create(304, 560, objMakerCoin);
instance_create(272, 560, objMakerCoin);
instance_create(240, 560, objMakerCoin);
instance_create(208, 560, objMakerCoin);
instance_create(176, 560, objMakerCoin);
instance_create(144, 560, objMakerCoin);
instance_create(112, 560, objMakerCoin);
instance_create(80, 560, objMakerCoin);
instance_create(48, 560, objMakerCoin);
instance_create(336, 528, objMakerCoin);
instance_create(464, 528, objMakerCoin);
instance_create(560, 464, objMakerCoin);
instance_create(560, 496, objMakerCoin);
instance_create(528, 496, objMakerCoin);
instance_create(496, 496, objMakerCoin);
instance_create(464, 496, objMakerCoin);
instance_create(336, 496, objMakerCoin);
instance_create(304, 496, objMakerCoin);
instance_create(272, 496, objMakerCoin);
instance_create(240, 496, objMakerCoin);
instance_create(240, 464, objMakerCoin);
instance_create(560, 432, objMakerCoin);
instance_create(528, 432, objMakerCoin);
instance_create(496, 432, objMakerCoin);
instance_create(464, 432, objMakerCoin);
instance_create(432, 432, objMakerCoin);
instance_create(400, 432, objMakerCoin);
instance_create(368, 432, objMakerCoin);
instance_create(336, 432, objMakerCoin);
instance_create(304, 432, objMakerCoin);
instance_create(272, 432, objMakerCoin);
instance_create(240, 432, objMakerCoin);
instance_create(80, 496, objMakerCoin);
instance_create(48, 496, objMakerCoin);
instance_create(144, 496, objMakerCoin);
instance_create(112, 496, objMakerCoin);
instance_create(112, 464, objMakerCoin);
instance_create(112, 432, objMakerCoin);
instance_create(176, 496, objMakerCoin);
instance_create(176, 464, objMakerCoin);
instance_create(176, 432, objMakerCoin);
instance_create(624, 464, objMakerCoin);
instance_create(624, 432, objMakerCoin);
instance_create(688, 464, objMakerCoin);
instance_create(688, 432, objMakerCoin);
instance_create(752, 400, objMakerCoin);
instance_create(688, 400, objMakerCoin);
instance_create(720, 400, objMakerCoin);
instance_create(624, 400, objMakerCoin);
instance_create(592, 400, objMakerCoin);
instance_create(560, 400, objMakerCoin);
instance_create(176, 400, objMakerCoin);
instance_create(560, 368, objMakerCoin);
instance_create(240, 368, objMakerCoin);
instance_create(240, 400, objMakerCoin);
instance_create(208, 400, objMakerCoin);
instance_create(112, 400, objMakerCoin);
instance_create(80, 400, objMakerCoin);
instance_create(48, 400, objMakerCoin);
instance_create(240, 336, objMakerCoin);
instance_create(208, 336, objMakerCoin);
instance_create(176, 336, objMakerCoin);
instance_create(144, 336, objMakerCoin);
instance_create(112, 336, objMakerCoin);
instance_create(80, 336, objMakerCoin);
instance_create(48, 336, objMakerCoin);
instance_create(752, 336, objMakerCoin);
instance_create(720, 336, objMakerCoin);
instance_create(688, 336, objMakerCoin);
instance_create(656, 336, objMakerCoin);
instance_create(624, 336, objMakerCoin);
instance_create(560, 336, objMakerCoin);
instance_create(592, 336, objMakerCoin);
instance_create(624, 304, objMakerCoin);
instance_create(560, 304, objMakerCoin);
instance_create(240, 304, objMakerCoin);
instance_create(176, 304, objMakerCoin);
instance_create(176, 240, objMakerCoin);
instance_create(176, 272, objMakerCoin);
instance_create(144, 272, objMakerCoin);
instance_create(112, 272, objMakerCoin);
instance_create(80, 272, objMakerCoin);
instance_create(48, 272, objMakerCoin);
instance_create(176, 208, objMakerCoin);
instance_create(144, 208, objMakerCoin);
instance_create(112, 208, objMakerCoin);
instance_create(80, 208, objMakerCoin);
instance_create(624, 240, objMakerCoin);
instance_create(752, 272, objMakerCoin);
instance_create(720, 272, objMakerCoin);
instance_create(688, 272, objMakerCoin);
instance_create(656, 272, objMakerCoin);
instance_create(624, 272, objMakerCoin);
instance_create(560, 272, objMakerCoin);
instance_create(528, 272, objMakerCoin);
instance_create(496, 272, objMakerCoin);
instance_create(464, 272, objMakerCoin);
instance_create(432, 272, objMakerCoin);
instance_create(400, 272, objMakerCoin);
instance_create(368, 272, objMakerCoin);
instance_create(336, 272, objMakerCoin);
instance_create(304, 272, objMakerCoin);
instance_create(272, 272, objMakerCoin);
instance_create(240, 272, objMakerCoin);
instance_create(432, 240, objMakerCoin);
instance_create(368, 240, objMakerCoin);
instance_create(432, 208, objMakerCoin);
instance_create(560, 208, objMakerCoin);
instance_create(528, 208, objMakerCoin);
instance_create(496, 208, objMakerCoin);
instance_create(464, 208, objMakerCoin);
instance_create(368, 208, objMakerCoin);
instance_create(336, 208, objMakerCoin);
instance_create(304, 208, objMakerCoin);
instance_create(272, 208, objMakerCoin);
instance_create(752, 208, objMakerCoin);
instance_create(720, 208, objMakerCoin);
instance_create(688, 208, objMakerCoin);
instance_create(656, 208, objMakerCoin);
instance_create(624, 208, objMakerCoin);
instance_create(752, 176, objMakerCoin);
instance_create(560, 176, objMakerCoin);
instance_create(240, 208, objMakerCoin);
instance_create(240, 176, objMakerCoin);
instance_create(752, 144, objMakerCoin);
instance_create(720, 144, objMakerCoin);
instance_create(688, 144, objMakerCoin);
instance_create(656, 144, objMakerCoin);
instance_create(624, 144, objMakerCoin);
instance_create(592, 144, objMakerCoin);
instance_create(560, 144, objMakerCoin);
instance_create(528, 144, objMakerCoin);
instance_create(496, 144, objMakerCoin);
instance_create(464, 144, objMakerCoin);
instance_create(432, 144, objMakerCoin);
instance_create(400, 144, objMakerCoin);
instance_create(368, 144, objMakerCoin);
instance_create(336, 144, objMakerCoin);
instance_create(304, 144, objMakerCoin);
instance_create(272, 144, objMakerCoin);
instance_create(240, 144, objMakerCoin);
instance_create(208, 144, objMakerCoin);
instance_create(176, 144, objMakerCoin);
instance_create(144, 144, objMakerCoin);
instance_create(112, 144, objMakerCoin);
instance_create(80, 144, objMakerCoin);
instance_create(176, 112, objMakerCoin);
instance_create(176, 80, objMakerCoin);
instance_create(368, 112, objMakerCoin);
instance_create(368, 80, objMakerCoin);
instance_create(752, 80, objMakerCoin);
instance_create(624, 112, objMakerCoin);
instance_create(624, 80, objMakerCoin);
instance_create(432, 112, objMakerCoin);
instance_create(432, 80, objMakerCoin);
instance_create(752, 48, objMakerCoin);
instance_create(720, 48, objMakerCoin);
instance_create(688, 48, objMakerCoin);
instance_create(656, 48, objMakerCoin);
instance_create(624, 48, objMakerCoin);
instance_create(592, 48, objMakerCoin);
instance_create(560, 48, objMakerCoin);
instance_create(528, 48, objMakerCoin);
instance_create(496, 48, objMakerCoin);
instance_create(464, 48, objMakerCoin);
instance_create(432, 48, objMakerCoin);
instance_create(368, 48, objMakerCoin);
instance_create(336, 48, objMakerCoin);
instance_create(304, 48, objMakerCoin);
instance_create(272, 48, objMakerCoin);
instance_create(240, 48, objMakerCoin);
instance_create(208, 48, objMakerCoin);
instance_create(176, 48, objMakerCoin);
instance_create(144, 48, objMakerCoin);
instance_create(112, 48, objMakerCoin);
instance_create(80, 48, objMakerCoin);
instance_create(48, 208, objMakerCoin);
instance_create(48, 176, objMakerCoin);
instance_create(48, 144, objMakerCoin);
instance_create(48, 80, objMakerCoin);
instance_create(48, 48, objMakerCoin);

//Power Pellets
instance_create(48, 112, objGeezerPacPower);
instance_create(752,112, objGeezerPacPower);
instance_create(48, 368, objGeezerPacPower);
instance_create(752,368, objGeezerPacPower);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.infJump = false;
if (surface_exists(playerGlowSurf)) surface_free(playerGlowSurf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (drawTiles){
    for(var i=0; i&lt;=474; i++;){
        if (block[i] != -1){
            t_tileLeft = (other.block[i] mod 8)*32;
            t_tileTop = (other.block[i] div 8)*32;
            draw_set_alpha(min(0.55, tileAlpha))
            draw_background_part(tlGeezerPacman, t_tileLeft, t_tileTop, 32, 32, (i mod 25)*32, (i div 25)*32);
        }
    }
}
draw_set_color(c_white);
draw_rectangle(384 + 0.5, 288 + 0.5, 416 - 0.5, 296 + 0.5, false);
draw_set_alpha(1);

if (speedTimer &gt; 0 &amp;&amp; instance_exists(objPlayer)){
    if (!surface_exists(playerGlowSurf)){playerGlowSurf = surface_create(32, 32);}
    if (surface_exists(playerGlowSurf)){
        surface_set_target(playerGlowSurf);
        draw_clear_alpha(c_black, 0);
        with (objPlayer){ //Slightly modified draw code
            var drawX = 16;
            var drawY = 23;
            draw_sprite_ext(sprite_index,image_index,drawX,drawY,image_xscale*xScale,image_yscale*global.grav,image_angle,image_blend,1);
        }
        surface_reset_target();
        d3d_set_fog(true, speedColor, 0, 1);
        for(var i=1;i&lt;=3;i++;){
            draw_surface_ext(playerGlowSurf, objPlayer.x - 16*(1.2 + (i/5)*sin(speedGlow)), objPlayer.y - 23*(1.2 + (i/5)*sin(speedGlow)), 1.2 + (i/5)*sin(speedGlow), 1.2 + (i/5)*sin(speedGlow), 0, c_black, 1 - 0.1*(i-1));
        }
        d3d_set_fog(false, c_white, 0, 1);
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
