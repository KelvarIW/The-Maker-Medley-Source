<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerPowerups</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-19</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alphaSineLeft = -1;
alphaSineRight = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(objPlayer) &amp;&amp; global.playerPower == 1){
    if (collision_rectangle(288, 320, 704, 480, objPlayer, false, true) == noone){
        if (objPlayer.x &lt; 544){
            if (alphaSineLeft == -1)
                alphaSineLeft = 0;
            else if (alphaSineLeft &lt;= pi/2)
                alphaSineLeft = alphaSineLeft;
            else
                alphaSineLeft = pi-alphaSineLeft;
        }else{
            if (alphaSineRight == -1)
                alphaSineRight = 0;
            else if (alphaSineRight &lt;= pi/2)
                alphaSineRight = alphaSineRight;
            else
                alphaSineRight = pi-alphaSineRight;
        }
        audio_stop_sound(sndMakerPowerDown);
        audio_play_sound(sndMakerPowerDown, 0, false);
        global.playerPower = 0;
    }
}

//single jump flash
if (alphaSineLeft &gt;= 0){
    if (alphaSineLeft &lt; pi/2) alphaSineLeft += pi/20;
    else alphaSineLeft += pi/28;
    if (alphaSineLeft &gt;= pi)
        alphaSineLeft = -1;
}

//double jump flash
if (alphaSineRight &gt;= 0){
    if (alphaSineRight &lt; pi/2) alphaSineRight += pi/20;
    else alphaSineRight += pi/28;
    if (alphaSineRight &gt;= pi)
        alphaSineRight = -1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (alphaSineLeft != -1){
    draw_set_color(c_red);
    draw_set_alpha(2*sin(alphaSineLeft)/3);
    draw_rectangle(64, 288, 288, 480, false);
    draw_sprite_ext(sprS4NoPowerSign, 0, 178, 368, 2, 2, 0, c_white, 2*sin(alphaSineLeft)/3);
    draw_set_alpha(1);
    draw_set_color(c_white);
}
if (alphaSineRight != -1){
    draw_set_color(c_red);
    draw_set_alpha(2*sin(alphaSineRight)/3);
    draw_rectangle(704, 0, 992, 480, false);
    draw_sprite_ext(sprS4NoPowerSign, 0, 848, 240, 2, 2, 0, c_white, 2*sin(alphaSineRight)/3);
    draw_set_alpha(1);
    draw_set_color(c_white);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
