<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlantsProgressMeter</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-200</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (view_xview &gt;= room_width-800){
    image_alpha -= 0.02;
    if (image_alpha &lt;= 0)
        instance_destroy();
}else if (image_alpha &lt; 1){
    image_alpha = min(image_alpha + 0.02, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.screenshotMode){
    var _barRight = 764, _barWidth = 144, _meterHeight = 590;
    
    var _flagAmt = 0, _flagDist = 160;
    if (view_xview &lt; ((room_width - 800) - _flagDist)){
        _flagAmt = 0;
    }else{
        _flagAmt = 12 * (1 - (((room_width - 800) - view_xview)/_flagDist));
    }
    
    if (image_alpha &lt; 1){
        if (!surface_exists(global.sharedSurf)){
            global.sharedSurf = surface_create(800, 608);
        }
    
        if (surface_exists(global.sharedSurf)){
            surface_set_target(global.sharedSurf);
            draw_clear_alpha(c_black, 0);
            
            draw_sprite(sprPlantsProgressMeter, 0, (_barRight+7), _meterHeight);
            draw_sprite_ext(sprPlantsProgressBar, 0, _barRight - _barWidth*(1 - clamp((view_xview)/(room_width-800), 0, 1)), _meterHeight, _barWidth*clamp((view_xview)/(room_width-800), 0, 1), 1, 0, c_white, 1);
            draw_sprite(sprPlantsProgressSign, 1, _barRight - (_barWidth/2), _meterHeight + 6);
            draw_sprite(sprPlantsProgressFlagpole, 0, _barRight - 2, _meterHeight);
            draw_sprite(sprPlantsProgressFlag, 1, _barRight - 2, (_meterHeight - _flagAmt));
            draw_sprite(sprPlayerHead, 0, _barRight - (_barWidth*(1 - clamp((view_xview)/(room_width-800), 0, 1))) - 7, _meterHeight-7);
            
            surface_reset_target();
            
            if (surface_exists(global.sharedSurf)){
                draw_surface_ext(global.sharedSurf, view_xview, view_yview, 1, 1, 0, c_white, image_alpha);
            }
        }
    }
    
    if (image_alpha &gt;= 1 || !surface_exists(global.sharedSurf)){
        draw_sprite_ext(sprPlantsProgressMeter, 0, (view_xview + _barRight) + 7, _meterHeight, 1, 1, 0, c_white, image_alpha);
        draw_sprite_ext(sprPlantsProgressBar, 0, (view_xview + _barRight) - _barWidth*(1 - clamp((view_xview)/(room_width-800), 0, 1)), _meterHeight, _barWidth*clamp((view_xview)/(room_width-800), 0, 1), 1, 0, c_white, image_alpha);
        draw_sprite_ext(sprPlantsProgressSign, 1, (view_xview + _barRight) - (_barWidth/2), _meterHeight + 6, 1, 1, 0, c_white, image_alpha);
        draw_sprite_ext(sprPlantsProgressFlagpole, 0, (view_xview + _barRight) - 2, _meterHeight, 1, 1, 0, c_white, image_alpha);
        draw_sprite_ext(sprPlantsProgressFlag, 1, (view_xview + _barRight) - 2, (_meterHeight - _flagAmt), 1, 1, 0, c_white, image_alpha);
        draw_sprite_ext(sprPlayerHead, 0, (view_xview + _barRight) - (_barWidth*(1 - clamp((view_xview)/(room_width-800), 0, 1))) - 7, _meterHeight-7, 1, 1, 0, c_white, image_alpha);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
