<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlantsSpider</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vspeed = 10;
rotSine = 0;
snd = audio_play_sound(sndPlantsSpider, 0, 0);
audio_sound_gain(snd, 0.6, 0);
viewXDiff = x - view_xview;
image_alpha = 0.5;
drawXOff = 0;
delay = 0;
delayInit = 0;
dangerSignAlpha = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_alpha == 1){
    dangerSignAlpha -= 0.0333;
}

if (bbox_top &gt; 632){
    instance_destroy();
}else{
    if (delay &gt; 0){
        delay -= 1;
        
        if (delay &lt;= 0){
            vspeed = 30;
            image_alpha = 1;
            audio_stop_sound(snd);
            snd = audio_play_sound(sndPlantsSpider, 0, 0);
            audio_sound_gain(snd, 0.6, 0);
            dangerSignAlpha = 2.7;
        }else{
            if (delayInit != 0){dangerSignAlpha = (1 - (delay/delayInit));}
        }
    }else if (image_alpha &lt; 1){
        if (rotSine &lt; 22){
            rotSine ++;
            image_angle = 45*sin(rotSine*pi/11);
            if (rotSine &gt;= 22){
                vspeed = -10;
            }
        }else if (bbox_bottom &lt; -40){
            if (buff()){
                delay = 20;
            }else{
                delay = 30;
            }
            delayInit = delay;
        }
    }
}

if (buff()){
    viewXDiff -= 1;
}else{
    viewXDiff -= 1.6;
}
if (image_alpha &gt;= 1){
    if (place_meeting(view_xview + viewXDiff, y, objPlayer)){
        scrKillPlayer();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (dangerSignAlpha &gt; 0){
    draw_sprite_ext(sprMakerDangerTriangle, max(((global.count mod 78)*14/50 - 47), 0), (view_xview + viewXDiff) - (sprite_width/2), view_yview +  72, image_xscale/2 * max(3 - 2*(cautionSignCounter-7*i)/20, 1), image_yscale/2 * max(3 - 2*(cautionSignCounter-7*i)/20, 1), 0, c_white, min((cautionSignCounter-7*i)/20, image_alpha));
    draw_sprite_ext(sprMakerDangerTriangle, max(((global.count mod 78)*14/50 - 47), 0), (view_xview + viewXDiff) + (sprite_width/2), view_yview +  72, image_xscale/2 * max(3 - 2*(cautionSignCounter-7*i)/20, 1), image_yscale/2 * max(3 - 2*(cautionSignCounter-7*i)/20, 1), 0, c_white, min((cautionSignCounter-7*i)/20, image_alpha));
}*/

draw_sprite_ext(sprite_index, image_index, (view_xview + viewXDiff) + drawXOff, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
