<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFinalBossRNG</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>timer = 0;
sineVal = 0;
particleTimer = 0;
surf = -4;
glowSurf = -4;
glowAlpha = 0;
trailNum = 0;
trailNumMax = 10;

part = 0;  // Only for the buffed version
action = 0;
image_speed = 0;
image_xscale = 0.5;
image_yscale = 0.5;
noTrailNumber = -3000;

var i;
for(i=trailNumMax-1;i&gt;=0;i--){
    xprev[i] = noTrailNumber;
    yprev[i] = noTrailNumber;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _dualAttackBuff = false;
if (action == 0){
    if (!_dualAttackBuff){
        if (!global.dead){
            timer += 1;
            if (timer == 80){
                //audio_play_sound(sndFinalP4BuffDieAppear, 0, 0);
            }
        }
        if (timer &gt;= 80){
            if (vspeed &lt; 4){
                vspeed += 0.2;
            }else if (vspeed &lt; 12){
                vspeed += 0.15;
            }else if (vspeed &lt; 24){
                vspeed += 0.1;
            }
        }else{
            sineVal ++;
            y = ystart + 20*sin(sineVal * pi/50);
        }
    }
    
    if (speed != 0 &amp;&amp; ((bbox_bottom+1) + vspeed) &gt;= 1088){
        y -= ((bbox_bottom+1) - 1088);
        speed = 0;
        gravity = 0;  // buff
        audio_stop_sound(sndFinalP4BuffDieAppear);
        
        var _inst;
        _inst = instance_create(x, y, objFinalBossClearWarp);
        _inst.part = part;
        _inst.destX = xstart;
        _inst = instance_create(x, y, objFinalBossEndDieEffect);
        _inst.part = part;
        if (_dualAttackBuff){
            if (part &lt;= 0){  // only play sound once in buffed mode
                audio_play_sound(sndFinalRNGPower, 0, 0);
                audio_play_sound(sndMakerSampleGlass, 0, 0);
            }
        }else{
            _inst = instance_create(x, y, objFinalBossEndDieFragment);
            //_inst.sprite_index = sprFinalBossRNGFragment;
            _inst.image_index = 0;
            _inst.hspeed = -5.45;
            _inst.vspeed = -4.25;
            _inst.gravity = 0.125;
            _inst.image_xscale = image_xscale;
            _inst.image_yscale = image_yscale;
            
            _inst = instance_create(x, y, objFinalBossEndDieFragment);
            //_inst.sprite_index = sprFinalBossRNGFragment;
            _inst.image_index = 1;
            _inst.hspeed = 4.75;
            _inst.vspeed = -5.25;
            _inst.gravity = 0.125;
            _inst.image_xscale = image_xscale;
            _inst.image_yscale = image_yscale;
            
            audio_play_sound(sndFinalRNGPower, 0, 0);
            audio_play_sound(sndMakerSampleGlass, 0, 0);
        }
        
        instance_destroy();
    }
    
    particleTimer ++;
    var _inst, _dir;
    var _partNum = 0;
    if (_dualAttackBuff){_partNum = 1 + ((particleTimer+image_index) mod 2);}else{_partNum = 3;}
    repeat(_partNum){
        _dir = random(360);
        _inst = instance_create(x + (sprite_width/4)*dcos(_dir), y + (sprite_height/4)*(-dsin(_dir)), objFinalRNGDiePart);
        _inst.direction = random(360);
        _inst.speed = 2;
        _inst.friction = -0.065;
        _inst.dieAlpha = 3;
        _inst.image_alpha = 1;
    }
    if (trailNum &lt; trailNumMax){
        trailNum = min(trailNum+1, trailNumMax);
    }
    if (trailNum &gt; 0){
        for(var i=ceil(trailNum);i&gt;0;i--){
            if (xprev[i-1] != noTrailNumber){
                xprev[i] = xprev[i-1];
            }
            if (yprev[i-1] != noTrailNumber){
                yprev[i] = yprev[i-1];
            }
        }
        xprev[0] = xprevious;
        yprev[0] = yprevious;
    }else if (xprev[0] != noTrailNumber){
        for(var i=(trailNumMax-1);i&gt;=0;i--){
            xprev[i] = noTrailNumber;
            yprev[i] = noTrailNumber;
        }
    }
}else{
    if (image_alpha &gt; 0){
        image_alpha = max(image_alpha-0.04, 0);
    }
    if (trailNum &gt; 0){
        trailNum = max(trailNum-1, 0);
    }
    
    if (trailNum &lt;= 0 &amp;&amp; image_alpha &lt;= 0){
        instance_destroy();
    }
}

if (glowAlpha &gt; 0){
    glowAlpha = max(glowAlpha - 0.1, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((instance_exists(objFinalRNGDiePart) &amp;&amp; !instance_exists(objFinalBossChar_4)) || trailNum &gt; 0){
    draw_set_blend_mode(bm_add);
    
    if (instance_exists(objFinalRNGDiePart) &amp;&amp; !instance_exists(objFinalBossChar_4)){
        with (objFinalRNGDiePart){
            draw_self();
        }
    }
    
    if (trailNum &gt; 0){
        for(var i=floor(trailNum-1); i&gt;=0; i-=0.5){
            draw_sprite_ext(sprite_index, image_index, lerp(xprev[floor(i)], xprev[ceil(i)], i mod 1), lerp(yprev[floor(i)], yprev[ceil(i)], i mod 1), (1 - (i+1)/trailNumMax)*image_xscale, (1 - (i+1)/trailNumMax)*image_yscale, 0, c_white, 0.6 * image_alpha);
        }
    }
    
    draw_set_blend_mode(bm_normal);
}

if (action == 0 || (false &amp;&amp; image_alpha &gt; 0)){  // dual attack buff (removed)
    if (global.finalGlowEnabled &amp;&amp; global.extraEffects){
        //Set up surface
        if (!surface_exists(surf)){
            surf = surface_create(256, 256);
        }
        if (surface_exists(surf)){
            surface_set_target(surf);
            draw_clear_alpha(c_black, 0);
            
            draw_sprite_ext(sprite_index, image_index, 128, 128, 1, 1, 0, c_white, 1);
            
            surface_reset_target();
        }
        
        //Draw surface (or, as a failsafe, the sprite)
        if (surface_exists(surf)){
            if (glowAlpha &gt; 0){
                shader_set(shdFinalWhite);
                shader_set_uniform_f(global.finalGlowHandle, 256*image_xscale, 256*image_yscale, 20, glowAlpha * image_alpha);
                draw_surface_ext(surf, x-128*image_xscale, y-128*image_yscale, image_xscale, image_yscale, 0, c_white, 1);
                shader_reset();
            }
            draw_surface_ext(surf, x-128*image_xscale, y-128*image_yscale, image_xscale, image_yscale, 0, c_white, image_alpha);
        }else{
            draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, 0, c_white, image_alpha);
        }
    }else{
        draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, 0, c_white, image_alpha);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
