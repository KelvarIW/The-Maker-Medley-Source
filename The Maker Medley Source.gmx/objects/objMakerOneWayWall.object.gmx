<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerOneWayWall</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 1/3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// WARNING: These are unbelievably jank
var _player = collision_rectangle(bbox_left, bbox_top, bbox_right+1, bbox_bottom+1, objPlayer, false, false);
if (_player != noone){
    switch (image_angle){
        case 0:
            if (_player.xprevious &gt;= bbox_right + 5 + 1){
                _player.x = bbox_right + 5 + 1;
                _player.hspeed = 0;
            }
            break;
        case 90:
            if ((_player.yprevious - _player.gravity) &lt;= ( bbox_top - (_player.bottomToOrigin - 1) )){
                _player.y = bbox_top - _player.bottomToOrigin;
                _player.vspeed = 0;
                if (global.grav == 1){
                    _player.onPlatform = true;
                    _player.riding = id;
                }
            }   
            break;
        case 180:
            if (_player.xprevious &lt;= bbox_left - 6){
                _player.x = bbox_left - 6;
                _player.hspeed = 0;
            }
            break;
        case 270:
            if ((_player.yprevious - _player.gravity) &gt;= ( (bbox_bottom+1) + (_player.topToOrigin - 1) )){
                _player.y = (bbox_bottom+1) + 12;
                _player.vspeed = 0;
                if (global.grav == -1){
                    _player.onPlatform = true;
                    _player.riding = id;
                }
            }
            break;
    }
}

if (place_meeting(x, y, objBullet)){
    var t_bullet = instance_place(x, y, objBullet);
    if (abs(angle_difference(t_bullet.direction, image_angle)) &gt; 90){
        with (t_bullet){
            x = xprevious; y = yprevious;
            event_perform(ev_collision, objSaveBlocker);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
