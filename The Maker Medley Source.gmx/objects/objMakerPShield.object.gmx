<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlayerShield</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>appearanceFrames = 0;

//for fading between frames after a hit
fadeFrames = 0;
fadeLen = 30;
fadeSurf = noone;

image_xscale = 0;
image_yscale = 0;
image_alpha = 0;
if (global.shield &lt;= 0){
    instance_destroy();
}
shield = global.shield;
image_speed = 0;

drawXOff = 0;
drawYOff = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Free surface
if (surface_exists(fadeSurf))
    surface_free(fadeSurf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shield &gt; 0 &amp;&amp; shield != global.shield){
    if (global.shield == 0){
        with (instance_create(x, y, objExpandFade)){
            sprite_index = other.sprite_index;
            image_index = max(other.shield-1, 0);
            image_alpha = 0.3;
            alphaDec = 1/40;
            scaleInc = 0;
        }
        shield = 0;
        
        if (!global.colorBlind){  // we still need to draw the number of hits the player can take (1)
            instance_destroy();
        }
    }else{
        fadeFrames = fadeLen;
        shield = global.shield;
    }
}
if (fadeFrames &gt; 0){
    fadeFrames --;
}
image_index = global.shield-1;
if (instance_exists(objPlayer)){
    x = objPlayer.x-objPlayer.xScale;
    y = objPlayer.y;
}else if (instance_exists(objFakePlayer)){
    x = objFakePlayer.x-objFakePlayer.image_xscale;
    y = objFakePlayer.y;
}else if (instance_exists(objMakerClearKid)){
    x = objMakerClearKid.x-objMakerClearKid.image_xscale;
    y = objMakerClearKid.y;
}else{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (appearanceFrames &lt; 40){
    appearanceFrames = min(40, appearanceFrames + 1);
    image_xscale = appearanceFrames/40;
    image_yscale = image_xscale;
    image_alpha = min(1, appearanceFrames/15)*0.5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Free surface
event_perform(ev_destroy, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.screenshotMode){exit;}
if (shield &gt; 0){  // object persists when shield is "broken" in colorblind mode
    if (fadeFrames &lt;= 0){
        draw_self();
    }else{
        if (!surface_exists(fadeSurf)){
            fadeSurf = surface_create(32, 32);
        }
        if (surface_exists(fadeSurf)){
            surface_set_target(fadeSurf);
            draw_clear_alpha(c_black, 0);
            
            if (shield &gt;= 1){
                draw_sprite(sprPlayerShield, shield-1, 16, 16);
            }
            draw_set_colour_write_enable(true, true, true, false);
            draw_sprite_ext(sprPlayerShield, shield, 16, 16, 1, 1, 0, c_white, fadeFrames/fadeLen);
            draw_set_colour_write_enable(true, true, true, true);
            
            surface_reset_target();
            
            draw_surface_ext(fadeSurf, x-16, y-16, 1, 1, 0, c_white, image_alpha/2);
        }
    }
}

if (global.colorBlind &amp;&amp; global.shield &gt;= 0){
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_font(fDefault12);
    draw_set_color(c_white);
    scrDrawTextOutlineMinimal(x, y - 22*global.grav, string(global.shield + 1) + " HP", c_white, c_black);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
