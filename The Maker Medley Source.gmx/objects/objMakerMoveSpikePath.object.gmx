<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerSpike</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>16</depth>
  <persistent>0</persistent>
  <parentName>objMakerSpikeUp</parentName>
  <maskName>sprSpikeUp</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
spd = 0;
range = 1;
offset = 0;
horizontal = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//we don't want to rotate the mask - it creates slight inconsistencies. No one cares, but I'll fix it anyway.
switch(image_angle){
    case 0:
        mask_index = sprSpikeUp;
        break;
    case 90:
        mask_index = sprSpikeLeft;
        break;
    case 180:
        mask_index = sprSpikeDown;
        break;
    case 270:
        mask_index = sprSpikeRight;
        break;
}
x -= 16*image_xscale;
y -= 16*image_yscale;
xstart -= 16*image_xscale;
ystart -= 16*image_yscale;
if (image_angle mod 180 == 90)
    spikeAngle = 270;
else
    spikeAngle = 0;
if (image_angle == 90 || image_angle == 180)
    spikeYScale = -1;
else
    spikeYScale = 1;

image_angle = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (horizontal)
    x = xstart + abs((((global.count*spd-range/2) + offset + 2*range) mod (2*range)) - range) - range/2;
else
    y = ystart + abs((((global.count*spd-range/2) + offset + 2*range) mod (2*range)) - range) - range/2;
/*
if (horizontal){
    x = xstart + abs((((global.count*spd + range) + (offset + 2*range)) mod (4*range)) - 2*range) - range;
}else{
    y = ystart + abs((((global.count*spd + range) + (offset + 2*range)) mod (4*range)) - 2*range) - range;
}
//*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
