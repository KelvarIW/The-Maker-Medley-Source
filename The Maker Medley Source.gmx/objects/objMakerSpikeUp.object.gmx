<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprSpikeUp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>16</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprSpikeUp</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
mini = false;
alarm[10] = 1;
alarm[11] = 1; //determine if spike should have minispike hitbox
alphaDec = 0;
spikeAngle = 0;
spikeXScale = 1;  // S4-1 Kurath
spikeYScale = 1;
spikeIndex = 0;
nokill = false;
switch(room){
    case rStage01Dice:
    case rStage01Patrick:
    case rGeezer01:
    case rGeezerHitchcock:
        spikeIndex = 0;
        break;
    case rStage01Kurath:
    case rStage01Abstr4ktNew:
    case rChaozB:
        spikeIndex = 2;
        break;
    case rStage01Zilily:
        spikeIndex = 9;
        break;
    case rStage01Onetwentyeight:
        spikeIndex = 7;
        break;
    case rStage02Shark1:
    case rStage02Shark2:
        spikeIndex = 4;
        break;
    case rStage02Vovka:
    case rStage02Erik:
        spikeIndex = 11;
        break;
    case rStage02Klamy:
        spikeIndex = 3;
        break;
    case rStage02Abstr4ktNew:
        spikeIndex = 12;
        break;
    case rStage02Telejump:
    case rStage03Undertale:
    case rStage03UndertalePractice:
        spikeIndex = 5;
        break;
    case rStage04New_1:
        if (x &lt; 448 || (x &lt; 576 &amp;&amp; y &lt; 256) || (x &lt; 960 &amp;&amp; y &lt; 160)){
            spikeIndex = 2;
        }else if (x &lt; 848 &amp;&amp; y &gt;= 224){
            spikeIndex = 9;
        }else{
            spikeIndex = 0;
        }
        break;
    case rStage04New_2:
        if (x &lt; 336){
            spikeIndex = 7;
        }else{
            spikeIndex = 0;
        }
        break;
    case rStage04New_3:
        if ((x &lt;= 272 &amp;&amp; y &gt;= 288 &amp;&amp; y &lt; 480) || (x &gt;= 384 &amp;&amp; x &lt; 704 &amp;&amp; y &gt;= 320 &amp;&amp; y &lt;= 480)){
            spikeIndex = 4;  // Shark 1/2
        }else if (x &lt;= 272 &amp;&amp; y &gt;= 480){
            spikeIndex = 7;  // 128-Up
        }else if (x &gt;= 704){
            spikeIndex = 3;  // Klamy
        }else if (y &lt; 192){
            spikeIndex = 12;  // Abstr4kt
        }
        break;
    case rStage04New_4:
        if (x &lt;= 288 &amp;&amp; y &lt; 192){
            spikeIndex = 12;
        }else if (x &lt;= 400 &amp;&amp; y &gt;= 192){
            spikeIndex = 5;
        }
        break;
    case rFinalBoss_2:
        spikeIndex = 13;
        break;
}
mask_index = sprite_index; //before changing to IWMaker spike
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Mini-Spikes
if ((image_xscale &lt;= 0.5 &amp;&amp; image_yscale &lt;= 0.5) || mini){
    mini = true;
    switch(mask_index){
        case sprSpikeUp:
            mask_index = sprMiniUp;
            break;
        case sprSpikeDown:
            mask_index = sprMiniDown;
            break;
        case sprSpikeLeft:
            mask_index = sprMiniLeft;
            break;
        case sprSpikeRight:
            mask_index = sprMiniRight;
            break;
    }
    image_xscale = 1;
    image_yscale = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rotations
//we don't want to rotate the mask - it creates slight inconsistencies
if (sprite_index == sprSpikeLeft || sprite_index == sprSpikeRight){
    spikeAngle = 270;
}else{
    spikeAngle = 0;
}
if (sprite_index == sprSpikeLeft || sprite_index == sprSpikeDown){
    spikeYScale = -1;
}else{
    spikeYScale = 1;
}
sprite_index = sprMakerSpike;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///set image_alpha to 0.5
image_alpha = 0.5;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((room != rStage03Undertale &amp;&amp; room != rStage03UndertalePractice) &amp;&amp; (abs(x - room_width/2) &gt;= room_width*0.75 || abs(y - room_height/2) &gt;= room_height*0.75)){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (alphaDec != 0){
    image_alpha -= alphaDec;
    if (image_alpha &lt;= 0){
        instance_destroy();
    }else if (alphaDec &lt; 0 &amp;&amp; image_alpha &gt;= 1){
        image_alpha = 1;
        alphaDec = 0;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_alpha &gt;= 0.8 &amp;&amp; !nokill) scrKillPlayer();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (mini) draw_sprite_ext(sprMakerSpikeMini, spikeIndex, x + sprite_width/4, y + sprite_height/4, spikeXScale, spikeYScale, spikeAngle, image_blend, image_alpha);
else draw_sprite_ext(sprMakerSpike, spikeIndex, x + sprite_width/2, y + sprite_height/2, spikeXScale, abs(image_yscale)*spikeYScale, spikeAngle, image_blend, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
