<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerCrusher</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>objBetterBlock</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
state = 0;
timer = 0;
xAccel = 0;
yAccel = 0;
maxSpeed = 9;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Stage 4 boundaries
if (room == rStage04New_2){
    if (x &lt; 288 || x &gt; 768 || y &lt; 256)
        instance_destroy();
}

//Movement
if (place_meeting(x, y, objBlock) &amp;&amp; state == 1){
    var _block = instance_place(x, y, objBlock);
    if (room == rStage04New_2 &amp;&amp; yAccel &lt; 0){  // hotfix
        _block = noone;
    }
    
    if (instance_exists(_block)){
        if (_block.bbox_right &gt;= 0 &amp;&amp; _block.bbox_bottom &gt;= 0 &amp;&amp; _block.bbox_left &lt; 800){
            x = xprevious;
            y = yprevious;
            scrMoveContactObject(sign(hspeed), sign(vspeed), abs(speed), objBlock);
            hspeed = 0;
            vspeed = 0;
            xAccel = 0;
            yAccel = 0;
            state = 0;
            timer = 16;
            audio_play_sound(sndMakerCrusherCollide, 0, 0);
        }
    }
}else if (state == 0 &amp;&amp; instance_exists(objPlayer)){
    timer --;
    if (timer &lt;= 0)
    {
        if (collision_rectangle(round(x)+15, round(y)-16, room_width, round(y)+15, objPlayer, 0, 0) &amp;&amp; !collision_line(x, y, objPlayer.x, y, objBlock, false, true) &amp;&amp; !collision_line(x, y, objPlayer.x, y, objS4NewRift, false, true) &amp;&amp; (!place_meeting((x + 1), y, objBlock)))
        {
            state = 1;
            xAccel = 0.25;
        }
        else if (collision_rectangle(round(x)-16, round(y)-16, 0, round(y)+15, objPlayer, 0, 0) &amp;&amp; !collision_line(x, y, objPlayer.x, y, objBlock, false, true) &amp;&amp; !collision_line(x, y, objPlayer.x, y, objS4NewRift, false, true) &amp;&amp; (!place_meeting((x - 1), y, objBlock)))
        {
            state = 1;
            xAccel = -0.25;
        }
        else if (collision_rectangle(round(x)-16, round(y)-16, round(x)+15, 0, objPlayer, 0, 0) &amp;&amp; !collision_line(x, y, x, objPlayer.y, objBlock, false, true) &amp;&amp; !collision_line(x, y, x, objPlayer.y, objS4NewRift, false, true) &amp;&amp; (!place_meeting(x, (y - 1), objBlock)))
        {
            state = 1;
            yAccel = -0.25;
        }
        else if (collision_rectangle(round(x)-16, round(y)+15, round(x)+15, room_height, objPlayer, 0, 0) &amp;&amp; !collision_line(x, y, x, objPlayer.y, objBlock, false, true) &amp;&amp; !collision_line(x, y, x, objPlayer.y, objS4NewRift, false, true) &amp;&amp; (!place_meeting(x, (y + 1), objBlock)))
        {
            state = 1;
            yAccel = 0.25;
        }
        if (state == 1){
            direction = point_direction(0, 0, xAccel, yAccel);
        }
    }
}else if (state == 1){ //1 frame delay before accelerating, like in IWMaker
    hspeed = clamp(hspeed + xAccel, -maxSpeed, maxSpeed);
    vspeed = clamp(vspeed + yAccel, -maxSpeed, maxSpeed);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == 0){
    draw_self();
}else{
    draw_sprite(sprMakerCrusherMove, 1 + round(direction/90) mod 4, x, y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
