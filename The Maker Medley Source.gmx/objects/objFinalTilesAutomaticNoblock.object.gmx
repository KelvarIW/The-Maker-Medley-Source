<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFinalTiles</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>objFinalP1Tiles</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>destroyed = false;
autoTiled = false;
indexBase = 0;
image_speed = 0;
angleRot = random_range(1.75, 3.25)*choose(-1 , 1);

if (object_index == objFinalTilesAutomaticNoblock){
    if ((room == rFinalBoss_2 &amp;&amp; x &gt;= 4608) || room == rFinalBoss_3){
        sprite_index = sprFinalTilesGray;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFinalKurath">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!destroyed){
    var _realAng = 0; //take spikeAngle, and account for spikeYScale
    with (objFinalKurathSpikeUp){
        if (!destroyed){
            _realAng = spikeAngle;
            if (spikeYScale == -1){
                _realAng = (_realAng + 180) mod 360; //down -&gt; 180; left -&gt; 450 mod 360 -&gt; 90
            }
            if (place_meeting(x-dcos(_realAng+90), y-(-dsin(_realAng+90)), other)){
                event_user(0);
            }
        }
    }
    
    event_user(0);
    audio_stop_sound(sndMakerSamplePunch);
    var _snd = audio_play_sound(sndMakerSamplePunch, 0, 0);
    audio_sound_pitch(_snd, PITCH_FLUCT);
    audio_sound_gain(_snd, random_range(0.45, 0.65), 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objFinalBossChar_2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_collision, objFinalKurath);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Automatic tiling
if (!destroyed &amp;&amp; !autoTiled){
    var _hor, _vert;
    _hor = (place_meeting(x-1, y, object_index) &amp;&amp; place_meeting(x+1, y, object_index));
    _vert = (place_meeting(x, y-1, object_index) &amp;&amp; place_meeting(x, y+1, object_index));
    
    if (_hor xor _vert){
        if (_hor){
            var _left2, _right2;
            _left2 = (collision_point(x-64, y, object_index, false, true) != noone);
            _right2 = (collision_point(x+64, y, object_index, false, true) != noone);
            if (_left2 &amp;&amp; _right2){
                indexBase = 9;
            }else if (_left2){
                indexBase = 12
            }else if (_right2){
                indexBase = 6;
            }else{
                indexBase = 25;
            }
        }else if (_vert){
            var _top2, _bot2;
            _top2 = (collision_point(x, y-64, object_index, false, true) != noone);
            _bot2 = (collision_point(x, y+64, object_index, false, true) != noone);
            if (_top2 &amp;&amp; _bot2){
                indexBase = 18;
            }else if (_top2){
                indexBase = 21;
            }else if (_bot2){
                indexBase = 15;
            }else{
                indexBase = 28;
            }
        }else{ //how???
            image_index = 24;
        }
    }else if (_hor &amp;&amp; _vert){
        indexBase = 24;
        image_index = 24;
    }else{
        indexBase = 0;
    }
    autoTiled = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy
if (!destroyed){
    hspeed = random_range(-2, 2);
    vspeed = random_range(-3, -1.8);
    gravity = 0.138;
    depth -= 1;
    destroyed = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_user(1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
