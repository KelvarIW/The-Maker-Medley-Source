<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFinalLarry</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>objPlayerKiller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>state = 0;
if (x &gt; 400){image_xscale = -1;}else{image_xscale = 1;}
image_speed = 0;
vspeed = 12;

superjump = false;
shelljump = false;
shellArc = 0;
bounceTotal = 4;
bounces = bounceTotal;
shootNum = 4;
surf = -4;
glowSurf = -4;
glowAlpha = 0;
iframes = -1;
iframesWhenHit = 30;
nametag = noone;
coinTimer = -1;
redMergeAmt = 0;
coinImageBlend = make_color_rgb(255, 127, 127);
deathSmileAlpha = 1;
healthbar = noone;
if (buff()){
    hpInit = 6;
}else{
    hpInit = 5;
}
hp = hpInit;
storedHit = false;
drawXOff = 0;
drawYOff = 0;
alarm[2] = 40;

backGlow = 0;
backGlowAng = -pi/2;
backScaleMult = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
    
if (surface_exists(glowSurf))
    surface_free(glowSurf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Take the die
with (objFinalRNGDie){
    event_user(0);
    targetObj = other.object_index;
    grow = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shoot out magic stars
if (instance_exists(objPlayer)){
    var _inst;
    _inst = instance_create(x+44*image_xscale, y-18, objFinalLarryMagic);
    _inst.direction = point_direction(_inst.x, _inst.y, objPlayer.x, objPlayer.y);
    audio_play_sound(sndMakerSampleMagic, 0, 0);
    shootNum --;
    if (shootNum &gt; 0){
        if (buff()){
            alarm[1] = 24;
        }else{
            alarm[1] = 30;
        }
    }else{
        shelljump = true;
        shellArc = 0;
        bounces = 4;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Prepare to jump high
if (instance_exists(objPlayer)){
    if (buff()){
        shootNum = 4;
        alarm[1] = 16;
    }else{
        shootNum = 3;
        alarm[1] = 24;
    }
    superjump = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (healthbar){
    x = 704;//other.x;
    y = 96;//other.y - 96;
    hp = other.hp;
    healthScale = hp/hpMax;
}
if (iframes &gt;= 0){
    if (iframes &gt; iframesWhenHit/2)
        image_alpha = 0.5;
    else
        image_alpha = lerp(1, 0.5, iframes / (iframesWhenHit/2));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (state == 0){
    if (!place_meeting(x, y, objFinalLarryPipe)){
        gravity = 0.3;
        state = 1;
        alarm[0] = 50;
    }
    if (instance_exists(objPlayer)){
        image_xscale = sign(objPlayer.x-x);
    }
}else if (state == 1){
    if (instance_exists(objPlayer)){
        image_xscale = sign(objPlayer.x-x);
    }
    if (vspeed &gt; 0 &amp;&amp; place_meeting(x, y + vspeed + gravity, objBlock)){
        move_contact_solid(270, abs(vspeed + gravity));
        if (superjump &amp;&amp; instance_exists(objPlayer)){
            vspeed = -12.8;
            superjump = false;
            audio_play_sound(sndMakerPlayerGrowBig, 0, 0);
        }else if (shelljump &amp;&amp; instance_exists(objPlayer)){
            hspeed = 10*sign(objPlayer.x-x);
            shelljump = false;
            state = 2;
            sprite_index = sprFinalLarryShell;
            storedHit = false;
            image_xscale = sign(hspeed);
            gravity = 0;
            vspeed = 0;
            with (objFinalScreenshake){
                shake = 5;
            }
            audio_play_sound(sndMakerBlockCrash, 0, 0);
        }else{
            vspeed = -4;
            y -= vspeed;
        }
        
        if (nametag == noone){
            nametag = scrFinalBossNametag(x, bbox_top-8, 0);
        }
        if (healthbar == noone){
            healthbar = instance_create(704, 96, objMakerBossHP);
            healthbar.hpMax = hpInit;
            healthbar.hp = hp;
        }
    }
}
if (state == 2){
    image_xscale = sign(hspeed);
    if (hspeed &lt; 0 &amp;&amp; bbox_left+hspeed &lt; 0){
        x = -(bbox_left+hspeed);
        hspeed = abs(hspeed);
        with (objFinalScreenshake){
            shake = 5;
        }
        audio_play_sound(sndMakerBlockCrash, 0, 0);
        
        if (instance_exists(objPlayer)){  // hitting wall
            var _inst;
            _inst = instance_create(x, y, objFinalLarryMagic);
            _inst.direction = point_direction(_inst.x, _inst.y, objPlayer.x, objPlayer.y);
            //_inst.speed = 3;
            audio_play_sound(sndMakerSampleMagic, 0, 0);
        }
    }else if (hspeed &gt; 0 &amp;&amp; bbox_right+hspeed &gt; 800){
        x = 800 - (bbox_right+hspeed - 800);
        hspeed = -abs(hspeed);
        with (objFinalScreenshake){
            shake = 5;
        }
        
        if (instance_exists(objPlayer)){  // hitting wall
            var _inst;
            _inst = instance_create(x, y, objFinalLarryMagic);
            _inst.direction = point_direction(_inst.x, _inst.y, objPlayer.x, objPlayer.y);
            //_inst.speed = 3;
            audio_play_sound(sndMakerSampleMagic, 0, 0);
        }
        audio_play_sound(sndMakerBlockCrash, 0, 0);
    }        
    shellArc += 4*pi/151.4;
    if (shellArc &gt;= pi){
        shellArc -= pi;
        bounces --;
        if (bounces &lt;= 0){
            gravity = 0.3;
            state = 1;
            alarm[0] = 50;
            hspeed = 0;
            x = xstart;
            sprite_index = sprFinalLarry;
            y -= 17;
            if (instance_exists(objPlayer)){
                image_xscale = sign(objPlayer.x-x);
            }
        }
        /*  // BUFF!  -  shoot magic when hitting floor
        if (buff() &amp;&amp; instance_exists(objPlayer)){
            var _inst;
            _inst = instance_create(x+44*image_xscale, y-18, objFinalLarryMagic);
            _inst.direction = point_direction(_inst.x, _inst.y, objPlayer.x, objPlayer.y);
            //_inst.speed = 3;
            audio_play_sound(sndMakerSampleMagic, 0, 0);
        }*/
        with (objFinalScreenshake){
            shake = 5;
        }
        audio_play_sound(sndMakerBlockCrash, 0, 0);
    }
    
    var _h = 48;
    if (buff()){
        _h = 60;
    }
    y = 455 - _h*sin(shellArc);
}else if (state == 3){
    if (bbox_bottom &lt; -64){
        instance_destroy();
        with (objFinalRNGDie){
            targetObj = objFinalBossChar_1;
            event_user(0);
        }
        with (objFinalBossChar_1){
            alarm[0] = 40;
        }
    }else{
        if (coinTimer &lt;= 0){
            var _inst;
            _inst = instance_create(x, y, objFinalLarryCoin);
            _inst.image_blend = coinImageBlend;
            
            if (buff()){coinTimer = 1;}else{coinTimer = 2;}
        }else{
            coinTimer --;
        }
    }
    if (deathSmileAlpha &gt; 0)
        deathSmileAlpha -= 0.035;
}

scrFinalCalcGlowAlpha(0.05, 0.1);

backGlowAng += pi/40;
backGlow = (sin(backGlowAng)/2 + 0.5);
if (state &gt; 0){
    backScaleMult = min(backScaleMult+0.025, 1);
}

if (iframes &gt; 0){
    iframes --;
    if (iframes &lt;= 0){
        image_alpha = 1;
        if (storedHit &amp;&amp; hp &gt; 1 &amp;&amp; sprite_index != sprFinalLarryShell)
            event_user(0);
    }
}

if (hp &lt;= 0 &amp;&amp; redMergeAmt &lt; 1){
    redMergeAmt = min(redMergeAmt + 0.05, 1);
    image_blend = merge_colour(c_white, c_red, redMergeAmt);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == sprFinalLarryShell){
    with (other){
        x = xprevious;
        y = yprevious;
        scrMoveContactObject(sign(hspeed), 0, abs(hspeed), other);
        
        var _inst;
        _inst = instance_create(x, y, objBulletReflected);
        _inst.hspeed *= sign(x-other.x);
        
        explode = false;
        instance_destroy();
    }
}else{
    if (iframes &gt; 0){
        if (iframes &lt;= 10)
            storedHit = true;
    }else{
        event_user(0);
    }
    with (other){
        x = xprevious;
        y = yprevious;
        scrMoveContactObject(sign(hspeed), 0, abs(hspeed), other);
        scrMoveContactObject(0, sign(vspeed), abs(vspeed), other);
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Register a hit
hp --;
image_alpha = 0.5;
with (healthbar){
    event_user(0);
}
if (hp &lt;= 0){
    sprite_index = sprFinalLarryShell;
    with (objFinalLarryMagic){
        fade = -1;
    }
    with (instance_create(x+28*image_xscale, y-2, objFinalLarryMagicSpawner))
        image_xscale *= other.image_xscale;
    state = 3;
    with (objFinalRNGDie){
        grow = true;
    }
    alarm[0] = -1;
    alarm[1] = -1;
    audio_play_sound(sndFinalLarryDeath, 0, 0);
    vspeed = -3;
    gravity = -0.085;
    with (nametag){
        fadeout = true;
    }
}else
    iframes = iframesWhenHit;

storedHit = false;
var _snd = audio_play_sound(sndFinalBossDamage, 0, 0);
audio_sound_pitch(_snd, PITCH_FLUCT);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
    
if (surface_exists(glowSurf))
    surface_free(glowSurf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _sprShown;
if (image_xscale == 1)
    _sprShown = sprite_index;
else{
    if (sprite_index == sprFinalLarry)
        _sprShown = sprFinalLarryFlipped;
    else
        _sprShown = sprite_index;
}
var _sprInd;
if (_sprShown == sprFinalLarryShell){
    _sprInd = global.count * 16/50;
}else{
    _sprInd = (global.count mod 20)/5 + 4*((global.count mod 30) div 15);
}

if (!surface_exists(surf))
    surf = surface_create(128, 128);

if (!surface_exists(glowSurf))
    glowSurf = surface_create(128, 128);

if (surface_exists(surf)){
    surface_set_target(surf);
    draw_clear_alpha(c_black, 0);
    
    if (sprite_index == sprFinalLarry){
        draw_sprite_ext(sprFinalLarryWand, 0, 64+28*image_xscale, 64+8, -2*image_xscale, 2, 0, c_white, 1);
    }
    draw_sprite_ext(_sprShown, _sprInd, 64, 64, 1, 1, image_angle, image_blend, 1);
    
    surface_reset_target();
    
    if (surface_exists(surf)){ //make sure "surf" still exists
        if (iframes &lt;= 0)
            draw_surface_ext(surf, x-64, y-64, 1, 1, 0, image_blend, 1);
        else
            draw_surface_ext(surf, x-64, y-64, 1, 1, 0, image_blend, image_alpha);
    }
}

if (global.finalGlowEnabled &amp;&amp; global.extraEffects &amp;&amp; drawXOff == 0){
    if (surface_exists(glowSurf)){
        surface_set_target(glowSurf);
        draw_clear_alpha(c_black, 0);
        draw_sprite_ext(_sprShown, _sprInd, 64, 64, 1, 1, image_angle, c_white, 1);
        surface_reset_target();
        
        if (glowAlpha &gt; 0 &amp;&amp; surface_exists(glowSurf)){
            shader_set(shdFinalWhite);
            shader_set_uniform_f(global.finalGlowHandle, 128, 128, 10, glowAlpha*image_alpha);
            draw_surface(glowSurf, x-64, y-64);
            shader_reset();
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
