<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerLaserOn</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-11</depth>
  <persistent>0</persistent>
  <parentName>objMakerLaser</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
rise = -1;
keepRising = false;
yMax = 608;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (instance_exists(objPlayer) &amp;&amp; objPlayer.bbox_bottom &gt;= bbox_top){ //y - 9 + 8
    scrKillPlayer();
}

if (rise &gt;= 0){
    if (rise &lt;= 9){
        rise += (rise+1)/10;
    }else{
        rise ++;
    }
    
    var _riseTime, _fallTime, _risenDelay;
    if (!buff()){
        _riseTime = 40;
        _risenDelay = 0;
        _fallTime = 16;
    }else{
        _riseTime = 48;
        _risenDelay = 0;
        _fallTime = 16;
    }
    
    if (rise &lt;= _riseTime){
        y = min(608 - 80*sin(pi*rise/(2*_riseTime)), yMax);
    }else if (rise &gt; _riseTime + _risenDelay){
        y = min(608 - 80*sin(pi/2 + pi*(rise - (_riseTime + _risenDelay))/(2*_fallTime)), 592);
        if (rise - (_riseTime + _risenDelay) &gt;= _fallTime){
            rise = -90;
            y = 592;
            yMax = 592;
        }
    }
}else if (keepRising){  // buffed mode faster lava
    if (rise == -30){
        // warning triangles
        var _inst;
        for (var i=-1; i&lt;=1; i++){
            _inst = instance_create(400 + 248*i, 504, objMakerDangerTriangle);
            _inst.alarm[0] = abs(rise);
        }
    }
    rise = min(rise+1, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _hBorder = -8;
for(var i=_hBorder;i&lt;25-_hBorder;i++){
    draw_sprite(sprMakerLaserOn, image_index, 32*i + 16, y);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
