<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTriggerMask</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-6</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>xPos = 288;
xView = xPos;
xViewInit = xView;
roomViewXTo = (x - 128);
spawnNext = 1;
surf = -4;
counterSurf = -4;

topPipeY = -1;
topPipeYMin = 0;
topPipeYMax = 0;
topPipeYInc = 0;

botPipeYMin = 0;
botPipeYMax = 0;
botPipeYInc = 0;
botPipeY = -1;
counterAlpha = 0;
counterScore = 0;
panAmt = -1;

drawXOff = 0;
drawYOff = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_other, ev_room_end);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _viewXPrev = view_xview;

if (xPos &gt; 1772){
    xPos = 1772;
    if (view_xview &lt; room_width-800){
        view_xview = min(view_xview+4, room_width-800);
    }
}
if (spawnNext &lt;= 4 &amp;&amp; xPos-272 &gt; 300*spawnNext){
    switch(spawnNext){
        case 1:
            topPipeY = 304 - 128;
            botPipeY = 304 + 128;
            break;
        case 2:
            topPipeY = 80;
            botPipeY = 240;
            break;
        case 3:
            topPipeY = 368;
            botPipeY = 528;
            break;
        case 4:
            topPipeY = 280;
            topPipeYMin = 120;
            topPipeYMax = 320;
            topPipeYInc = -3;
            botPipeY = 480;
            botPipeYInc = -3;
            botPipeYMin = 320;
            botPipeYMax = 520;
            break;
    }
    if (topPipeY != -1 || botPipeY != -1){
        var t_pipe;
        if (topPipeY != -1){
            t_pipe = instance_create(x + 704, topPipeY, objS2FlappyPipe);
            t_pipe.yMin = topPipeYMin;
            t_pipe.yMax = topPipeYMax;
            t_pipe.yInc = topPipeYInc;
            t_pipe.overPeak = (spawnNext == 0 || spawnNext == 0);
            t_pipe.scale = -1;
        }
        if (botPipeY != -1){
            t_pipe = instance_create(x + 704, botPipeY, objS2FlappyPipe);
            t_pipe.yMin = botPipeYMin;
            t_pipe.yMax = botPipeYMax;
            t_pipe.yInc = botPipeYInc;
            t_pipe.overPeak = (spawnNext == 0 || spawnNext == 0);
            t_pipe.incrementCountX = 0;
        }
        topPipeY = -1;
        botPipeY = -1;
        topPipeYInc = 0;
        botPipeYInc = 0;
    }
    spawnNext ++;
}

//adjust Flappy Fruit objects to sync w/ camera panning
var _xAdjust = (xPos - xView);

with (objS2FlappyShip){
    x -= _xAdjust;
}
with (objS2FlappyPipe){
    x -= _xAdjust;
    if (incrementCountX != -1 &amp;&amp; x &lt; ((other.x + 120) + (view_xview - other.roomViewXTo)) &amp;&amp; instance_exists(objS2FlappyShip) &amp;&amp; !global.dead){
        other.counterScore ++;
        var _snd = audio_play_sound(sndMakerSampleOK, 0, 0);
        audio_sound_pitch(_snd, 1.1);
        incrementCountX = -1;
    }
}

with (objSave){
    if (xstart &gt;= 880 &amp;&amp; xstart &lt; 1536){
        x -= _xAdjust;
        if (bbox_right &lt;= view_xview-3){
            instance_destroy();
        }
    }
}
with (objMakerCirclePart){
    x -= _xAdjust;
}
with (objBlock){
    if (xstart &gt;= 880 &amp;&amp; xstart &lt; 1536){
        x -= _xAdjust;
        if (bbox_right &lt;= view_xview-3){
            instance_destroy();
        }
    }
}
xView = xPos;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (panAmt != -1 &amp;&amp; panAmt &lt; 1){
    panAmt = min(panAmt + 0.025, 1);
    view_xview = lerp(592, roomViewXTo, panAmt);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
if (surface_exists(counterSurf))
    surface_free(counterSurf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.flappyStarted &amp;&amp; global.savePlayerX &gt;= 880){  // unlike Stage 2's Flappy screen, this room has a save well before the Flappy section. If the player saves at the first save, reaches the fruit w/o saving at Save #2, dies in the Flappy Fruit section and resets, they should not start in the Flappy Fruit ship
    with (objS2FlappyShip){
        openAngle = 0;
        active = true;
        sprite_index = sprS2FlappyShipActive;
        x -= 20;
        pHeadXOff = clamp(global.storedVal[0], -8, 8);
        if (global.storedVal[1] == -1){
            pHeadScale = -1;
        }
    }
    instance_destroy(objPlayer);
    with (objMakerCamera)
        instance_destroy();
    view_xview = roomViewXTo;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!surface_exists(surf)){
    surf = surface_create(480, 608);
}

if (surface_exists(surf)){
    surface_set_target(surf);
    draw_clear_alpha(c_black, 0);
    if (xView &lt; 580){
        draw_set_color(make_color_rgb(65, 35, 49));
        draw_rectangle(256-xView, 416, 543-xView, 1215, false);
        draw_set_color(c_white);
        
        for(var i=288; i&lt;=480; i+=32){
            draw_sprite(sprS2SmoothBlock, 2, i-xView, 384);
        }
        for(var j=11; j&lt;38; j+=1){
            draw_sprite(sprS2SmoothBlock, 7, 544-xView, j*32);
        }
        
        draw_sprite(sprS2SmoothBlock, 4, 512-xView, 320);
        draw_sprite(sprS2SmoothBlock, 5, 544-xView, 320);
        draw_sprite(sprS2SmoothBlock, 6, 512-xView, 352);
        draw_sprite(sprS2SmoothBlock, 3, 512-xView, 384);
        draw_sprite(sprS2SmoothBlock, 1, 256-xView, 384);
    }
    surface_reset_target();
    draw_surface(surf, x + drawXOff, drawYOff);
    
    if (counterAlpha &gt; 0){
        if (!surface_exists(counterSurf)){
            counterSurf = surface_create(128, 128);
        }
        if (surface_exists(counterSurf)){
            surface_set_target(counterSurf);
            draw_clear_alpha(c_black, 0);
            draw_set_font(fFlappyCounter);
            draw_set_halign(fa_center);
            draw_set_valign(fa_middle);
            draw_text_outline(64, 64, string(counterScore), 3, c_black, 12);
            surface_reset_target();
            
            draw_surface_ext(counterSurf, x + ((room_width - 808) - x)/2 - 64, 32, 1, 1, 0, c_white, counterAlpha);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
