<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTelePlayerIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprPlayerMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>initialized = false;
xScale = 1;
image_speed = 0;
//wasInRift = false;
visible = (room != rStage04New_4);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (initialized &amp;&amp; place_meeting(x+hspeed, y, objBlock)){
    x = xprevious; //in the case that the player is &lt; 3 pixels from the block when sending the copy.
    scrMoveContactObject(sign(hspeed), 0, abs(hspeed), objBlock);
    if (instance_exists(objPlayer)){
        event_user(1);
    }else{
        var _fade;
        _fade = instance_create(x, y, objMakerTeleFade);
        _fade.sprite_index = sprite_index;
        _fade.image_xscale = xScale;
        _fade.hspeed = -hspeed/2.5;
        audio_play_sound(sndMakerTeleCancel, 0, 0);
    }
    instance_destroy();
}

/*  // Rift splashing  --  Removed
if (room == rStage04New_4 &amp;&amp; !wasInRift &amp;&amp; place_meeting(x, y, objS4NewRiftNokill)){
    var _col;
    _col = instance_place(x, y, objS4NewRiftNokill);
    if (instance_exists(_col) &amp;&amp; _col .x == 400 &amp;&amp; _col.y == 224){
        repeat(irandom_range(5, 7)){
            with (instance_create(x, y, objMakerCirclePart)){
                color = c_white;
                direction = other.direction + irandom_range(167, 195);
                gravity = random_range(0.06, 0.11);
                speed = random_range(3.7, 5.5);
                rad = random_range(7, 10);
                rift = true;
            }
        }
        wasInRift = true;
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create player
with (objPlayer){ //works even if the player has lost the powerup, as it does in IWMaker
    x = other.x;
    y = other.y;
    xScale = other.xScale;
    xprevious = x;
    yprevious = y;
    djump = 1;
}
audio_play_sound(sndMakerTeleCollide, 0, 0);
if (place_meeting(x, y, objMakerSpikeUp))
    scrKillPlayer();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Choose sprite and check if in block
if (!instance_exists(objPlayer))
    exit;

switch(objPlayer.sprite_index){
    case sprPlayerIdle:
        sprite_index = sprTelePlayerIdle;
        break;
    case sprPlayerRunning:
        sprite_index = sprTelePlayerRunning;
        break;
    case sprPlayerJump:
        sprite_index = sprTelePlayerJump;
        break;
    case sprPlayerPreFall:
        sprite_index = sprTelePlayerPreFall;
        break;
    case sprPlayerFall:
        sprite_index = sprTelePlayerFall;
        break;
}

hspeed = 3*xScale;
if (place_meeting(x+xScale, y, objBlock)){
    var _fade;
    _fade = instance_create(x, y, objMakerTeleFade);
    _fade.sprite_index = sprite_index;
    _fade.image_xscale = xScale;
    _fade.hspeed = -hspeed/2.5;
    audio_play_sound(sndMakerTeleCancel, 0, 0);
    instance_destroy();
}else{
    initialized = true;
    audio_play_sound(sndMakerTeleShoot, 0, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _drawY;
_drawY = y;
if ((sprite_index == sprTelePlayerIdle &amp;&amp; floor(image_index) == 1) || (sprite_index == sprTelePlayerRunning &amp;&amp; (floor(image_index) mod 4) != 0))
    _drawY ++;
if (sprite_index == sprTelePlayerIdle)
    _drawY ++; //extra 1 pixel lower always

draw_sprite_ext(sprite_index, image_index, x, y, xScale, 1, 0, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
