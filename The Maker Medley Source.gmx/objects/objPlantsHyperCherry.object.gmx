<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlantsCherryHit</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objPlantsCherry</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
inheritAttacking = false;  // bouncing behavior
hue = 0;
moveDelay = 0;
spdInc = 1.44;  // every cycle (10 frames)
friction = spdInc/20;

shakeXOff = 0;
shakeYOff = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

shakeXOff = 0;
shakeYOff = 0;
if (!dead &amp;&amp; !frozen){
    if ((bbox_right+1) &gt;= 800){
        var _diff = ((bbox_right+1) - 800);
        x -= 2*_diff;  // "bounce" off the right edge
        hspeed *= -1;
    }
    
    if (!killing &amp;&amp; instance_exists(objPlantsCtrl)){
        attacking = noone;
        with (objPlantsPlant){  // check *all* plants in that region
            if ((row == other.row &amp;&amp; !dead &amp;&amp; scrPlantsDetectable() &amp;&amp; (object_index != objPlantsSpringtrap || !(other.hspeed &lt; 0 &amp;&amp; x &lt; other.bbox_left))) &amp;&amp; ((other.hspeed &lt; 0 &amp;&amp; (bbox_right+1) &gt;= other.bbox_left &amp;&amp; (bbox_right+1) &lt;= (other.bbox_left - other.hspeed)) || (other.hspeed &gt; 0 &amp;&amp; bbox_left &lt;= (other.bbox_right+1) &amp;&amp; bbox_left &gt;= ((other.bbox_right+1)- other.hspeed)))){
                other.attacking = id;
            }
        }
        
        if (instance_exists(attacking) &amp;&amp; !attacking.dead){
            // Deal damage instantly
            with (attacking){
                hp -= 1;
                event_user(1);
            }
            // bounce off the plant
            hspeed = (-sign(hspeed)) * max(abs(hspeed), 5.5);
        }
        attacking = noone;
    }
    
    if (global.colorBlind){
        var _shakeMag = 4, _shakeAng = random(360);
        shakeXOff = _shakeMag *  dcos(_shakeAng);
        shakeYOff = _shakeMag * -dsin(_shakeAng);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!frozen){
    event_perform_object(objPlantsEnemy, ev_step, ev_step_normal);
    if (!dead  &amp;&amp; (!killing || (killing &amp;&amp; killingState &gt;= 1))){
        moveDelay --;
        if (moveDelay &lt;= 0){
            if (!killing){
                hspeed -= spdInc;
            }else{
                speed += spdInc;
            }
            friction = spdInc/20;
            image_index = 0;
            hspeed = max(hspeed, -8);
            moveDelay += 10;
        }else if (moveDelay &lt;= 4){
            image_index = 1;
        }
    }
    
    hue += 2.5 * (delta_time/20000);
    if (hue &gt;= 255){
        hue -= 255;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game Over `killing` animation
if (killingState == 0){
    speed = 0;
}else if (killingState == 1){
    moveDelay = 10;
    if (instance_exists(objPlantsPlayerCage)){
        direction = point_direction(x, y, objPlantsPlayerCage.x, objPlantsPlayerCage.y);
        speed = spdInc;
        friction = spdInc/20;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shadow
x += shakeXOff; y += shakeYOff;
event_inherited();
x -= shakeXOff; y -= shakeYOff;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create gore, and pass on this object's hue
if (bodyState &gt;= 0 &amp;&amp; bodyState &lt; goreAmt){
    x += shakeXOff; y += shakeYOff;
    event_inherited();
    if (bodyState &gt;= 1){  // failsafe
        if (instance_exists(gore[(bodyState-1)])){
            gore[(bodyState-1)].hue = hue;
        }
    }
    x -= shakeXOff; y -= shakeYOff;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw enemy
var _heightOff = 12*max(scaleTo - image_yscale, 0);  // scale from the bottom of the sprite, not the center
x += shakeXOff; y += shakeYOff;
y += _heightOff;

var _blend = make_color_hsv(hue, 255, 204);

scrPlantsCrushStart(64, 128 - 12*image_yscale);
if (!dead || crushed){
    var _glowAlpha = 0;
    if ((!instance_exists(shield) || shield.fallen) &amp;&amp; glowFrame &gt; 0){
        _glowAlpha = scrPlantsGlow(glowFrame, glowLen);
    }
    draw_sprite_ext(sprPlantsCherryHit, 2 + image_index, floor(x), floor(y  +  12*(scaleTo - image_yscale)), image_xscale, image_yscale, image_angle, _blend, image_alpha);
    if (_glowAlpha &gt; 0){
        draw_sprite_ext(sprPlantsCherryHit, 2 + image_index, floor(x), floor(y  +  12*(scaleTo - image_yscale)), image_xscale, image_yscale, image_angle, c_white, _glowAlpha);
    }
    
    if (bodyState == 0){
        draw_sprite_ext(sprPlantsCherryHit, 4 + image_index, floor(x)+2*image_xscale, floor(y  +  12*(scaleTo - image_yscale))  -  4*image_yscale, image_xscale, image_yscale, image_angle, _blend, image_alpha);
        if (_glowAlpha &gt; 0){
            draw_sprite_ext(sprPlantsCherryHit, 4 + image_index, floor(x)+2*image_xscale, floor(y  +  12*(scaleTo - image_yscale))  -  4*image_yscale, image_xscale, image_yscale, image_angle, c_white, _glowAlpha);
        }
    }
}
scrPlantsEnemyDrawShield();

scrPlantsCrushEnd(crushTimer);
x -= shakeXOff; y -= shakeYOff;
y -= _heightOff;

event_perform_object(objPlantsEnemy, ev_other, ev_user0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
