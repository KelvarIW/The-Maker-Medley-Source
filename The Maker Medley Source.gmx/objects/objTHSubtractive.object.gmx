<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTHSubtractive</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
image_alpha = 0;
image_xscale = 1 + (x mod 0.7);
slowDistance = (x mod 4) + (y mod 4);
spawner = noone;

if (!global.tonemapperEnabled){
    image_xscale *= 1.6;
    slowDistance /= 4;
}
image_xscale /= 3;  // sprite quality
image_yscale = image_xscale;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_alpha &lt; 1)
    image_alpha = min(image_alpha+0.035, 1);

var _dirTo;
if (friction == 0){
    if (distance_to_point(304, 192) &lt;= slowDistance){
        friction = speed/10;
    }else{
        if (instance_exists(spawner)){
            _dirTo = point_direction(x, y, spawner.x, spawner.y);
        }else{
            _dirTo = point_direction(x, y, 304, 192);
        }
        
        if (sign(hspeed) == sign(dcos(_dirTo))){
            hspeed += 0.5*dcos(_dirTo);
        }else{
            hspeed += 2*dcos(_dirTo);
        }
        
        if (sign(vspeed) == -sign(dsin(_dirTo))){
            vspeed -= 0.5*dsin(_dirTo);
        }else{
            vspeed -= 2*dsin(_dirTo);
        }
        
        speed = min(9, speed);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
