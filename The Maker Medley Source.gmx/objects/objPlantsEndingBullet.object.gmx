<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlantsEnemyBullet</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//movement perpendicular to grass
z = 0;
espeed = 0;  // e = elevation
egrav = 0.165;

speedInit = 0;
stopped = false;
image_speed = 14/50;

scaleTo = 1;
image_xscale = 0;
image_yscale = 0;

scaleMult = 1;
alphaMult = 1;
row = clamp((y-160) div 64, 0, 5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// "bouncing" in arena
if (bbox_left &lt; 96 &amp;&amp; hspeed &lt; 0){
    x -= (bbox_left - 96);
    hspeed *= -1;
}
if ((bbox_right+1) &gt; 672 &amp;&amp; hspeed &gt; 0){
    x -= ((bbox_right+1) - 672);
    hspeed *= -1;
}
if (bbox_top &lt; 160 &amp;&amp; vspeed &lt; 0){
    y -= (bbox_top - 160);
    vspeed *= -1;
}
if ((bbox_bottom+1) &gt; 544 &amp;&amp; vspeed &gt; 0){
    y -= ((bbox_bottom+1) - 544);
    vspeed *= -1;
}

// z (elevation) movement and scaling
if (egrav &gt; 0){
    espeed += egrav;
    z += espeed;
    if (z &gt;= 0 &amp;&amp; espeed &gt; 0){
        speed *= 0.5;
        espeed *= -0.5;
        if (abs(espeed) &lt; 0.4){
            z = 0;
            espeed = 0;
            egrav = 0;
        }else{
            z = espeed;
        }
    }
}else if (speed &gt; 0){
    speed *= 0.5;
    if (speed &lt;= 0.4){
        speed = 0;
        stopped = true;
        x = roundSane(x);
        y = roundSane(y);
    }
}

scaleMult = 0.6 + 0.4*max(-z/80, 0);
if (scaleMult &gt; 1){
    scaleMult = 1;
}

if (image_xscale &lt; scaleTo){
    image_xscale = min(image_xscale + (scaleTo/16), scaleTo);
    image_yscale = image_xscale;
}

// Collisions with plants
if (!stopped &amp;&amp; scaleTo &gt; 0){
    var _colliding;
    _colliding = collision_line(xprevious, yprevious, x, y, objPlantsPlant, false, false);
    if (_colliding != noone &amp;&amp; !_colliding.dead){
        with (_colliding){
            if (!scrPlantsPlantTooLow() &amp;&amp; scrPlantsDetectable()){
                var _dmg;
                if (other.speed &gt; 2 &amp;&amp; !scrPlantsInvincible()){
                    _dmg = min(other.scaleTo/2, hp);
                }else{
                    _dmg = 0;
                }
                hp -= _dmg;
                
                if (_dmg &gt; 0){
                    with (other){
                        speed = max(speed - speedInit * (_dmg/scaleTo), 0);
                        if (speed &lt; 0.4){
                            speed = 0;
                        }
                    }
                    event_user(1);
                }
            }
        }
    }
    
    stopped = (speed == 0);
    //row = clamp((y-160) div 64, 0, 5);
}else{
    /*image_alpha -= 0.03;
    if (image_alpha &lt;= 0){
        instance_destroy();
    }*/
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shadow
var _shadowDim = scrPlantsShadow(sprite_width, sprite_height, scaleMult);
draw_sprite_ext(sprPlantsShadow, 0, x-view_xview, y, _shadowDim[0] * scaleMult/0.6, _shadowDim[1] * scaleMult/0.6, 0, c_white, image_alpha);// * min(1.6-scaleMult, 1));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw self
draw_sprite_ext(sprite_index, image_index, x, y + z*2/3, image_xscale*scaleMult, image_yscale*scaleMult, image_angle, image_blend, image_alpha*alphaMult);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
