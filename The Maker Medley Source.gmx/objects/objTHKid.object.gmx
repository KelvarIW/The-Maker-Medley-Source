<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprTHKidCape</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprTHFocus</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imageCounter = 0; 
armState = 0;
focused = 0;
hitboxShownPercent = 0; //increases when focused
shootDelay = -1;
image_xscale = 0.5;
image_yscale = 0.5;
frozen = false;

surf = -4;  // kid sprite is drawn to this surface
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>imageCounter ++;

if (!frozen){
    if (scrButtonCheck(global.jumpButton)){
        focused = 1;
    }else{
        focused = 0;
    }
    
    if (focused == 0){
        if (hitboxShownPercent &gt; 0){
            hitboxShownPercent = max(hitboxShownPercent-0.1, 0);
        }
    }else{
        if (hitboxShownPercent &lt; 1){
            hitboxShownPercent = min(hitboxShownPercent+0.1, 1);
        }
    }
    
    var _updown, _leftright, _distMult;
    if ((scrButtonCheck(global.upButton) || scrButtonCheck(global.downButton)) &amp;&amp; (scrButtonCheck(global.leftButton) || scrButtonCheck(global.rightButton)))
        _distMult = 0.75;
    else
        _distMult = 1;
    
    if (focused)
        _distMult *= 0.5;
    
    if (scrButtonCheck(global.downButton))
        y += _distMult*6;
    else if (scrButtonCheck(global.upButton))
        y -= _distMult*6;
        
    if (scrButtonCheck(global.rightButton))
        x += _distMult*6;
    else if (scrButtonCheck(global.leftButton))
        x -= _distMult*6;
}

x = clamp(x, 76, 531);
y = clamp(y, 52, 560);
    
if (shootDelay &gt; 0)
    shootDelay --;

if (focused || (x == xprevious &amp;&amp; y == yprevious))
    armState = 1;
else
    armState = 0;

if (scrButtonCheck(global.shootButton) &amp;&amp; shootDelay &lt;= 0 &amp;&amp; instance_exists(objTHCtrl) &amp;&amp; objTHCtrl.phase &gt; 0 &amp;&amp; objTHCtrl.phase &lt; 9){
    with (instance_create(x+(14-4*armState), y - 15, objBullet)){
        vspeed = -16;
        hspeed = 0;
        sprite_index = sprMakerBulletVert;
        if (place_meeting(x, y, objBlock) &amp;&amp; !place_meeting(x-4, y, objBlock))
            x -= 4;
    }
    with (instance_create(x-(14-4*armState), y - 15, objBullet)){
        vspeed = -16;
        hspeed = 0;
        sprite_index = sprMakerBulletVert;
        if (place_meeting(x, y, objBlock) &amp;&amp; !place_meeting(x+4, y, objBlock))
            x += 4;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objTHBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (other.image_alpha &gt;= 1 &amp;&amp; other.image_xscale != 0 &amp;&amp; !other.nokill){
    event_user(0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objTHCtrl">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Slightly inaccurate due to shearing but who will notice lmao
// I'll scale the sprite down for the check just in case
if (other.image_alpha &gt;= 1 &amp;&amp; other.image_xscale != 0){
    var _col = true;
    with (other){
        var _xscale = image_xscale;
        var _yscale = image_yscale;  // future-proofing
        image_xscale *= 0.8;
        image_yscale *= 0.8;
        _col = place_meeting(x, y, other);
        image_xscale = _xscale;
        image_yscale = _yscale;
    }
    if (_col){
        event_user(0);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Damage/Kill player
if (!frozen &amp;&amp; image_alpha &gt;= 1 &amp;&amp; !global.debugNoDeath){
    if (instance_exists(objTHForeground)){
        objTHForeground.playerHP --;
    }
    if (objTHForeground.playerHP &lt;= 0){
        var _inst;
        for(var i=0;i&lt;8;i++){
            _inst = instance_create(x, y, objTHKidDeath);
            _inst.direction = 45*i + 22.5;
        }
        
        // Sound effects
        audio_play_sound(sndTHKidDeath, 0, 0);
        var _snd = audio_play_sound(sndMakerSamplePunch, 0, 0);
        audio_sound_pitch(_snd, PITCH_FLUCT);
        audio_sound_gain(_snd, 0.5, 0);
        
        // Death animation
        instance_create(x, y, objPlayer);
        scrKillPlayer();
        instance_destroy();
    }else{
        image_alpha = 0.5;
        var _snd = audio_play_sound(sndMakerSamplePunch, 0, 0);
        audio_sound_pitch(_snd, PITCH_FLUCT);
        alarm[0] = 30;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!surface_exists(surf)){
    surf = surface_create(64, 64);
}
if (surface_exists(surf)){
    surface_set_target(surf);
    draw_clear_alpha(c_black, 0);
    draw_sprite(sprTHKidArm, armState, 32+6, 20);
    draw_sprite_ext(sprTHKidArm, armState, 32-6, 20, -1, 1, 0, c_white, 1);
    draw_sprite(sprTHKidHead, imageCounter*7/50, 32, 0);
    draw_sprite(sprTHKidCape, imageCounter*7/50, 32, 26);
    surface_reset_target();
    
    if (surface_exists(surf)){
        draw_surface_ext(surf, x-32, y-26, 1, 1, 0, c_white, image_alpha);
    }
}
if (hitboxShownPercent &gt; 0){
    draw_sprite_ext(sprTHFocus, 0, x, y, 1/2 + (1-hitboxShownPercent)/4, 1/2 + (1-hitboxShownPercent)/4, 0, c_white, hitboxShownPercent*0.8);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
