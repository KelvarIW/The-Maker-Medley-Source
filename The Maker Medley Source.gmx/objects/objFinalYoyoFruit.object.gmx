<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerFruit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objMakerFruit</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
curve = 0;
index = -1;
indexBase = irandom(6)*2;

slowDown = false; //Phase 4
spdInit = 0;
spdMult = 1;
init = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (index == 3){
    if (bbox_top &gt; room_height)
        instance_destroy();
}else{
    event_inherited();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (curve != 0)
    direction += curve;

switch(index){
    case 0:
        if (friction &lt; 0 &amp;&amp; speed &gt;= 12){
            speed = 12;
            friction = 0;
        }
        if (!buff() &amp;&amp; !global.dead &amp;&amp; instance_exists(objPlayer)){
            direction = point_direction(objPlayer.x, objPlayer.y, x, y);
        }
        break;
    case 1:
        x += spdInit*dcos(direction) * spdMult;
        y += spdInit*(-dsin(direction)) * spdMult;
        break;
    case 2:
        if (slowDown &amp;&amp; speed &gt; 0){
            speed = max(speed - spdInit/20, 0);
        }else if (!slowDown &amp;&amp; speed &lt; spdInit){
            if (slowDown &amp;&amp; speed &gt; 0){
                speed = min(speed + spdInit/20, spdInit);
            }
        }
        break;
    case 3:
        if (image_xscale &lt; 1){
            image_xscale = min(image_xscale + 0.1, 1);
            image_yscale = image_xscale;
        }
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Index-specific initialization
if (!init){
    switch(index){
        case 0:
            indexBase = -1;
            if (!global.dead &amp;&amp; instance_exists(objPlayer)){
                direction = point_direction(objPlayer.x, objPlayer.y, x, y);
                if (!buff()){
                    speed = 1;
                    friction = -0.2;
                }else{
                    gravity_direction = direction;
                    speed = -2.4;
                    gravity = abs(speed)/15;
                }
            }
            break;
        case 1:
            spdInit = speed;
            speed = 0;
            break;
        case 3:
            image_xscale = 0;
            image_yscale = 0;
            break;
    }
    
    if (global.dead){
        friction = speed/40;
        speed *= global.deathSlow;
    }
    
    
    init = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
