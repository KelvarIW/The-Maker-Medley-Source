<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-350</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>sprite = -4;
global.canRestart = false;
roomTo = noone;
alarm[0] = 1;
camDir = 0;
camProgress = 0;
exitIndex = -1; //negative = no exit
exitPartCol = c_white;
drawX = 0; //draw surface sprite
drawY = 0; //draw surface sprite
smoothCam = false;
save = false;
createPlayer = true;
image_alpha = 0.8;
offset = 0; //between this screen and the last one
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_exists(sprite)){
    sprite_delete(sprite);
}
if (smoothCam){
    if (room == rChaozB){
        instance_create(0, 0, objMakerCamera);
    }else{
        (instance_create(0, 0, objMakerCamera)).smoothCam = true; //replace the camera
    }
}
global.canRestart = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy Player + Set Offset
if (room != rChaozB){
    with (objPlayer){
        instance_destroy();
    }
}
if (roomTo == rChaozB){
    view_yview = 0;
    drawY = 0;
    camDir = 270;
    exit;
}
switch(camDir){
    case 0:
        view_xview = -800;
        drawX = -(800+offset);
        break;
    case 90:
        view_yview = room_height + 608;
        drawY = room_height + offset;
        break;
    case 180:
        view_xview = room_width + 800;
        drawX = room_width + offset;
        break;
    case 270:
        view_yview = -608;
        if (room == rChaozB)
            drawY = 0;
        else
            drawY = -(608 + offset);
        break;
}

if (exitIndex &gt;= 0){
    with (instance_create(x, y, objMakerTeleTransitionExit)){
        index = other.exitIndex;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>camProgress += clamp((1 - camProgress)/8, 3/100, 7/100);
if (camProgress &gt; 1){camProgress = 1;}

switch(camDir){
    case 0:
        view_xview = -800 + (800)*camProgress;
        break;
    case 90:
        view_yview = (room_height - 608) + (608)*(1 - camProgress);
        break;
    case 180:
        view_xview = (room_width - 800)  + (800)*(1 - camProgress);
        break;
    case 270:
        if (room != rChaozB)
            view_yview = -608 + (608)*camProgress;
        else
            view_yview = (608)*camProgress;
        break;
}

if (camDir mod 180 == 0){
    view_yview = (y div 608)*608;
}else{
    view_xview = (x div 800)*800;
}

if (camProgress &gt;= 1){
    global.canRestart = true;
    if (exitIndex != -1 &amp;&amp; createPlayer){ //negative = no exit
        if (save){
            with (objPlayer){
                scrTMM_Autosave(x, y, 1);
            }
        }
        if (room != rChaozB &amp;&amp; room != rGeezer01 &amp;&amp; !instance_exists(objPlayer)){
            instance_create(x, y+6, objPlayer);
            with (instance_create(x, y, objExpandFade)){
                sprite_index = sprMakerTeleporterExitExpand;
                depth = -4;
                image_speed = 0;
                image_alpha = 0.8;
                scaleInc = 0.08;
                alphaInc = -0.15;
            }
            repeat(irandom_range(14, 18)){
                with (instance_create(x, y, objMakerCirclePart)){
                    color = other.exitPartCol;
                    curve = random_range(1.3, 2.78);
                    persistent = true;
                }
            }
        }
    }
    instance_destroy();
}
exitIndex += 0.2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room != roomTo){
    instance_destroy();
}else if (room != rChaozB){
    audio_sound_pitch(audio_play_sound(sndMakerTeleport, 0, 0), PITCH_FLUCT);
}
if (x == -1 &amp;&amp; y == -1 &amp;&amp; instance_exists(objPlayerStart)){ //no position defined
    x = objPlayerStart.x + 17;
    y = objPlayerStart.y + 23 - 6;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (offset &gt; 0){
    var _left, _top, _right, _bottom;
    if (camDir == 0){
        _left = drawX + 800;
        _top = drawY;
        _right = _left + offset;
        _bottom = _top + 608
    }else if (camDir == 90){
        _left = drawX;
        _top = drawY - offset;
        _right = _left + 800;
        _bottom = drawY
    }else if (camDir == 180){
        _left = drawX - offset;
        _top = drawY;
        _right = drawX;
        _bottom = _top + 608
    }else{
        _left = drawX;
        _top = drawY + 608;
        _right = _left + 800;
        _bottom = _top + offset;
    }
    scrDrawTexturedArea(global.galaxyBackTex, 0, 0, _left, _top, _right, _bottom);
    scrDrawTexturedArea(global.galaxyStarTex, -global.countPersistent/2, global.countPersistent/2, _left, _top, _right, _bottom);
}
if (sprite_exists(sprite)){
    draw_sprite(sprite, 0, drawX, drawY);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
