<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlantsGuyIdle</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objPlantsEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
image_speed = 0;
hp = 24;
hpInit = hp;
glowAlpha = 0;
run = true;
shooting = noone;
shootCycleLen = 60;
shootTimer = 1.6*shootCycleLen;
idleShootRecoverDelay = 10;
shootRunMult = 1;
shootIdleMult = 4/3;

inheritAttacking = false;  // does not attack plants that it's touching
plantSearchDist = 128;
plantSearchIdleMult = 1.44;
pushWeightMult = 0.5;

scrPlantsGoreInit(1);
armDist = sqrt(640); //(24^2 + 8^2)^0.5
animCounter = 0;
instasNeeded = 2;  // Instakills should not actually instantly kill The Guy
for (var i = (instasNeeded-1); i &gt;= 0; i--){
    instaHit[i] = -4;  // prevents getting hit by the same shuriken/mine twice
}

killingDelay -= 36;
killingHeadAng = 0;
audio_play_sound(sndPlantsGuyAppear, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrPlantsEnemyStepEnd(false);

if (killing &amp;&amp; killingState &lt; 4){
    if (killingState &gt;= 1  &amp;&amp;  instance_exists(objPlantsPlayerCage)){
        killingTimer ++;
        if (killingState == 1){
            var _destAng = (point_direction(x, y, objPlantsPlayerCage.x, objPlantsPlayerCage.y) - 180);
            if (_destAng &lt; 0){_destAng += 360;}
            var _diff = angle_difference(killingHeadAng, _destAng);
            if (abs(_diff) &lt; 1){
                killingHeadAng = _destAng;
                killingState = 2;
                killingTimer = 0;
            }else{
                killingHeadAng -= min(abs(_diff), 5)*sign(_diff);
            }
        }else if (killingState == 2){
            if (killingTimer &gt;= 18){
                var _bullet;
                _bullet = instance_create(x-40, y-18, objPlantsEnemyBullet);
                _bullet.row = row;
                _bullet.yBase = 999;
                _bullet.direction = point_direction(_bullet.x, _bullet.y, objPlantsPlayerCage.x, objPlantsPlayerCage.y);
                _bullet.speed = 16;
                
                _bullet.image_xscale = 4;
                _bullet.image_yscale = 4;
                _bullet.shadowType = 1;
                _bullet.frozen = true;
                
                killingState = 3;
                killingTimer = 0;
                audio_play_sound(sndPlantsGuyShoot, 0, 0);
            }
        }else if (killingState == 3){
            if (killingTimer &gt;= 15){
                var _destAng = 0;
               
                var _diff = angle_difference(killingHeadAng, _destAng);
                if (abs(_diff) &lt; 1){
                    killingHeadAng = _destAng;
                    if (killingTimer &gt;= 35){
                        killingState = 4;
                    }
                }else{
                    var _diff = angle_difference(killingHeadAng, _destAng);
                    killingHeadAng -= min(abs(_diff), 5)*sign(_diff);
                    killingTimer --;  // freeze timer
                }
            }
        }
    }
    image_index += 1/10;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>scrPlantsEnemyStep();

if (!frozen){
    if (dead){
        if (!crushed){
            y -= 20;
            image_angle += 22.5;
            if (bbox_bottom &lt; -20 &amp;&amp; !instance_exists(gore[0])){
                (instance_create(x, -30, objPlantsEndingGun)).yBase = ystart+28;
                instance_destroy();
            }
        }
    }else if (pushAmt &lt;= 0){
        if (!killing  ||  killingState == 4){
            event_user(7);  // movement cycles  + shooting
        }
    }
    animCounter ++;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="17">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///movement cycles  + shooting
if (!(frozen || dead)){
    //delay timers
    if (shootTimer &gt; 0){
        if (run){
            shootTimer -= shootRunMult;
        }else{
            shootTimer -= shootIdleMult;
        }
    }
    scrPlantsGuyBoshyAttack();  // shooting
    
    if (run){
        sprite_index = sprPlantsGuyRunning;
        image_index += 1/4;
        
        x -= 1;
    }else{
        sprite_index = sprPlantsGuyIdle;
        image_index += 1/10;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game Over `killing` animation
if (killingState == 0){
    sprite_index = sprPlantsGuyIdle;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Shadow
if (!dead){
    var _shadowDim = scrPlantsShadow(56, 32);
    draw_sprite_ext(sprPlantsShadow, 0, (x+6)-view_xview, shadowY, _shadowDim[0], _shadowDim[1], image_angle, c_white, image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///The Guy does not follow typical enemy attacking behavior
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///death
if (!dead &amp;&amp; !killing){
    var _inst = (instance_create(x+30, y-28, objPlantsBoshy));
    _inst.row = row;
    audio_play_sound(sndMakerSampleThrow, 0, 0);
    
    image_speed = 0;
    inheritGore = false;  // we don't want to drop the arm if it is still attached
    event_inherited();
    inheritGore = true; // reset from above for arm gore (if it was not previously attached)
    audio_play_sound(sndBossHit, 0, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///damage
if (!dead &amp;&amp; !killing){
    event_inherited();
    if (hp &lt;= (hpInit/3) &amp;&amp; bodyState == 0){
        event_user(4);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///draw
var _glowAlpha = 0;
if (glowFrame &gt; 0){
    _glowAlpha = scrPlantsGlow(glowFrame, glowLen);
}else{
    _glowAlpha = 0;
}
//var _armPosAdjust = scrChangeOrigin(0, 0, -16, +16, image_angle);
//var _armOriginAdjust = scrChangeOrigin(16, 12, 8, 6, image_angle);
var _armAdjust = scrChangeOrigin(16, 12, -8, 22, image_angle);

if (!dead || crushed){
    scrPlantsCrushStart(64, 128 - 26*image_yscale);
    draw_sprite_ext(sprPlantsBoshyIdle, (animCounter/10) mod 2, floor(x)+30*image_xscale, floor(y)-28*image_yscale, 2*image_xscale, 2*image_yscale, 315, c_white, 1);
    
    //Body incl. Head
    var _cigarY = -5;
    if (sprite_index == sprPlantsGuyIdle &amp;&amp; floor(image_index) mod 4 == 1){
        _cigarY += 4;
    }
    var _cigarOriginAdjust = scrChangeOrigin(0, 0, +8, -_cigarY, (image_angle+killingHeadAng));
    
    if (sprite_index == sprPlantsGuyIdle  &amp;&amp; (killing &amp;&amp; killingState &lt; 4)){
        draw_sprite_ext(sprPlantsGuyKillingBody, image_index, floor(x), floor(y), image_xscale, image_yscale, image_angle, c_white, image_alpha);
        if (floor(image_index) == 1){
            draw_sprite_ext(sprPlantsGuyKillingHead, 0, floor(x) -4*image_xscale, floor(y) -22*image_yscale, image_xscale, image_yscale, killingHeadAng, c_white, image_alpha);
        }else{
            draw_sprite_ext(sprPlantsGuyKillingHead, 0, floor(x) -4*image_xscale, floor(y) -26*image_yscale, image_xscale, image_yscale, killingHeadAng, c_white, image_alpha);
        }
    }else{
        draw_sprite_ext(sprite_index, image_index, floor(x), floor(y), image_xscale, image_yscale, image_angle, c_white, image_alpha);
    }
    draw_sprite_ext(sprPlantsGuyCigar, animCounter/4, floor(x)  + (-2  +  _cigarOriginAdjust[0]) * image_xscale, floor(y)  + (-18  +  _cigarOriginAdjust[1]) * image_yscale, image_xscale, image_yscale, 0, c_white, image_alpha);
    if (_glowAlpha &gt; 0){
        if (sprite_index == sprPlantsGuyIdle){
            if (killing &amp;&amp; killingState &lt; 4){
                draw_sprite_ext(sprPlantsGuyIdleHit, image_index, floor(x), floor(y), image_xscale, image_yscale, image_angle, c_white, _glowAlpha);
            }else{
                draw_sprite_ext(sprPlantsGuyIdleHit, image_index, floor(x), floor(y), image_xscale, image_yscale, image_angle, c_white, _glowAlpha);
            }
        }else{
            draw_sprite_ext(sprPlantsGuyRunningHit, image_index, floor(x), floor(y), image_xscale, image_yscale, image_angle, c_white, _glowAlpha);
        }
    }
    
    //Arm
    if (bodyState == 0){
        if (sprite_index == sprPlantsGuyIdle){
            draw_sprite_ext(sprPlantsGuyIdleArm, image_index, floor(x)+image_xscale*_armAdjust[0], floor(y)+image_yscale*_armAdjust[1], image_xscale, image_yscale, image_angle, c_white, image_alpha);
        }else{
            draw_sprite_ext(sprPlantsGuyRunningArm, image_index, floor(x)+image_xscale*_armAdjust[0], floor(y)+image_yscale*_armAdjust[1], image_xscale, image_yscale, image_angle, c_white, image_alpha);
        }
        if (_glowAlpha &gt; 0){
            if (sprite_index == sprPlantsGuyIdle){
                draw_sprite_ext(sprPlantsGuyIdleArmHit, image_index, floor(x)+image_xscale*_armAdjust[0], floor(y)+image_yscale*_armAdjust[1], image_xscale, image_yscale, image_angle, c_white, _glowAlpha);
            }else{
                draw_sprite_ext(sprPlantsGuyRunningArmHit, image_index, floor(x)+image_xscale*_armAdjust[0], floor(y)+image_yscale*_armAdjust[1], image_xscale, image_yscale, image_angle, c_white, _glowAlpha);
            }
        }
    }
    
    scrPlantsCrushEnd(crushTimer);
}else{
    draw_sprite_ext(sprPlantsGuyIdle, 0, floor(x), floor(y), image_xscale, image_yscale, image_angle, c_white, 1);
    if (_glowAlpha &gt; 0){
        draw_sprite_ext(sprPlantsGuyIdle, 0, floor(x), floor(y), image_xscale, image_yscale, image_angle, c_white, _glowAlpha);
    }
    draw_sprite_ext(sprPlantsGuyCigar, animCounter/4, floor(x), floor(y), image_xscale, image_yscale, image_angle, c_white, 1);
    if (bodyState == 0){
        draw_sprite_ext(sprPlantsGuyIdleArm, image_index, floor(x)+image_xscale*_armAdjust[0], floor(y)+image_yscale*_armAdjust[1], image_xscale, image_yscale, image_angle, c_white, image_alpha);
        if (_glowAlpha &gt; 0){
            draw_sprite_ext(sprPlantsGuyIdleArm, image_index, floor(x)+image_xscale*_armAdjust[0], floor(y)+image_yscale*_armAdjust[1], image_xscale, image_yscale, image_angle, c_white, _glowAlpha);
        }
    }
}
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
