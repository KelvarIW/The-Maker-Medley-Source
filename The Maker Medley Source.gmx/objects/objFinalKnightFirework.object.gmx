<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFinalKnightFirework</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-3</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>carried = false;
thrown = false;
timer = 120;
upAlpha = 0;
image_xscale = 2;
image_yscale = 2;
vspeed = 3;
gravity = 0.125;
GETSign = noone;
explodeOnLand = false;
carriedLerp = 0;
carriedYOffset = 0;
drawXOff = 0;
drawYOff = 0;

//determine explosion color
col = choose(c_red, c_orange, c_yellow, c_green, c_aqua, c_fuchsia);

if (col == c_orange &amp;&amp; choose(true, false))
    col2 = c_yellow;
else if (col == c_yellow &amp;&amp; choose(true, false))
    col2 = c_orange;
else if (col == c_fuchsia &amp;&amp; choose(true, false))
    col2 = c_purple;
else
    col2 = col;

if (col != col2)
    colMixed = merge_color(col, col2, 0.5);
else
    colMixed = col;
    
createSign = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (vspeed == 0){
    vspeed = -5;
    gravity = 0.25;
}
(instance_create(x, 480, objFinalKnightWarning)).alarm[0] = 20;
audio_stop_sound(sndMakerExclamation);
audio_play_sound(sndMakerExclamation, 0, 0);
explodeOnLand = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (explodeOnLand){
    if (place_meeting(x, y, objBlock))
        event_user(0);
    if (upAlpha &gt; 0)
        upAlpha = max(upAlpha-0.08, 0);
}else{
    if (!carried){
        if (place_meeting(x, y + vspeed+gravity, objBlock)){
            move_contact_solid(270, abs(vspeed+gravity));
            vspeed = 0;
            gravity = 0;
            if (instance_exists(objFinalKnight) &amp;&amp; !objFinalKnight.fireworkEverPickedUp){
                GETSign = instance_create(x, y-14, objMakerDangerProp);
                GETSign.sprite_index = sprFinalKnightGET;
                GETSign.alphaIncAmt = 0.0475;
                GETSign.image_alpha = 0;
                GETSign.alphaDecAmt = 0.095;
                GETSign.alarm[0] = 40;
            }
        }
        if (place_meeting(x, y, objPlayer)){
            if (scrButtonCheckPressed(global.upButton)){
                carried = true;
                carriedYOffset = y - (objPlayer.y-19);
                vspeed = 0;
                gravity = 0;
                with (GETSign)
                    alphaDec = true;
                with(objFinalKnight){
                    if (other.xstart &lt; 400)
                        fireworkExists[0] = false;
                    else
                        fireworkExists[1] = false;
                    fireworkEverPickedUp = true;
                }
            }else
                upAlpha = min(upAlpha+0.04, 1);
        }else
            upAlpha = max(upAlpha-0.08, 0);
    }else{
        upAlpha = max(upAlpha-0.08, 0);
        carriedLerp = min(carriedLerp + 0.1, 1);
        image_angle = lerp(0, -90, carriedLerp);
        if (buff()){
            timer -= 1.6667;
        }else{
            timer --;
        }
        if (instance_exists(GETSign)){
            GETSign.alphaDec = true;
            GETSign.x = x;
            GETSign.y = y-14;
        }
        if (!thrown){
            if (instance_exists(objPlayer)){
                x = objPlayer.x;
                y = (objPlayer.y-19) + lerp(carriedYOffset, 0, carriedLerp);
                
                image_yscale = 2*objPlayer.xScale;
                
                if (carriedLerp &gt;= 1 &amp;&amp; scrButtonCheckPressed(global.shootButton)){
                    hspeed = 6*objPlayer.xScale;
                    vspeed = -2.5;
                    gravity = 0.125;
                    thrown = true;
                    audio_play_sound(sndFinalFireworkThrown, 0, 0);
                }
            }else{
                gravity = 0.125;
                if (place_meeting(x, y, objBlock))
                    event_user(0);
            }
            if (timer &lt;= 0)
                event_user(0);
        }else{
            if (collision_rectangle(160, 480, 640, 640, id, false, false) == id || (hspeed != 0 &amp;&amp; place_meeting(x, y, objFinalKnight))){
                event_user(0);
            }else{
                if (timer &lt;= 0)
                    event_user(0);
                else{
                    with (instance_create(x, y, objFinalKnightFireworkTrail)){
                        image_blend = other.colMixed;
                        direction = other.image_angle + random_range(-30, 30) - 90;
                    }
                }
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var i, _inst, _offset, _colLast;
_offset = irandom(60);

_colLast = choose(0, 1);
for(i=0;i&lt;6;i++){
    _inst = instance_create(x, y, objFinalKnightFireworkParticle);
    _inst.dir = i*60 + irandom_range(-15, 15) + _offset;
    if (_colLast == 1)
        _inst.col = col2;
    else
        _inst.col = col;
    _colLast = (_colLast + 1) mod 2;
}
repeat(irandom_range(2, 4)){
    _inst = instance_create(x, y, objFinalKnightFireworkParticle);
    _inst.dir = random(360);
    if (_colLast == 1)
        _inst.col = col2;
    else
        _inst.col = col;
    _colLast = (_colLast + 1) mod 2;
}

with (instance_create(x, y, objFinalKnightFireworkExplosion))
    image_blend = other.colMixed;

if (place_meeting(x, y, objFinalKnight)){
    with (objFinalKnight){
        if (iframes &lt;= 0 &amp;&amp; hp &gt; 0){
            move_towards_point(other.xprevious, other.yprevious, -other.speed/1.5);
            angleWhenHit = image_angle;
            event_user(0);
        }
    }
}    
    
audio_play_sound(sndFinalFireworkExplode, 0, 0);
instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

if (upAlpha &gt; 0){
    draw_sprite_ext(sprS2FlappyPressUp, 0, x, y - 16 - 8*upAlpha, 1, 1, 0, c_white, upAlpha);
}

if (carried){
    draw_set_colour(c_black);
    draw_rectangle(x-40, y - 24, x+40, y-16, false);
    draw_set_colour(merge_colour(c_red, c_green, timer/120));
    draw_rectangle(x-38, y - 22, x-38 + 76*(timer/120), y-18, false);
    draw_set_colour(c_white);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
