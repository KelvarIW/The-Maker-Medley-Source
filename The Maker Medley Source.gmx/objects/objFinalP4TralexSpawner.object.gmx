<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerShuriken</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-12</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>trailPieceMax = 5; //effectively only 4 because index 0 is the same as the current image_angle, and is thus not drawn
trailPieces = trailPieceMax;
delay = 40;
if (buff()){
    delay = 15;
}
delayInit = delay;
image_angle = -((delay * 25 + 30) mod 90);
for (var i=floor(trailPieceMax-1); i &gt;= 0; i--){
    trailAng[i] = image_angle - 25*i;
}
movement = 0;
scale = 1;
image_alpha = 0;
image_speed = 0;

expand = false; //for the transition to the "DELETE HIM!" section.
with (object_index){
    alarm[0] = -1;
}
alarm[0] = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!expand &amp;&amp; movement == 0){
    var _snd = audio_play_sound(sndMakerSampleThrow, 0, 0);
    audio_sound_pitch(_snd, lerp(0.8, 1.4, delay/delayInit));
    audio_sound_gain(_snd, 0.6 * (global.sfxLevel/100 * global.volumeLevel/100), 0);
    alarm[0] = 8;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (expand){
    image_xscale += 0.2;
    image_yscale = image_xscale;
    image_alpha -= 0.1;
    if (image_alpha &lt;= 0)
        instance_destroy();
}else{
    if (movement == 0){
        if (delay &gt; 0){
            delay -= 1;
            image_angle += 25;
        }else{
            trailPieces -= 0.2;
            if (trailPieces &lt;= 0){
                trailPieces = 0;
                //delay = 40;
                movement = 1;
                alarm[0] = -1;
                image_angle = 0;
            }else{
                image_angle += 25 * (trailPieces/trailPieceMax);
            }
        }
    }else if (movement == 1){
        if (delay &gt; 0){
            delay -= 1;
        }else{
            scale -= (1-scale)/20 + 0.015;
            if (scale &gt; 0){
                image_xscale = scale*(1 + (1-scale)*sin(scale*pi*3.3));
                image_yscale = scale*(1 + (1-scale)*cos(scale*pi*3.3));
            }else{
                event_user(0);
                instance_destroy();
            }
        }
    }
    
    if (trailPieces &gt; 0){
        for (i=floor(trailPieceMax-1); i &gt; 0; i--){
            trailAng[i] = trailAng[i-1];
        }
        trailAng[0] = image_angle;
    }
    
    if (image_alpha &lt; 1){  // should reach 1 before User Event 0
        image_alpha += 1/20;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Spawn stars
var _inst;
for (var i=-3.5; i&lt;3.5; i++;){
    _inst = instance_create(x, y, objFinalP4TralexStar);
    _inst.direction = 90 + 8*i + irandom_range(-4, 4);
    _inst.speed = random_range(9.5, 11.35);
    _inst.vspeed *= 2/3;
    _inst.hspeed *= 3/2;
    if (abs(_inst.hspeed) &lt; 1.5){
        _inst.hspeed = 1.5*choose(1, -1);
    }
    _inst.rotSpd = _inst.speed/3;
    if (_inst.hspeed &gt; 0){
        _inst.rotSpd *= -1;
    }
}

audio_play_sound(sndMakerSampleSpring, 0, 0);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_alpha &gt;= 1){
    if (trailPieces &gt; 0){
        for(var i=trailPieces-1; i &gt; 0; i -= 1/3){ //Do not do "i &gt;= 0" Random please I don't want to be tied to a crash :'(
            draw_sprite_ext(sprite_index, 0, x, y, image_xscale, image_yscale, lerp(trailAng[floor(i)], trailAng[ceil(i)], i mod 1), c_white, 1 - (i+1)/(trailPieces+3));
        }
    }
    draw_self();
}else if (instance_exists(objFinalP4DrawHelper)){
    with (objFinalP4DrawHelper){
        if (!surface_exists(shurikenSurf)){
            shurikenSurf = surface_create(96, 96);
        }
        if (surface_exists(shurikenSurf)){
            surface_set_target(shurikenSurf);
            draw_clear_alpha(c_black, 0);
            
            if (other.trailPieces &gt; 0){
                for(var i=(other.trailPieces-1); i &gt; 0; i -= 1/3){ //this MUST not be "i &gt;= 0" to prevent rounding errors causing i to go veeeery slightly below 0, which then returns -1 when run through the `ceil` function.
                    draw_sprite_ext(other.sprite_index, 0, 48, 48, 1, 1, lerp(other.trailAng[floor(i)], other.trailAng[ceil(i)], i mod 1), c_white, 1 - (i)/(other.trailPieces+3));
                }
            }
            draw_sprite_ext(other.sprite_index, 0, 48, 48, 1, 1, other.image_angle, c_white, 1);
            
            surface_reset_target();
            draw_surface_ext(shurikenSurf, other.x-48*other.image_xscale, other.y-48*other.image_yscale, other.image_xscale, other.image_yscale, 0, c_white, other.image_alpha);
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
