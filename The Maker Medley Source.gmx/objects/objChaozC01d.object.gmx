<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerFruit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-8</depth>
  <persistent>0</persistent>
  <parentName>objMakerFruit</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
image_index = 20;
image_xscale = 2.5;
image_yscale = 2.5;
image_speed = 0;
timer = 0; //for parabolical movement
projCounter = 12;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

/*if (hspeed == 0){
    timer += global.deathSlow/50;
    y = 578 - 75*sqr(timer - 2.56) + 490;
    if (timer &gt;= 5.12){
        instance_destroy();
    }
}else{*/
    if ((hspeed &gt; 0 &amp;&amp; bbox_left &gt; 800) || (hspeed &lt; 0 &amp;&amp; bbox_right &lt; 0)){
        instance_destroy();
    }
//}

//Shoot projectiles (formerly in alarm[1])
if (projCounter &gt;= 0 &amp;&amp; global.deathSlow &gt; 0){
    projCounter -= global.deathSlow;
    if (projCounter &lt;= 0){
    var t_proj;
    //if (hspeed != 0){
    
    var _num, _spd, _angChange;
    if (buff()){
        _num = 5;
        _spd = 5;
        _angChange = 25;
    }else{
        _num = 3;
        _spd = 5;
        _angChange = 25;
    }
    var _inc = 360/_num;
    var _ang;
    for(var i=0;i&lt;_num;i++){
        _ang = angle + _inc*i;
        if (abs(angle_difference(direction, _ang)) &gt;= 30){
            t_proj = instance_create(x-hspeed, y-vspeed, objMakerFruit);
            t_proj.speed = _spd;
            t_proj.image_index = 20;
            t_proj.direction = angle + _inc*i;
            //t_proj.hspeed -= (2*(5/_spd)) * sign(hspeed);
        }
    }
    angle -= _angChange*sign(hspeed);
    projCounter = 8;
    
    /*}else{
        var t_dir = point_direction(x-hspeed, y-vspeed, objPlayer.x, objPlayer.y); //only for vertical cherries
        for(var i=0;i&lt;=2;i+=2){
            t_proj = instance_create(x-hspeed, y-vspeed, objMakerFruit);
            t_proj.hspeed = 8*sign(400-x);
            t_proj.image_index = 20;
        }
        alarm[1] = 3;
    }*/
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
