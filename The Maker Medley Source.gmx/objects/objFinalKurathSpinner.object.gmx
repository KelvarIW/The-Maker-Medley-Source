<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPlantsSpinner</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-19</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Buffed mode only
xOff = 0;
yOff = +72;

if (buff()){
    counterInit = 88;
}else{
    counterInit = 140;
}
counter = counterInit;
active = true;
num = 11;
dir = random(360/num);
dirChange = -6;
spd[0] = 8;
spd[1] = 9;
len[0] = 112;
len[1] = 0;
image_alpha = 0;
ident = 0; // 0 = curving; 1 = gravity
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fun Fact: This code was ported to, and then from, a GMS2 project, with slight modifications made at each point
if (instance_exists(objFinalKurath)){
    x = objFinalKurath.x + xOff;
    y = objFinalKurath.y + yOff;
}else{
    active = false;
}

dir += dirChange * global.deathSlow;
if (!global.dead &amp;&amp; active){
    if ((counter mod 12) == 0){
        var _snd = audio_play_sound(sndMakerSampleThrow, 0, 0);
        audio_sound_gain(_snd, clamp(image_alpha, 0, 1), 0);
        audio_sound_pitch(_snd, 1.4 - 0.8*(counter/counterInit));
    }
    counter -= 1;
    len[1] = lerp(16, len[0], (1 - clamp(counter / counterInit, 0, 1)));
    
    if (counter &lt;= 0){
        event_user(0);  // release stored projectiles
    }
    
    sprite_index = sprCherry;
    mask_index = -1;
    image_index = (floor(global.count/15) mod 2);
    
    var _col = false;
    var _inc = 360/num;
    for(var i=0; i&lt;num; i++){
        _col = (place_meeting(x + (len[1]*dcos(dir + (_inc*i))), y + (len[1]*(-dsin(dir + (_inc*i)))), objPlayer));
        if (_col){break;}
    }
    if (_col){
        scrKillPlayer();
    }
    
    if (image_alpha &lt; 1){
        image_alpha = min(image_alpha + 0.05, 1);
    }
}else{
    image_alpha -= 0.025;
    if (image_alpha &lt;= 0){
       instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Release stored projectiles
if (!global.dead &amp;&amp; active){
    dir = (dir mod 360);
    var _inst;
    var _inc = 360/num;
    for(var i=0; i&lt;num; i++){
        _inst = instance_create(x + (len[1]*dcos(dir + (_inc*i))), y + (len[1]*(-dsin(dir + (_inc*i)))), objFinalKurathSpinnerProj);
        _inst.direction = ((dir+dirChange) + (i * _inc) + 90*sign(dirChange)) + random_range(-20, 20);
        _inst.speed = random_range(9.7, 14.5);
        _inst.vspeed = max(_inst.vspeed, -5.75);
        _inst.gravity = (0.18);
        _inst.angleInc = -(_inst.hspeed/2);
    }
    active = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _inc = 360/num;
//lines
draw_set_alpha(image_alpha);
var _minDist = 16;
draw_set_color(c_black);
for(var i=0;i&lt;num;i++){
    draw_line_width(x + _minDist*dcos(dir + (_inc*i)), y + _minDist*(-dsin(dir + (_inc*i))), x + max(len[1] - 16, _minDist)*dcos(dir + (_inc*i)), y + max(len[1] - 16, _minDist)*(-dsin(dir + (_inc*i))), 4);
}
draw_set_color(c_white);
for(var i=0;i&lt;num;i++){
    draw_line_width(x + _minDist*dcos(dir + (_inc*i)), y + _minDist*(-dsin(dir + (_inc*i))), x + max(len[1] - 16, _minDist)*dcos(dir + (_inc*i)), y + max(len[1] - 16, _minDist)*(-dsin(dir + (_inc*i))), 2);
}
draw_set_alpha(1);

//spinner slots
for(var i=0;i&lt;num;i++){
    draw_sprite_ext(sprPlantsSpinner, 1, x + (len[1]*dcos(dir + (_inc*i))), y + (len[1]*(-dsin(dir +(_inc*i)))), 1, 1, 0, c_white, image_alpha);
}
if (active){
    for(var i=0;i&lt;num;i++){
        draw_sprite_ext(sprCherry, (floor(global.count/15) mod 2), x + (len[1]*dcos(dir + (_inc*i))), y + (len[1]*(-dsin(dir +(_inc*i)))), 1, 1, 0, c_white, image_alpha);
    }
}

//spinner center
draw_sprite_ext(sprPlantsSpinner, 0, x, y, 1, 1, dir, c_white, image_alpha);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
