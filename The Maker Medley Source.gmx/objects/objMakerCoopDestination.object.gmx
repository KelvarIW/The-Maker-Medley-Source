<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerCoopDestination</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-21</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>trailCount = 7;
for(var i = trailCount; i &gt;= 0; i --){
    trailArray[1, i] = -30;
    trailArray[0, i] = -30;
}
angleCounter = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(var i=trailCount; i&gt;0; i--){
    trailArray[0, i] = trailArray[0, i-1];
    trailArray[1, i] = trailArray[1, i-1];
}
angleCounter ++;

if (instance_exists(objPlayer) &amp;&amp; global.playerPower == 1 &amp;&amp; objPlayer.coopTeleportUses &gt; 0){
    x = objPlayer.x + 112*objPlayer.xScale;
    y = objPlayer.y;
    
    if (room == rStage04New_3){
        event_user(0);
    }else{
        image_alpha = 1;
    }
    
    if (image_alpha &gt;= 1){
        trailArray[0, 0] = x;
        trailArray[1, 0] = y;
    }else{
        trailArray[0, 0] = -30;
        trailArray[1, 0] = -30;
    }
}else{
    image_alpha = 0;
    if (trailArray[0, 0] == -30){
        instance_destroy();
    }else{
        trailArray[0, 0] = -30;
        trailArray[1, 0] = -30;
    }
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///rStage04New_3 - compare player/dest position with flashback boundaries
// this prevents the player from teleporting "through" a boundary
var _boundX1 = 288;
var _boundX2 = 384;
var _boundX3 = 704;

var _playerSection = 0;
var _destSection = 0;

if (objPlayer.x &lt; _boundX1){
    _playerSection = 1;
}else if (objPlayer.x &lt; _boundX2){
    _playerSection = 2;
}else if (objPlayer.x &lt; _boundX3){
    _playerSection = 3;
}else{
    _playerSection = 4;
}

if (x &lt; _boundX1){
    _destSection = 1;
}else if (x &lt; _boundX2){
    _destSection = 2;
}else if (x &lt; _boundX3){
    _destSection = 3;
}else{
    _destSection = 4;
}

if (_playerSection == _destSection){
    image_alpha = 1;
}else{
    image_alpha = 0.5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for (var i=trailCount; i&gt;=0; i--){
    draw_sprite(sprMakerCoopDestination, 2, trailArray[0, i] + lengthdir_x(8, (angleCounter - i)*5.4), trailArray[1, i] + lengthdir_y(8, (angleCounter - i)*5.4));
    draw_sprite(sprMakerCoopDestination, 2, trailArray[0, i] + lengthdir_x(8, (angleCounter - i)*5.4 + 180), trailArray[1, i] + lengthdir_y(8, (angleCounter - i)*5.4 + 180));
}

/*var _usingSurface = false;
var _drawX, _drawY;

if (image_alpha &lt; 1){
    if (!surface_exists(surf)){
        surf = surface_create(32, 32);
    }
    if (surface_exists(surf)){
        surface_set_target(surf);
        _usingSurface = true;
    }
    _drawX = 16;  // 32/2;
    _drawY = 16;  // 32/2;
}else{
    _drawX = x;
    _drawY = y;
}*/

draw_set_alpha(image_alpha);
draw_sprite(sprMakerCoopDestination, 0, x + lengthdir_x(8, (angleCounter)*5.4), y + lengthdir_y(8, (angleCounter)*5.4));
draw_sprite(sprMakerCoopDestination, 0, x + lengthdir_x(8, (angleCounter)*5.4 + 180), y + lengthdir_y(8, (angleCounter)*5.4 + 180));
draw_set_alpha(1);

/*if (_usingSurface){
    surface_reset_target();
    _usingSurface = false;
    
    draw_surface_ext(surf, x-16, y-16, 1, 1, 0, c_white, image_alpha);
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
