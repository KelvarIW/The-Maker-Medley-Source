<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerFruit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-8</depth>
  <persistent>0</persistent>
  <parentName>objMakerFruit</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
depth -= 1;
sineAng = 0;
shootCounter = 0;
spray = true;
shrink = false;
index = 0;
image_xscale = 0;
image_yscale = 0;
shrinkNum = 0;  // for the buffed attack
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (global.deathSlow &gt; 0){
    sineAng += 3*global.deathSlow;
    x = 400 + 350*dsin(sineAng);
    image_angle = -720*dsin(sineAng);
    
    if (shrink){
        if (image_xscale &gt; 1){
            image_xscale = max(image_xscale-0.2*global.deathSlow, 1);
            image_yscale = image_xscale;
        }
        if (image_xscale &lt;= 1){
            with (objFinalSudnepProj){
                if (((!buff() &amp;&amp; index == other.index) || (buff() &amp;&amp; ((index == 0 &amp;&amp; other.shrinkNum == 1) || (index == 0.1 &amp;&amp; other.shrinkNum == 2)))) &amp;&amp; gravity == 0){
                    hspeed = 0;
                    vspeed = -2;
                    gravity = 0.178;
                }
            }
            
            var _ang, _curvedev;
            _ang = random(18);
            _curvedev = 0.375;
            /*if (buff()){
                _curvedev *= 1.5;
            }*/
            if ((index == 1) xor (shrinkNum == 2)){
                _curvedev *= -1;
            }
            
            var _inst = -4;
            var _num = 16;
            var _angInc = 360 / _num;
            for(var i=0; i&lt;_num; i++){
                _inst = instance_create(x, y, objFinalSudnepProj);
                _inst.direction = _ang + i*_angInc;
                _inst.speed = 4.5;
                _inst.curve = _curvedev;
                _inst.index = 0.3;
                _inst.indexBase = indexBase;
                with (_inst){
                    event_user(0);
                }
            }
            
            if (!buff() || index == 0){  // prevent the sound effect from playing twice
                with (objFinalScreenshake){
                    shake = 8;
                }
                audio_play_sound(sndMakerSamplePunch, 0, 0);
            }
            if (!buff() || shrinkNum &gt;= 2){
                instance_destroy();
            }else{
                shrink = false;
            }
        }
    }else{
        if (image_xscale &lt; 3){
            image_xscale = min(image_xscale+0.3*global.deathSlow, 3);
            image_yscale = image_xscale;
        }
    }
    
    if (image_xscale &gt;= 2 &amp;&amp; spray){
        shootCounter -= global.deathSlow;
        if (shootCounter &lt;= 0){
            var _inst = -4;
            _inst = instance_create(x, y, objFinalSudnepProj);
            _inst.direction = irandom_range(-80, 80);
            _inst.index = index;
            with (_inst)
                event_user(0);
            if (dcos(sineAng) &gt; 0){
                _inst.hspeed *= -1;
            }
            if (!buff()){
                shootCounter = 6;
            }else{
                shootCounter = 4;
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
