<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprPracticeInfoIcon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1301</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>str = "You can practice any attack you've reached the beginning of.
#Click the attack you want to start at, and then click the attack#you would like to end with.
#Clicking the same box twice will set up just that attack.
#Right clicking your mouse or selecting an attack from a#different boss will clear your prior input."
if (global.farthestRoom &gt;= scrGetRoomNum(rStage03Hub)){
    str += "##(For Undertale, you can select individual attacks in the order#you want to practice them.)";
}
str += '##Press "F2" to return to this menu.';
spacing = 20;

draw_set_font(fDefault12);

strHeight = string_height_ext(str, spacing, -1);
surf = -4;
colBoxBK = make_color_rgb(162, 174, 194);
colBoxBorder = make_color_rgb(12, 28, 40);
fade = 1;
image_alpha = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_perform(ev_other, ev_room_end);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///clicking outside of the practice info window
if (mouse_check_button_pressed(mb_right)){
    fade = -1;
    with (objTitleSquareButton){
        showInfoWhenPressed = true;
    }
}else if (mouse_check_button_pressed(mb_left)){
    if (mouse_x &gt;= x - 544 - 26 &amp;&amp; mouse_x &lt; x - 544 + 524 - 26 &amp;&amp; mouse_y &gt;= y-212 &amp;&amp; mouse_y &lt;= y+44){
        //do nothing
    }else{
        sprite_index = sprPracticeInfoBent;
        image_xscale = 2;
        image_yscale = 2;
        if (place_meeting(x-26, y, objMouseClickCheck) || (collision_point(mouse_x, mouse_y, objTitleSquareButton, false, true) != noone)){
            //do nothing
        }else{
            fade = -1;
            with (objTitleSquareButton){
                showInfoWhenPressed = true;
            }
        }
        
        sprite_index = sprPracticeInfoIcon;
        image_xscale = 1;
        image_yscale = 1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///fading
if (image_alpha &lt; 1 &amp;&amp; fade == 1){
    image_alpha = min(image_alpha + 1/12, 1);
}else if (fade == -1){
    image_alpha -= 1/12;
    if (image_alpha &lt;= 0){
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf)){
    surface_free(surf);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _surfWidth = 544
var _surfHeight = 320;
if (!surface_exists(surf)){
    surf = surface_create(_surfWidth, _surfHeight);
    surface_set_target(surf);
    draw_clear_alpha(c_white, 0);
    
    draw_set_color(colBoxBK);
    draw_rectangle(0, _surfHeight - (strHeight+16), 527, _surfHeight  -0.5, false);
    draw_set_color(colBoxBorder);
    draw_rectangle(0, _surfHeight - (strHeight+16)  -0.5, 527, _surfHeight-1  -0.5, true);
    draw_rectangle(1, _surfHeight - (strHeight+16)+1  -0.5, 526, _surfHeight-2  -0.5, true);
    draw_set_halign(fa_left);
    draw_set_valign(fa_bottom);
    draw_set_font(fDefault12);
    draw_set_color(c_black);
    draw_set_colour_write_enable(1, 1, 1, 0);
    draw_text_ext(7, _surfHeight-2, str, 20, 518);
    draw_set_colour_write_enable(1, 1, 1, 1);
    draw_set_color(c_white);
    
    draw_sprite_ext(sprPracticeInfoBent, 0, _surfWidth, _surfHeight - 22*2, 2, 2, 0, c_white, 1);
    surface_reset_target();
}

if (surface_exists(surf)){
    with (objTitleSquareButton){
        draw_surface_ext(other.surf, x - (_surfWidth + 2*13), y - (_surfHeight - 22*2), 1, 1, 0, c_white, other.image_alpha);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
