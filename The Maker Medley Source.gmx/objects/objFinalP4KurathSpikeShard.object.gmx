<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprJumpRefresher</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-12</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>angInc = random_range(-2.3, -0.85);
hspeed = random_range(0.8, 1.9);
vspeed = random_range(-3, -1.5);
gravity = 0.137;

gravInit = gravity;
glowFramesMax = 20;
glowFrames = glowFramesMax;
piece = 0;
image_alpha = 1 + (0.03 * irandom_range(24, 32));  // still will kill for a bit after landing

expand = false;  // for the transition to the "DELETE HIM!" section.
shrink = false;  // for the transition from the "DELETE HIM!" section.
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (shrink){
    image_xscale -= 0.2;
    image_yscale = image_xscale;
    image_alpha -= 0.1;
    if (image_alpha &lt;= 0 || image_xscale &lt;= 0){
        instance_destroy();
    }
}else if (expand){
    image_xscale += 0.2;
    image_yscale = image_xscale;
    image_alpha -= 0.1;
    if (image_alpha &lt;= 0){
        instance_destroy();
    }
    
    speed = 0;
    gravity = 0;
}else{
    if (y &gt;= room_height + 24){
        instance_destroy();
    }
    if (x+hspeed &gt;= 152 &amp;&amp; x+hspeed &lt;= 648){
        var _inst = instance_place(x+hspeed, y+vspeed+1, objBetterBlock);
        if (_inst != noone){
            var _ontop = false;
            
            if (gravity == 0 || (bbox_bottom - 3 &lt; _inst.bbox_top &amp;&amp; vspeed &gt; 0)){
                if (x &gt;= 152 &amp;&amp; x &lt;= 648){
                    _ontop = true;
                }else{
                    var _yDiff = (bbox_bottom + vspeed) - _inst.bbox_top;
                    if ((x &lt; 152 &amp;&amp; abs(x-152) &gt; _yDiff) || (x &gt; 648 &amp;&amp; abs(x-648) &gt; _yDiff)){
                        _ontop = true;
                    }
                }
            }
            if (_ontop){
                image_alpha -= 0.03;
                if (image_alpha &lt;= 0){
                    instance_destroy();
                }
                
                if (angInc != 0){
                    if (abs(angInc) &lt; 0.2)
                        angInc = 0;
                    else
                        angInc -= 0.2*sign(angInc);
                }
                if (hspeed != 0){
                    if (abs(hspeed) &lt; 0.15)
                        hspeed = 0;
                    else
                        hspeed -= 0.15*sign(hspeed);
                }
                
                if (gravity != 0){
                    y += vspeed;
                    vspeed = 0;
                    gravity = 0;
                }
            }else{
                if (x &lt; 152 &amp;&amp; hspeed &gt; 0){
                    x = 152 - ((x+hspeed)-152);
                    hspeed = -abs(hspeed);
                }else if (x &gt; 648 &amp;&amp; hspeed &lt; 0){
                    x = 648 - (648-(x+hspeed));
                    hspeed = abs(hspeed);
                }
                hspeed = abs(hspeed)*sign(x-400);
            }
        }else{
            gravity = gravInit;
        }
    }else{
        gravity = gravInit;
    }
    
    image_angle += angInc;
    
    if (image_alpha &gt;= 1){
        sprite_index = sprPlantsIWBTGSpikeShards;
        image_index = piece;
        
        if (place_meeting(x, y, objPlayer)){
            scrKillPlayer();
        }
        
        sprite_index = sprJumpRefresher;
    }
    
    if (glowFrames &gt; 0){
        glowFrames --;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprPlantsIWBTGSpikeShards, piece, x, y, image_xscale, image_yscale, image_angle, c_white, image_alpha);
if (glowFrames &gt; 0){
    draw_sprite_ext(sprPlantsIWBTGSpikeShards, 3+piece, x, y, image_xscale, image_yscale, image_angle, c_white, scrPlantsGlow(glowFrames, glowFramesMax));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
