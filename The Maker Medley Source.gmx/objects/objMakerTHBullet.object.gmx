<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerTHRounded</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-8</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
indexBase = -1;
alarm[11] = 1; //set indexBase
alphaInc = 0;
alphaDec = 0;
nokill = false;
curve = 0;
expand = 0;
indexCounter = 0;
depth = -8;
scale = false;
scaleTo = 1;
scaleInc = 0.05;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (indexBase &lt; 0){
    if (sprite_index == sprMakerTHPointed){
        if (image_index &lt; 45)
            indexBase = (image_index div 5)*5;
        else
            indexBase = image_index;
    }else if (indexBase &lt; 0){
        if (image_index &lt; 36)
            indexBase = (image_index div 4)*4;
        else
            indexBase = image_index;
    }
    if (sprite_index != sprMakerTHOrb){
        image_angle = direction;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (abs(x - room_width/2) &gt;= room_width*0.75 || abs(y - room_height/2) &gt;= room_height*0.75)
    instance_destroy();
    
if (sprite_index != sprMakerTHOrb &amp;&amp; image_angle != direction){
    if (abs(angle_difference(image_angle, direction)) &lt;= 12)
        image_angle = direction;
    else
        image_angle -= 12*sign(angle_difference(image_angle, direction));
}else if (sprite_index == sprMakerTHOrb){
    image_angle = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Curving
if (curve != 0 &amp;&amp; global.deathSlow &gt; 0){
    direction += global.deathSlow*curve;
}
//Image_index
if (indexBase &gt;= 0 &amp;&amp; indexBase &lt; 36){
    if (sprite_index != sprMakerTHOrb){
        var _frames;
        if (sprite_index == sprMakerTHPointed)
            _frames = 5;
        else
            _frames = 4;
        indexCounter = global.count mod 39;
        if (indexCounter &lt; 14)
            image_index = 0; //animation appears to pause for a brief moment
        else
            image_index = (indexCounter-14)*_frames/25;
        image_index = indexBase + clamp(image_index, 0, _frames-1);
    }else{
        image_index = indexBase + (global.count*4/25) mod 4;
    }
}
//expanding infinitely and fade
if (expand != 0){
    image_xscale += expand;
    image_yscale = image_xscale;
}
if (alphaDec != 0){
    image_alpha -= alphaDec;
    if (image_alpha &lt;= 0){
        instance_destroy();
    }
}
if (alphaInc != 0){
    image_alpha += alphaInc;
    if (alphaInc &lt; 0 &amp;&amp; image_alpha &lt;= 0){
        instance_destroy();
    }
}

//scaling to a final size
if (scale &amp;&amp; image_xscale &lt; scaleTo){
    image_xscale = min(image_xscale + scaleInc, scaleTo);
    image_yscale = image_xscale;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (image_alpha &gt;= 0.8 &amp;&amp; !nokill)
    scrKillPlayer();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
