<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerTHPointed</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-12</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
indexBase = 5;

timer = 0;
timerMax = 320; //720;

accel = 0;
accelCap = 5;
columns = 8;
columnHeight = 5;
columnSpacing = 280;
side = sign(xstart - 400);
if (side == 1){
    image_angle = 180;
}
firstColumnX = 400 + side*488;
for(var i=(columns-1);i&gt;=0;i--){
    rowSkipped[i] = irandom_range(1, 3);
    rowVisible[i] = false;
}
drawXOff = 0;
drawYOff = 0;
expand = false;

if (buff()){
    timerMax += 100;
    columnSpacing = 340;
    image_xscale = 1.5;
    image_yscale = 1.5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Collision checks with player
if (instance_exists(objPlayer) &amp;&amp; !expand){
    // Needed if we are also running Kurath's attack in the (unused) dual-attack mode
    var _screenTiltLeniency;
    if (abs(view_angle) &gt; 1){
        _screenTiltLeniency = 96;
    }else{
        _screenTiltLeniency = 0;
    }
    var _columnX = firstColumnX;
    
    for(var i=0; i&lt;columns; i++){
        if ((_columnX+_screenTiltLeniency) &gt; -14 &amp;&amp; (_columnX-_screenTiltLeniency) &lt; 811){
            if (instance_exists(objPlayer) &amp;&amp; (objPlayer.bbox_right &gt;= _columnX + (bbox_left-x) &amp;&amp; objPlayer.bbox_left &lt; _columnX + (bbox_right-x))){  // reduce number of `place_meeting()` checks to improve performance
                for(var j=0; j&lt;=(columnHeight-1); j++){
                    if (j != rowSkipped[i] &amp;&amp; place_meeting(_columnX, y - 32*image_yscale*j, objPlayer)){
                        scrKillPlayer();
                        break;
                    }
                }
            }
        }
        _columnX += columnSpacing*side;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _indexCounter = (global.count mod 39);

if (_indexCounter &lt; 14){
    image_index = 0;  // animation appears to pause for a brief moment
}else{
    image_index = (_indexCounter-14)*0.2;
}
image_index = 5 + clamp(image_index, 0, 4);

if (expand){
    image_xscale += 0.2;
    image_yscale = image_xscale;
    image_alpha -= 0.1;
    if (image_alpha &lt;= 0)
        instance_destroy();
}else{
    if (global.deathSlow &gt; 0){
        if (!global.dead &amp;&amp; accel &lt; accelCap){
            accel = min(accel + 0.06, accelCap);
        }
        var _mult = 1;
        if (buff()){_mult = 8/5;}
        
        firstColumnX += (global.deathSlow * accel*(-side)) * _mult;
    }
    
    
    var _columnX = firstColumnX;
    var _screenTiltLeniency;
    if (abs(view_angle) &gt; 1){
        _screenTiltLeniency = 96;
    }else{
        _screenTiltLeniency = 0;
    }
    if (side == -1 &amp;&amp; (firstColumnX+_screenTiltLeniency) &gt;= 811 + (columns-1)*columnSpacing){
        instance_destroy();
    }
    
    for(var i=0; i&lt;columns; i++){
        if ((_columnX+_screenTiltLeniency) &gt; -14 &amp;&amp; (_columnX-_screenTiltLeniency) &lt; 811){
            if (!rowVisible[i]){
                if ((i mod 2) == 0){
                    audio_play_sound(sndFinalKirbySlash, 0, 0);
                }else{
                    audio_play_sound(sndFinalKirbySlashRev, 0, 0);
                }
                rowVisible[i] = true;
            }
        }
        _columnX += columnSpacing*side;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _columnX = firstColumnX;
for(var i=0; i&lt;columns; i++){
    if (rowVisible[i]){
        for(var j=0; j&lt;=4; j++){
            if (j != rowSkipped[i]){
                draw_sprite_ext(sprite_index, image_index, _columnX + drawXOff, y - 32*image_yscale*j + drawYOff, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
            }
        }
    }
    _columnX += columnSpacing*side;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
