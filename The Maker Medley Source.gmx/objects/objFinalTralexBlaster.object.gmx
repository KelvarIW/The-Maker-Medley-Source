<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFinalTralexCannon</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-7</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>movementLerp = 0;
image_xscale = 3;
image_yscale = 3;
image_speed = 0;
attack = 0;
laserScale = 1;
laserScaleAppearanceMult = 0;
laserScaleShrink = false;
delayFrames = 0;
if (buff()){
    bartenderDist = 100;
}else{
    bartenderDist = 128;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (attack == 0){
    if (movementLerp &lt; 1){
        movementLerp = min(movementLerp + 1/45, 1);
        if (instance_exists(objFinalTralexBartender)){
            x = lerp(xstart, objFinalTralexBartender.x + bartenderDist*sign(xstart-400), sin(movementLerp * pi/2));
            y = lerp(ystart, 160, sin(movementLerp * pi/2));
        }
        if (image_angle != 0){
            var _angDiff = angle_difference(image_angle, 0);
            if (abs(_angDiff) &lt;= 90/45){
                image_angle = 0;
            }else{
                image_angle -= 90/45 * sign(_angDiff);
            }
        }
    }else{
        if (instance_exists(objFinalTralexBartender)){
            x = objFinalTralexBartender.x + bartenderDist*sign(xstart-400);
        }
    }
}else if (attack == 1){
    if (instance_exists(objFinalTralexBartender)){
        x = objFinalTralexBartender.x + bartenderDist*sign(xstart-400);
    }
    if (laserScaleAppearanceMult &lt; 1){
        laserScaleAppearanceMult += 0.1;
        if (laserScaleAppearanceMult &gt; 1){
            laserScaleAppearanceMult = 1;
        }
    }else if (laserScaleShrink){
        laserScale -= 1/40;
    }
    
    if (laserScale &gt; 1/10 &amp;&amp; laserScaleAppearanceMult &gt; 0){
        var _col = collision_rectangle(x-25*laserScale*laserScaleAppearanceMult, y+4*image_yscale, x+25*laserScale*laserScaleAppearanceMult, 608, objFinalP3Player, true, true);
        if (_col != noone){
            with (_col){
                event_user(0);
            }
        }
    }
}else if (attack == 2){
    image_speed = 0;
    vspeed -= 0.16;
    if (bbox_bottom &lt;= 0){
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw laser (in objFinalP3Additive)
if (attack == 1 &amp;&amp; laserScale &gt; 0){
    draw_sprite_ext(sprFinalTralexLaser, 0, x, y+29*image_yscale, (608-y)/32, laserScale*laserScaleAppearanceMult, 270, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
