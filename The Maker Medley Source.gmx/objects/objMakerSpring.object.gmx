<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerSpringYellow</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
type = 0; //green, yellow, red
strength[0] = 1; //unknown
strength[1] = 10.75;
strength[2] = 1; //unknown
sprung = false;
image_speed = 0;
animFrame = 0;
springspr[0] = sprMakerSpringYellow;
springspr[1] = sprMakerSpringYellow;
springspr[2] = sprMakerSpringYellow;
sprungspr[0] = sprMakerSprungYellow;
sprungspr[1] = sprMakerSprungYellow;
sprungspr[2] = sprMakerSprungYellow;
block = instance_create(x - 16, y - 16, objBetterBlock);
block.visible = false;
block.drawShadow = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(block))
    instance_destroy(block);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(block)){
    block.x = x-16;
    block.y = y-16;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprung){
    image_index -= 1/4;
    if (image_index &lt;= 0){
        image_index = 0;
        sprite_index = springspr[type];
        sprung = false;
    }
}else if (instance_exists(objPlayer)){
    with (objPlayer){
        if (place_meeting(xprevious + hspeed, yprevious + vspeed + global.grav, other)){
            var t_push = true;
            var t_left = xprevious - 5;
            var t_right = xprevious + 6 - 1;
            var t_top = yprevious - 12*global.grav;
            var t_bottom = yprevious + 9*global.grav - 1;
            if (other.image_angle mod 180 == 0){
                if (t_bottom &lt; other.bbox_top || t_top &gt; other.bbox_bottom || sign(x - other.x) != dcos(other.image_angle))
                    t_push = false;
                else
                    springHForce = other.strength[other.type]*sign(90 - other.image_angle); //we need to use springHForce because the Player's hspeed is a constant value
            }else{
                if (t_right &lt; other.bbox_left || t_left &gt; other.bbox_right || sign(y - other.y) != -dsin(other.image_angle))
                    t_push = false;
                else
                    vspeed = -other.strength[other.type]*sign(180 - other.image_angle);
            }
            if (t_push){
                with (other){
                    sprite_index = sprungspr[type];
                    audio_sound_pitch(audio_play_sound(sndMakerSpring, 0, 0), PITCH_FLUCT);
                    image_index = 2;
                    image_index = 2;
                    sprung = true;
                    var t_inc = 0;
                    switch(image_angle){ //we update x/yprevious for BetterBlocks
                        case 0:
                            t_inc = (bbox_right + 1) - objPlayer.bbox_left;
                            objPlayer.xprevious += t_inc;
                            objPlayer.x += t_inc;
                            break;
                        case 90:
                            t_inc = bbox_top - (objPlayer.bbox_bottom + 1);
                            objPlayer.yprevious += t_inc;
                            objPlayer.y += t_inc;
                            objPlayer.djump = 1;
                            break;
                        case 180:
                            t_inc = bbox_left - (objPlayer.bbox_right + 1);
                            objPlayer.xprevious += t_inc;
                            objPlayer.x += t_inc;
                            break;
                        case 270:
                            t_inc = (bbox_bottom + 1) - objPlayer.bbox_top;
                            objPlayer.yprevious += t_inc;
                            objPlayer.y += t_inc;
                            break;
                    }
                }
                with (objPlayer)
                    if (place_meeting(x, y, objBlock))
                        scrKillPlayer();
            }
        }
    }
}
animFrame += 0.1;
if (!sprung)
    image_index = animFrame;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
