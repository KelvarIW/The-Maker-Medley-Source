<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerTHRounded</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-8</depth>
  <persistent>0</persistent>
  <parentName>objMakerTHBullet</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
index = 0;
value1 = 0;
curve = 0;
trailPieces = 0;
trailPieceMax = 0;
trailX[0] = -100;
trailY[0] = -100;

expand = false; //P4 ending transition
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>value1 = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (expand){
    image_xscale += 0.2;
    image_yscale = image_xscale;
    image_alpha -= 0.1;
    if (image_alpha &lt;= 0){
        instance_destroy();
    }
    speed = 0;
    gravity = 0;
}else{
    event_inherited();
    switch(index){
        case 0:
            if (value1 == 0 &amp;&amp; y &gt;= 112 &amp;&amp; speed != 0){
                var _prevSpeed = speed;
                vspeed *= 2;
                if (buff()){
                    hspeed = random_range(-2.5, 2.5);
                }
                friction *= speed/_prevSpeed;
                value1 = 1;
            }
            if (value1 == 1){
                if (trailPieces &lt; trailPieceMax)
                    trailPieces = min(trailPieces+1, trailPieceMax);
                
                for (i=trailPieceMax-1; i &gt; 0; i--){
                    trailX[i] = trailX[i-1];
                    trailY[i] = trailY[i-1];
                }
                trailX[0] = x+hspeed;
                trailY[0] = y+vspeed;
            }
            break;
        case 1:
            if (value1 == 1 &amp;&amp; direction mod 180 != 90){
                var _angInc;
                if (buff()){
                    _angInc = 3.6;
                }else{
                    _angInc = 2.4;
                }
                if (abs((direction mod 180) - 90) &lt; 2.4*global.deathSlow){
                    direction = 180*(direction div 180) +90;
                }else{
                    direction -= 2.4*global.deathSlow;
                }
            }
            break;
        case 2:
            if (value1 == 0 &amp;&amp; y &gt;= 720){
                hspeed = random_range(1, 3)*choose(1, -1);
                vspeed *= 2;
                gravity = -0.164;
                
                audio_stop_sound(sndMakerSampleThrow);
                var _snd = audio_play_sound(sndMakerSampleThrow, 0, 0);
                audio_sound_pitch(_snd, PITCH_FLUCT);
                audio_sound_gain(_snd, PITCH_FLUCT * (global.sfxLevel/100 * global.volumeLevel/100), 0);
                value1 = 1;
            }
            if (value1 == 1){
                if (trailPieces &lt; trailPieceMax)
                    trailPieces = min(trailPieces+1, trailPieceMax);
                
                for (var i=(trailPieceMax-1); i &gt; 0; i--){
                    trailX[i] = trailX[i-1];
                    trailY[i] = trailY[i-1];
                }
                trailX[0] = x+hspeed;
                trailY[0] = y+vspeed;
            }
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Index-specific initialization
switch(index){
    case 0:
    case 2:
        if (room == rFinalBoss_4){
            vspeed = 6.4;
            trailPieceMax = 7;
        }else{  // Phase 1 avoidance
            if (buff()){
                vspeed = 4;
                trailPieceMax = 5;
            }else{
                vspeed = 3;
                trailPieceMax = 6;
            }
        }
        
        image_index = choose(8, 24);
        sprite_index = sprMakerTHOrb;
        break;
    case 1:
        image_index = irandom(7)*4;
        hspeed=sign(304-y)*irandom_range(10, 14)/2;
        /*if (alarm[0] &gt; 0){
            alarm[0] *= random_range(3.35, 4.74)/9;
        }*/
        image_angle = direction;
        break;
}

if (global.dead &amp;&amp; room == rFinalBoss_1){  // avoidance slowdown
    friction = speed/40;
    speed *= global.deathSlow;
}
for (var i=(trailPieceMax-1); i &gt;= 0; i--){
    trailX[i] = -100;
    trailY[i] = -100;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (trailPieces &gt;= 1){
    for(var i=trailPieces-1;i&gt;=0;i-=0.5){
        draw_sprite_ext(sprMakerTHOrb, image_index, trailX[i], lerp(trailY[floor(i)], trailY[ceil(i)], i mod 1), image_xscale * (trailPieces-i)/trailPieceMax, image_yscale * (trailPieces-i)/trailPieceMax, 0, c_gray, image_alpha);
    }
}

draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
