<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerButton</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>10</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
shineIndex = 0;
index = 0;
color = c_white;
pressed = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(index){
    case 0:
        color = cRed;
        break;
    case 1:
        color = cOra;
        break;
    case 2:
        color = cYel;
        break;
    case 3:
        color = cGre;
        break;
    case 4:
        color = cCya;
        break;
    case 5:
        color = cBlu;
        break;
    case 6:
        color = cPur;
        break;
    case 7:
        color = cPin;
        break;
    case 8:
        color = cGra;
        break;
    case 9:
        color = cWhi;
        break;
}
image_blend = color;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!pressed)
    shineIndex = max(0,  6*((global.count mod 96)/24 - 3));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objS2FlappyShip">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.dead || pressed)
    exit;
sprite_index = sprMakerButtonPressed;
pressed = true;
audio_sound_pitch(audio_play_sound(sndMakerButton, 0, 0), PITCH_FLUCT);
event_user(0); //includes room-specific triggers

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objBullet">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!pressed){
    sprite_index = sprMakerButtonPressed;
    pressed = true;
    audio_sound_pitch(audio_play_sound(sndMakerButton, 0, 0), PITCH_FLUCT);
    event_user(0); //includes room-specific triggers
    with (other) instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Triggered Events
with (objMakerMoveSpike){
    if (trigger == other.index){
        triggered = true;
    }
}
switch(room){
    case rStage02Telejump:
    case rStage04New_4:
        if (index == 0){
            with (objMakerPowerup){
                if ((room == rStage02Telejump &amp;&amp; ((x == 208 &amp;&amp; image_index == 0) || x == 96)) || (room == rStage04New_4 &amp;&amp; ((x == 272 &amp;&amp; image_index == 0) || x == 160))){
                    active = false;
                    image_alpha = 0.5;
                }
            }
            with (objSave){
                if (x &lt; other.x){
                    var t_inst;
                    t_inst = instance_create(x, y, objGeneralNonkiller);
                    t_inst.sprite_index = sprite_index;
                    t_inst.image_index = floor(image_index);
                    t_inst.image_speed = 1/5;
                    t_inst.depth = depth;
                    t_inst.vspeed = 8;
                    instance_destroy();
                }
            }
        }else{
            with (objMakerPowerup){
                if (x != 208 &amp;&amp; image_index == 0){
                    active = true;
                    image_alpha = 1;
                }
            }
        }
        break;
    case rStage02Flappy:
        with (objS2FlappyShip){
            t_inst = instance_create(x, y, objS2FlappyCutscene);
            t_inst.pHeadXOff = pHeadXOff;
            t_inst.pHeadScale = pHeadScale;
            t_inst.image_angle = image_angle;
            instance_destroy();
        }
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (pressed)
    draw_sprite_ext(sprite_index, index, x, y, image_xscale, image_yscale, image_angle, c_white, 1);
else
    draw_sprite_ext(sprite_index, 6*index + shineIndex, x, y, image_xscale, image_yscale, image_angle, c_white, 1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.800000011920929</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
