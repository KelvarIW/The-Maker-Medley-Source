<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFinalKirbySword</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-4</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_xscale = 2;
image_yscale = 2;
gravity = 0.425;
vspeed = -14;
state = 0;
alarm[0] = 20;
destDir = 0;
slashDir = 0;
slashFrame = -1;
drawXOff = 0;
drawYOff = 0;
relativeX = 0;
relativeY = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.dead){
    state = 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var _state1AngleDiff;  // half of slash range
if (buff()){
    _state1AngleDiff = 88;
}else{
    _state1AngleDiff = 55;
}

var _rotSpeed = 11;
var _signXscale = sign(image_xscale);
var _angOff = 0;
if (_signXscale == 1){
    _angOff = +45;
}else{
    _angOff = +135;
}


switch(state){
    case 0:
        image_angle += _rotSpeed*_signXscale;
        break;
    case 1:
        destDir = point_direction(x, y, objPlayer.x, objPlayer.y);
        
        var _diff = angle_difference(image_angle + _angOff, destDir);
        var _diffNext = angle_difference((image_angle + _angOff) + _rotSpeed*_signXscale, destDir);
        if (!global.dead &amp;&amp; abs(_diffNext) &lt;= _state1AngleDiff &amp;&amp; sign(_diffNext) == (-_signXscale)){
            gravity = 0;
            speed = 0;
            
            state = 2;
            slashFrame = 0;
            
            audio_play_sound(sndFinalKirbySlash, 0, 0);
        }else{
            image_angle += _rotSpeed*_signXscale;
            break;
        }
    case 2:
        image_angle += _rotSpeed*_signXscale;
        slashFrame += 4/((_state1AngleDiff div 11)*2 + 1);
        with (instance_create(x, y, objFinalKirbyBullet)){
            direction = other.image_angle + _angOff;
            depth = 1;
            spdCap = 6;  // override buff
            speed = spdCap;
        }
        var _diff = angle_difference(image_angle + _angOff, destDir);
        if (abs(_diff) &gt;= _state1AngleDiff &amp;&amp; sign(_diff) == _signXscale){
            state = 3;
            slashFrame = 4;
        }
        break;
    case 3:
        image_alpha -= 0.04;
        if (image_alpha &lt;= 0){
            instance_destroy();
        }
        break;
}


if ((state == 0 || state == 1) &amp;&amp; global.dead &amp;&amp; vspeed &gt; 0 &amp;&amp; bbox_top &gt; (room_height+32)){
    instance_destroy();
}else{
    var _originOffset;
    if (image_xscale &gt; 0){
        _originOffset = scrChangeOrigin(3, 15, 9, 9, image_angle);
    }else{
        _originOffset = scrChangeOrigin(16, 15, 10, 9, image_angle);
    }
    relativeX = (abs(image_xscale)*_originOffset[0]);
    relativeY = (image_yscale*_originOffset[1]);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprFinalKirbySword, 0, x + relativeX  +drawXOff, y + relativeY  +drawYOff, image_xscale, image_yscale, image_angle, c_white, image_alpha);
if (state &gt;= 2 &amp;&amp; slashFrame &lt; 4){
    draw_sprite_ext(sprFinalKirbySlashFX, slashFrame, x  +drawXOff, y  +drawYOff, 2, 2 * (-sign(image_xscale)), destDir, c_white, 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
