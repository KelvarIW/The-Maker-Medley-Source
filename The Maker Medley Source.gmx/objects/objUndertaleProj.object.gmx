<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerFruit</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objMakerFruit</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
index = 0;
rotRadSine = pi/2;
rotDirInc = 1.5;
rotDir = 0;
fadeout = false;
centerX = x;
centerY = 390;
centerSpd = 0;
counter = 0;  // buffed final boss P3
alarm[11] = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(index){
    case 4:
        speed *= 5;
        break;
    case 0:
        if (room == rFinalBoss_3){
            if (buff()){
                if (hspeed &lt; 0){
                    hspeed -= 0.2;
                }else{
                    hspeed += 0.2;
                }
                hspeed *= random_range(2.5, 3.5);
                vspeed -= random_range(3.3, 4.5);
                gravity = random_range(0.108, 0.145);
            }else{
                speed *= 5;
            }
        }
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch(index){
    case 0: //ONLY in rFinalBoss_3
    case 4:
        speed /= 5;
        break;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//event_inherited(); //these projectiles are destroyed much earlier than the parent

if (index == 0){
    if (bbox_top &gt;= 481){
        instance_destroy();
    }else if (gravity != 0){
        event_user(1);  // Rotate towards direction
    }
}else if (index == 1){
    var _window = noone;
    if (room == rFinalBoss_3)
        _window = objFinalP3UndertaleWindow;
    else
        _window = objUndertaleWindow;
    if (instance_exists(_window)){
        if (bbox_left &lt;= _window.x+5){
            hspeed = abs(hspeed);
            x -= 2*(bbox_left - (_window.x+5))
        }else if (bbox_right &gt;= 400 + 400 - (_window.x+5)){
            hspeed = -abs(hspeed);
            x -= 2*(bbox_right - (400 + 400 - (_window.x+5)))
        }
        if (bbox_bottom &gt;= 481){
            vspeed = -abs(vspeed);
            y -= 2*(bbox_bottom - 481)
        }else if (bbox_top &lt;= 298){
            vspeed = abs(vspeed);
            y -= 2*(bbox_top - 298)
        }
    }
}else if (index == 3){
    if (bbox_bottom &lt;= 298)
        instance_destroy();
}else if (index == 4){
    if (instance_exists(objUndertaleWindow)){
        if (objUndertaleWindow.size != 690 &amp;&amp; (bbox_right &lt;= objUndertaleWindow.x+5 || bbox_left &gt;= 400 + 400 - (objUndertaleWindow.x+5) || bbox_top &gt;= 481 || bbox_bottom &lt;= 298)){
            instance_destroy();
        }
    }
}else if (index == 5){
    if (abs(400-x) &gt; 412){
        instance_destroy();
    }
}

if (fadeout){
    image_alpha -= 0.1;
    if (image_alpha &lt;= 0){
        instance_destroy();
    }
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (!fadeout){
    switch(index){
        case 2:
            /*  // removed (former buff)
            var _buffLen = 440;
            if (room == rFinalBoss_3 &amp;&amp; buff()){
                counter ++;
                centerSpd = 5.76 * cos(pi * min(counter/_buffLen, 1));
            }*/
            
            centerX += centerSpd*sign(400-xstart);
            if (rotRadSine &lt; pi/2){
                rotRadSine = min(rotRadSine+pi/90, pi/2);
            }
            rotDir += rotDirInc;
            //if (((room == rStage03Undertale || room == rStage03UndertalePractice) &amp;&amp; centerX &gt;= 600) || (room == rFinalBoss_3 &amp;&amp; ((!buff() &amp;&amp; abs(x-400) &gt;= 480 &amp;&amp; sign(400-x) != sign(400-xstart)) || (buff() &amp;&amp; counter &gt;= _buffLen)))){
            if (((room == rStage03Undertale || room == rStage03UndertalePractice) &amp;&amp; centerX &gt;= 600) || (room == rFinalBoss_3 &amp;&amp; (abs(x-400) &gt;= 480 &amp;&amp; sign(400-x) != sign(400-xstart)))){
                instance_destroy();
            }else{
                x = centerX + lengthdir_x(80*abs(sin(rotRadSine)), rotDir);
                y = centerY + lengthdir_y(80*abs(sin(rotRadSine)), rotDir);
            }
            break;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Rotate towards direction
if (sprite_index != sprMakerTHOrb &amp;&amp; image_angle != direction){
    if (abs(angle_difference(image_angle, direction)) &lt;= 12)
        image_angle = direction;
    else
        image_angle -= 12*sign(angle_difference(image_angle, direction));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Index-based initialization
switch(index){
    case 0:
        sprite_index = sprMakerTHRounded;
        image_index = 37;
        speed = 3;
        image_angle = direction;
        
        if (room == rFinalBoss_3){ //similar to Colonel bullets
            speed = 6;
            var _firstDelay, _secondDelay;
            if (buff()){
                _firstDelay = irandom_range(10, 16);
                _secondDelay = irandom_range(30, 45);
            }else{
                _firstDelay = 8;
                _secondDelay = 30;
            }
            
            alarm[0] = _firstDelay;
            alarm[1] = _firstDelay + _secondDelay;
        }
        break;
    case 1:
        speed = 3;
        gravity = 0.3;
        image_xscale = 0.5;
        image_yscale = 0.5;
        indexBase = 20;
        image_index = indexBase + (global.count mod 30)/15;
        break;
    case 2: // Circular
        if (room == rFinalBoss_3 &amp;&amp; buff()){
            centerSpd = 5;
        }else{
            centerSpd = 2;
        }
        indexBase = 20;
        image_index = indexBase + (global.count mod 30)/15;
        break;
    case 3:
        vspeed = -4;
        indexBase = 20;
        image_index = indexBase + (global.count mod 30)/15;
        break;
    case 4: //Colonel
        sprite_index = sprMakerTHPointed;
        image_index = 35;
        speed = 4.25;
        image_xscale = 0.5;
        image_yscale = 0.5;
        image_angle = direction;
        alarm[0] = 16;
        alarm[1] = 16 + 30;
        break;
    case 5: //Final Boss 2nd Undertale attack
        hspeed = 6;
        indexBase = 20;
        break;
}

if (indexBase &gt;= 0){
    image_index = indexBase + (global.count mod 30)/15;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
