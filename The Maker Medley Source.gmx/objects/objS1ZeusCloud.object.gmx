<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprS1ZeusCloud</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-13</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
shootCooldown = 0;
darkAlphaSine = -1;

drawXOff = 0;
drawYOff = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(objPlayer)){
    x = objPlayer.x + 112;
    
    if (scrButtonCheckPressed(global.shootButton))
        event_user(0);
    
    if (shootCooldown &gt; 0){
        shootCooldown --;
        if (shootCooldown &lt;= 0){
            shootCooldown = -1;
        }
    }
}else if (instance_exists(objMakerTeleTransition)){
    x = objMakerTeleTransition.x + 112;
}

image_xscale = 0.6 - 0.1*sin(global.count * pi/80 + pi/2);
image_yscale = 0.6 - 0.1*sin(global.count * pi/80);
if (darkAlphaSine &gt;= 0){
    if (darkAlphaSine &lt; pi/2){
        darkAlphaSine = min(darkAlphaSine + pi/4, pi/2);
    }else{
        darkAlphaSine += pi/14;
        if (darkAlphaSine &gt;= pi){
            darkAlphaSine = -1;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Fire Lightning
if (!(shootCooldown &gt; 0 || (room == rStage04New_1 &amp;&amp; x &gt;= 592))){
    with (instance_create(x, y, objS1ZeusLightning)){
        if (place_meeting(x, y, objBlock)){
            instance_destroy();
            with (other) exit;
        }
    }
    darkAlphaSine = 0
    shootCooldown = 9;
    
    audio_play_sound(sndS1ZeusShoot, 0, 0);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (room == rStage04New_1){
    if (bbox_right &lt; 592){
        draw_sprite_ext(sprite_index, image_index, x  + drawXOff, y  + drawYOff, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
        draw_sprite_ext(sprite_index, 1, x  + drawXOff, y  + drawYOff, image_xscale, image_yscale, image_angle, image_blend, sin(darkAlphaSine));
    }else{
        draw_sprite_part_ext(sprite_index, 0, 0, 0, (592-bbox_left)/image_xscale, 60, x-57*image_xscale  + drawXOff, y-32*image_yscale  + drawYOff, image_xscale, image_yscale, c_white, 1);
        draw_sprite_part_ext(sprite_index, 1, 0, 0, (592-bbox_left)/image_xscale, 60, x-57*image_xscale  + drawXOff, y-32*image_yscale  + drawYOff, image_xscale, image_yscale, c_white, sin(darkAlphaSine));
    }
}else{
    draw_sprite_ext(sprite_index, image_index, x  + drawXOff, y  + drawYOff, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
    draw_sprite_ext(sprite_index, 1, x  + drawXOff, y  + drawYOff, image_xscale, image_yscale, image_angle, image_blend, sin(darkAlphaSine));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
