<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprS2ElevatorDoor</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>1002</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>alarm[3] = 65;
global.canRestart = false;
scrSaveGame(true);

//elevator variables
openAmt = 0;
gray = make_color_rgb(221, 221, 221);
green = make_color_rgb(0, 184, 0);
lightUp = false;
skipping = false;
canSkip = false;
waiting = false;  // for player to go in elevator
drawText = false;
if (!global.controllerMode){
    message = "Press " + scrGetKeybind(global.upButton[0], "Up");
}else{
    message = "Press " + scrGetControllerBind(global.upButton[1], "Up");
}
textAlpha = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Go to rStage02Shark1
global.playElevator = true;
room_goto(rStage02Shark1);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start text
with (objS2NANGCtrl){
    text = "Hello there Kid!";
    textLength = string_length(text);
    subMessage = 0;
    textDelay = 1;
    alarm[0] = -1;
}
if (!canSkip){
    instance_create(0, 0, objMakerCutsceneSkip);
    canSkip = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Close doors
if (openAmt &gt; 0){
    openAmt -= 3;
    if (openAmt &lt;= 0){
        openAmt = 0;
        var t_fade = instance_create(x, y, objScreenFade);
        t_fade.alpha = 0;
        t_fade.color = c_black;
        t_fade.fade = 0;
        t_fade.fadeIn = 0.03;
        t_fade.fadeOut = 0;
        alarm[4] = 140/3;
    }else
        alarm[2] = 5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Open doors
if (openAmt &lt; 21){
    openAmt += 3;
    if (openAmt &gt;= 21){
        openAmt = 21;
        with (objS2NANGCtrl){
        	subMessage = 2;
        	textDelay = 0;
        	alarm[1] = 20;
    	}
    }else
        alarm[1] = 5;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Elevator light
lightUp = true;

audio_play_sound(sndS2NANGDing, 0, 0);
alarm[1] = 35;
with (objS2NANGCtrl){
    alarm[1] = 35;
}

canSkip = false;
with (objMakerCutsceneSkip){disappear = true;}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drawText = (waiting &amp;&amp; instance_exists(objPlayer) &amp;&amp; objPlayer.x &gt;= 390 &amp;&amp; objPlayer.x &lt;= 403 &amp;&amp; objPlayer.y &gt;= 375);
if (drawText){
    if (textAlpha &lt; 1){
        textAlpha = min(1, textAlpha + 0.09);
    }
    if (scrButtonCheckPressed(global.upButton)){
        var t_kid;
        t_kid = instance_create(objPlayer.x, objPlayer.y, objS2ElevatorKid);
        t_kid.image_xscale = objPlayer.xScale;
        t_kid.image_index = objPlayer.image_index;
        instance_destroy(objPlayer);
    }
}else{
    if (textAlpha &gt; 0){
        textAlpha = max(0, textAlpha - 0.055);
    }
}

if (!waiting &amp;&amp; canSkip &amp;&amp; !skipping &amp;&amp; scrButtonCheckPressed(global.skipButton) &amp;&amp; instance_exists(objS2NANGCtrl) &amp;&amp; instance_exists(objMakerCutsceneSkip)){
    skipping = true;
    with (objMakerCutsceneSkip){disappear = true;}
    
    with (objS2NANGCtrl){
        subMessage = max(1, subMessage);
        textDelay = 0;
        
        // run through dialogue until it reaches the end
        while (subMessage != -1){
            event_perform(ev_alarm, 1);
        }
        textPosition = string_length(text);
        alarm[1] = -1;
    }
    event_perform(ev_alarm, 0);
    alarm[0] = -1;
    
    //shorten delay
    alarm[1] = 5;
    with (objS2NANGCtrl){
        alarm[1] = 5;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_rectangle(x-2, y, x+60, y+96, false);
draw_rectangle(x+17, y-14, x+42, y-4, false);
if (lightUp){
    draw_set_color(green);
}else{
    draw_set_color(gray);
}
draw_rectangle(x+18, y-13, x+41, y-5, false);
draw_set_color(c_white);
draw_sprite_part(sprS2ElevatorDoor, 0, openAmt, 0, 28 - openAmt, 96, x, y);
draw_sprite_part_ext(sprS2ElevatorDoor, 0, openAmt, 0, 28 - openAmt, 96, x + 58, y, -1, 1, c_white, 1);

if (textAlpha &gt; 0){
    draw_set_halign(fa_center);
    draw_set_valign(fa_middle);
    draw_set_font(fDefault12);
    draw_set_alpha(textAlpha);
    scrDrawTextOutline(400, 320, message, c_white, c_black);
    draw_set_alpha(1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
