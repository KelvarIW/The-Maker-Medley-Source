<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprFinalBossRNG</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>2</depth>
  <persistent>0</persistent>
  <parentName>objFinalRNGDie</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
latchedOn = true;
image_alpha = 0;
alarm[0] = 80;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///End the "showcase" part of the pre-final boss cutscene
with (objGeneralDialogue){
    movingDown = true;
    alarm[1] = 1;
}
grow = false;
shrink = true;
ystart = y;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//do not inherit
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (grow){
    if (appearLerp &lt; 1){
        appearLerp = min(appearLerp + appearChange, 1);
        if (appearLerp == 1){
            grow = false;
            shrink = false;  // see above (though this should be redundant)
        }
    }
}else if (shrink){
    if (appearLerp &gt; 0){
        appearLerp = max(appearLerp - appearChange, 0);
        if (appearLerp == 0){
            instance_destroy();  // for the cutscene
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Used to draw dropshadow
draw_sprite_ext(sprite_index, image_index, x  + appearXDiff*sin(appearLerp * pi/2), y - appearYDiff*sin(appearLerp * pi/2), image_xscale, image_yscale, 0, c_white, appearLerp/2 + 0.5);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (instance_exists(objFinalRNGDiePart)){
    draw_set_blend_mode(bm_add);
    with (objFinalRNGDiePart){
        draw_self();
    }
    draw_set_blend_mode(bm_normal);
}

if (global.finalGlowEnabled &amp;&amp; global.extraEffects){
    if (!surface_exists(surf))
        surf = surface_create(256, 256);
    
    if (surface_exists(surf)){
        surface_set_target(surf);
        draw_clear_alpha(c_black, 0);
        
        draw_sprite_ext(sprite_index, image_index, 128, 128, 1, 1, 0, c_white, 1);
        
        surface_reset_target();
        
        if (glowAlpha &gt; 0){
            shader_set(shdFinalWhite);
            shader_set_uniform_f(global.finalGlowHandle, 256*image_xscale, 256*image_yscale, 20, glowAlpha);
            draw_surface_ext(surf, x-128*image_xscale, y-128*image_yscale - appearYDiff*sin(appearLerp * pi/2), image_xscale, image_yscale, 0, c_white, 1);
            shader_reset();
        }
        draw_surface_ext(surf, x-128*image_xscale, y-128*image_yscale - appearYDiff*sin(appearLerp * pi/2), image_xscale, image_yscale, 0, c_white, appearLerp/2 + 0.5);
    }
}else{
    draw_sprite_ext(sprite_index, image_index, x, y - appearYDiff*sin(appearLerp * pi/2), image_xscale, image_yscale, 0, c_white, appearLerp/2 + 0.5);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
