<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerFruit</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-8</depth>
  <persistent>0</persistent>
  <parentName>objMakerFruit</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
freq = 56;
hSpd = 0;
vSpd = 0;
hFrict = 0;
vFrict = 0;
buffPsuedoRNG = 0;
ident = 0; ///ending disappearance
sineVal = pi/2;
image_index = irandom_range(0, 6)*2;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();

sineVal += 2*pi/freq;
if (buffPsuedoRNG != 0 &amp;&amp; buff() &amp;&amp; vFrict == 0 &amp;&amp; sineVal &gt;= pi * 3/2){
    if (vSpd == 0){
        vSpd = abs(buffPsuedoRNG * hSpd * 1/2);
    }else if (hSpd == 0){
        hSpd = buffPsuedoRNG * vSpd * 1/2;
    }
    buffPsuedoRNG = 0;
}

if (hSpd != 0){
    if (hFrict != 0){
        if(abs(hSpd) &lt;= hFrict){
            hSpd = 0;
        }else{
            hSpd -= hFrict;
        }
    }
    x += global.deathSlow * hSpd*(1 + sin(sineVal)/2);
}
if (vSpd != 0){
    if (vFrict != 0){
        if(abs(vSpd) &lt;= vFrict){
            vSpd = 0;
            vFrict = 0;
        }else{
            vSpd -= vFrict;
        }
    }
    y += global.deathSlow * vSpd*(1 + sin(sineVal)/2);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
