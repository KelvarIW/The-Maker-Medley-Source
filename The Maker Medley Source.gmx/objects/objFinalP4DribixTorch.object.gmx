<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerTorchProp</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-13</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sprFinalDribixTorch</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>cautionSignCounter = 0;
cautionSignNumber = 0;
shootCounter = 0;
shootNum = 0;
col = choose(c_maroon, c_red);
image_speed = 1/4;

trailPieces = 0;
trailPieceMax = 8;
for (i=(trailPieceMax-1); i &gt;= 0; i--){
    trailX[i] = -100;
    trailY[i] = -100;
}
rotSpd = -6;

image_xscale = 2;
image_yscale = 2;

mask_index = sprFinalDribixTorch; //I'm putting it here as well as in the properties window. Please please do not let it get reset to -1 or whatever
expand = false; //for the transition to the "DELETE HIM!" section.

if (instance_exists(objPlayer)){
    if (abs(x - objPlayer.x) &lt; 100){
        var _sign = sign(x - objPlayer.x);
        if (_sign == 0){
            _sign = choose(1, -1);
        }
        if (abs((x + 100*_sign) - 400) &gt; 270){
            _sign *= -1;
        }
        x += 100 * _sign;
        xstart = x;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (expand){
    image_xscale += 0.2;
    image_yscale = image_xscale;
    image_alpha -= 0.1;
    if (image_alpha &lt;= 0)
        instance_destroy();
    
    speed = 0;
    gravity = 0;
}else{
    if (cautionSignCounter &gt;= 0){
        cautionSignCounter += 1;
        if (!global.dead &amp;&amp; (cautionSignCounter &lt;= 7*5 &amp;&amp; cautionSignCounter mod 7 == 0)){
            cautionSignNumber ++;
            audio_sound_pitch(audio_play_sound(sndMakerExclamation, 0, 0), random_range(1.25, 1.35));
        }
    }
    
    if ((!global.dead || vspeed &gt; 0) &amp;&amp; cautionSignCounter &gt;= 35 &amp;&amp; y &lt; room_height){
        if (vspeed &lt; 12){
            vspeed = clamp(vspeed + 0.3, 6, 12);
        }
        
        //fire projectiles
        shootCounter += 1;
        if (shootCounter &gt;= 4 &amp;&amp; y &gt;= ystart + 80){
            var _inst = -4;
            switch(shootNum mod 3){
                case 0:
                    //always right
                    _inst = instance_create(x + lengthdir_x(11*image_yscale, image_angle + 90), y + lengthdir_y(11*image_yscale, image_angle + 90), objFinalP4DribixTorchProj);
                    _inst.hspeed = max(abs(_inst.hspeed), 1.75);
                break;
                case 1:
                    //always left
                    _inst = instance_create(x + lengthdir_x(11*image_yscale, image_angle + 90), y + lengthdir_y(11*image_yscale, image_angle + 90), objFinalP4DribixTorchProj);
                    _inst.hspeed = -(max(abs(_inst.hspeed), 1.75));
                break;
                case 2:
                    //truly random
                    _inst = instance_create(x + lengthdir_x(11*image_yscale, image_angle + 90), y + lengthdir_y(11*image_yscale, image_angle + 90), objFinalP4DribixTorchProj);
                break;
            }
            
            //sfx
            audio_sound_pitch(audio_play_sound(sndMakerSampleThrow, 0, 0), random_range(0.9, 1.1));
            
            shootNum ++;
            shootCounter = 0;
        }
    }
    
    if (trailPieces &lt; trailPieceMax)
        trailPieces = min(trailPieces+1, trailPieceMax);
    
    for (var i=floor(trailPieceMax-1); i &gt; 0; i--){
        trailX[i] = trailX[i-1];
        trailY[i] = trailY[i-1];
    }
    trailX[0] = xprevious;
    trailY[0] = yprevious;
    
    image_angle += rotSpd;
    
    if (bbox_top &gt; room_height+64 &amp;&amp; trailY[floor(trailPieceMax-1)] &gt; room_height+64+18*image_yscale){
        instance_destroy();
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(var i=0; i&lt;min(cautionSignNumber, 6); i++){
    if (cautionSignCounter - 7*i &lt; 20){
        draw_sprite_ext(sprMakerDangerTriangle, max(((global.count mod 78)*14/50 - 47), 0), xstart, 608 + 59 + 98*i, image_xscale/2 * max(3 - 2*(cautionSignCounter-7*i)/20, 1), image_yscale/2 * max(3 - 2*(cautionSignCounter-7*i)/20, 1), 0, c_white, min((cautionSignCounter-7*i)/20, image_alpha));
    }else if (cautionSignCounter - 7*i &lt; 38){
        draw_sprite_ext(sprMakerDangerTriangle, max(((global.count mod 78)*14/50 - 47), 0), xstart, 608 + 59 + 98*i, image_xscale/2, image_yscale/2, 0, c_white, image_alpha);
    }else if (cautionSignCounter - 7*i &lt; 78){
        draw_sprite_ext(sprMakerDangerTriangle, max(((global.count mod 78)*14/50 - 47), 0), xstart, 608 + 59 + 98*i, image_xscale/2, image_yscale/2, 0, c_white, image_alpha*(1 - ((cautionSignCounter - 7*i) - 38)/40));
    }
}

if (vspeed &gt; 0){
    if (trailPieces &gt;= 1){
        var i;
        for(i=floor(trailPieces-1); i&gt;=0; i-=1){
            draw_sprite_ext(sprite_index, image_index-image_speed*(i+1), trailX[i], trailY[i], image_xscale, image_yscale, image_angle-rotSpd*(i+1), c_maroon, image_alpha*(1 - ((i+2)/(trailPieceMax+1))));
        }
    }
    
    draw_self();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
