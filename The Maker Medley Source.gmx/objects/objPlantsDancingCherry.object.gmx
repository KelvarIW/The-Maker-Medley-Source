<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprCherry</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objPlantsCherry</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
image_index = 1;
moveDelay = 16;
moves = 0;
danced = false;
danceDelay = 0;
danceTimer = 0;
pulseTimer = pi;
miku = noone;
mikuXOff = 0;
flipTo = 1;
image_xscale = 1;
image_yscale = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (miku){
    for(var i=0;i&lt;4;i++){
        if (cherry[i] == other){
            cherry[i] = noone;
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!frozen &amp;&amp; !dead){
    scrPlantsEnemyStep(false);
    
    danceTimer ++;
    var _dancePos;
    if (instance_exists(miku) &amp;&amp; !miku.dead &amp;&amp; !killing){
        _dancePos = ((miku.danceTimer) mod 165);
    }else{
        _dancePos = (danceTimer mod 165);
    }
    var _stopMoving = (_dancePos &gt;= 90 &amp;&amp; _dancePos &lt; 150);
    
    if (!killing){
        if (instance_exists(attacking)){
            if (attackingTimer &gt;= 0 &amp;&amp; attackingTimer &lt;= 6){
                if (attackingTimer == 6){
                    image_index = 0;
                }
                x -= attackingTimer/3;
            }else if (attackingTimer &gt;= (attackingTimerLen-6)){
                if (attackingTimer == (attackingTimerLen-6)){
                    image_index = 1;
                }
                x += (attackingTimerLen-attackingTimer)/3;
            }
            flipTo = 1;
        }else if (!_stopMoving || !instance_exists(miku)){
            var _move = 0.75;
            
            if (!instance_exists(miku) || miku.dead || (x - _move) &gt;= miku.x + mikuXOff || killing){
                x -= _move;
            }else if (instance_exists(miku) &amp;&amp; (miku.sprite_index == sprPlantsMikuRun &amp;&amp; abs(x - (miku.x + mikuXOff)) &lt;= _move)){
                x = (miku.x + mikuXOff);
            }
        }
    }
    
    if (!instance_exists(attacking) &amp;&amp; image_yscale &gt;= 1){
        if (_dancePos &gt;= 0){
            if (danceDelay &gt; 0){
                danceDelay --;
            }else{
                if ((_dancePos == 8 || _dancePos == 28 || _dancePos == 50 || _dancePos == 70) &amp;&amp; pulseTimer &gt;= pi){
                    pulseTimer = 0;
                }else if (_stopMoving){
                    if ((_dancePos &gt;= 90 &amp;&amp; _dancePos &lt; 112) || (_dancePos &gt;= 130 &amp;&amp; _dancePos &lt; 150)){
                        flipTo = -1;
                    }else{
                        flipTo = 1;
                    }
                }else if (flipTo != 1){
                    flipTo = 1;
                }
            }
        }else{
            flipTo = 1;
        }
    }
    
    if (image_yscale &lt; scaleTo){
        image_yscale = min(scaleTo, image_yscale+scaleTo/10);
        image_xscale = image_yscale;
    }
    
    //Dancing
    if (pulseTimer &gt;= pi &amp;&amp; image_xscale != (flipTo)*scaleTo){
        if (image_xscale == (-flipTo)*scaleTo){
            image_xscale = (-flipTo/2) * scaleTo;
            danceDelay = 2;
        }else if (image_xscale == (-flipTo/2)*scaleTo){
            image_xscale = (flipTo/2) * scaleTo;
            danceDelay = 4;
        }else if (image_xscale == (flipTo/2)*scaleTo){
            image_xscale = (flipTo) * scaleTo;
            danceDelay = 2;
        }
    }else if (pulseTimer &lt; pi &amp;&amp; image_yscale &gt;= scaleTo){
        pulseTimer += pi/8;
        if (pulseTimer &gt; pi){
            pulseTimer = pi;
        }
        image_xscale = scaleTo * (1 + 0.4*sin(pulseTimer));
        image_yscale = abs(image_xscale);
    }
}/*else if (crushed){
    if (instance_exists(shield)){
        with (shield){
            crushed = true;
            crushTimer = other.crushTimer;
        }
    }
}*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Game Over `killing` animation
if (killingState == 1){
    image_index = 0;
    if (instance_exists(objPlantsPlayerCage)){
        direction = point_direction(x, y, objPlantsPlayerCage.x, objPlantsPlayerCage.y);
        speed = 2.4;
        friction = -0.08;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
