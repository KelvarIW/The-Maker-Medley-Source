<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprGameOver</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-400</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_alpha = 0;
alarm[0] = 30;

//Used for the  Game Over ~~ and  Practice Clear~~ text
lblue = make_color_rgb(123, 193, 243);
yellow = make_color_rgb(247, 194, 61);
textAlpha = 0;
fadeIn = (global.autoRestart);   // will be immediately set to `true` for Game Over  text if `global.autoRestart` is true
practiceClearText = false;
surf = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fadeIn = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (fadeIn &amp;&amp; textAlpha &lt; 1){
    textAlpha += 1/20;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
    surface_free(surf);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (textAlpha &gt; 0 &amp;&amp; !instance_exists(objMakerAutoRestart)){
    if (!surface_exists(surf)){
        draw_set_font(fGameOver);
        draw_set_halign(fa_left);
        draw_set_valign(fa_top);
        var _keyStr, _result;
        if (!practiceClearText){
            if (!global.controllerMode){
                _keyStr = scrGetKeybind(global.restartButton[0], "the Restart key");
            }else{
                _keyStr = scrGetControllerBind(global.restartButton[0], "the Restart key");
            }
            _result = "restart";
        }else{
            _keyStr = "F2";
            _result = "return to the menu";
        }
        
        surf = surface_create(400, 64);
        if (surface_exists(surf)){
            surface_set_target(surf);
            draw_clear_alpha(c_black, 0);
            draw_set_color(lblue);
            draw_text_outline(16, 0, "Press", 4, c_black, 24);
            draw_text_outline(16 + string_width("Press_''''" + _keyStr), 0, " to " + _result, 4, c_black, 24);
            draw_set_color(yellow);
            draw_text_outline(16 + string_width("Press_''"), 0, _keyStr, 4, c_black, 24);
            draw_text_transformed_outline(16 + string_width("Press___" + _keyStr), 0, "''", 4, c_black, 24, -1, 1, 0);
            draw_text_transformed_outline(16 + string_width("Press__") - 6, 0, "''", 4, c_black, 24, -1, 1, 0);
            draw_set_color(c_white);
            surface_reset_target();
        }
    }
    if (surface_exists(surf)){
        draw_set_alpha(textAlpha);
        draw_surface(surf, view_xview, view_yview+16);
        draw_set_alpha(1);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
