<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerShuriken</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-9</depth>
  <persistent>0</persistent>
  <parentName>objPlayerKiller</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fadeOut = false;
speed = 4;
alarm[0] = 35;
projAng = 0;
flyOff = false;
counter = 35;
counter2 = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (fadeOut){
    image_alpha -= 0.045;
    if (image_alpha &lt;= 0)
        instance_destroy();
}
if (counter &gt;= 0){
    counter -= global.deathSlow;
    if (counter &lt;= 0){
        if (instance_exists(objPlayer) || instance_exists(objAvoPar)){
            with (instance_create(x, y, objChaozC03bNewProj)){
                if (instance_exists(objPlayer)){
                    direction = point_direction(x, y, objPlayer.x, objPlayer.y);
                }else if (instance_exists(objAvoPar)){
                    direction = point_direction(x, y, objAvoPar.playerX, objAvoPar.playerY);
                }
                speed = 4;
                if (global.dead){
                    friction = speed/40;
                    speed *= global.deathSlow
                }
            }
        }
        counter = 35;
    }
}
if (counter2 &gt;= 0){
    counter2 -= global.deathSlow;
    if (counter2 &lt;= 0){
        var _proj = instance_create(x, y, objChaozC03bNewProj);
        _proj.direction = projAng;
        _proj.speed = 4;
        if (global.dead){
            _proj.friction = _proj.speed/40;
            _proj.speed *= global.deathSlow
        }
        if (buff()){
            projAng += 25;
            counter2 = 3;
        }else{
            projAng += 40;
            counter2 = 4;
        }
    }
}

image_angle -= 2.5*sign(hspeed)*global.deathSlow;
if (!flyOff){
    if (x &lt; 128)
        hspeed = abs(hspeed);
    else if (x &gt; 672)
        hspeed = -abs(hspeed);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_black);
draw_ellipse(x-12, y-12, x+12, y+12, false);
draw_set_color(c_white);
draw_self();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
