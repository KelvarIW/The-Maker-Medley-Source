<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprMakerTHOrb</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>type = irandom_range(1, 10);
shrink = false;
rotSpd = 0;
indexBase = 0;
drawXOff = 0;
drawYOff = 0;
trailPieces = 0;
trailPieceMax = 0;
trailX[0] = 0;
trailY[0] = 0;

hspeed = random_range(0, 4.5);
vspeed = random_range(-8, -4);
gravity = 0.135;

switch (type){
    case 1:
        trailPieces = 12;
        alarm[0] = 1;
        
        /*  // Buffed targetting  (Scrapped)
        if (buff()){
            hspeed *= 2;
            vspeed += 4;
            gravity = 0;
            alarm[1] = irandom_range(48, 64);
            friction = max(friction, speed/max(alarm[1], 1));
        }*/
    break;
    
    case 2:
        sprite_index = sprMakerTHOrb;
        indexBase = 32;
    break;
    
    case 3:
        sprite_index = sprMakerTHPointed;
        indexBase = 5;
    break;
    
    case 4:
        sprite_index = sprMakerTHOrb;
        indexBase = 32;
        trailPieces = choose(8, 24);
        
        /*if (buff()){
            var _delay = 0;
            if (gravity &gt; 0){  // failsafe - prevent division by zero
                var _delay = abs(vspeed)/gravity;
            }
            
            alarm[1] = _delay + irandom_range(20, 40);
        }*/
        trailPieces = 0;
        trailPieceMax = 4;
        for (var i=(trailPieceMax-1); i &gt;= 0; i--){
            trailX[i] = -100;
            trailY[i] = -100;
        }
    break;
    
    case 5:
        sprite_index = sprPlantsIWBTGSpike;
    break;
    
    case 6:
        sprite_index = sprMakerFruit;
        indexBase = 2;
    break;
    
    case 7:
    case 10:
        sprite_index = sprMakerFruit;
        indexBase = irandom(6) * 2;
    break;
    
    case 8:
        sprite_index = sprFinalP4TralexStar;
        hspeed = sign(hspeed) * (2 + (abs(hspeed) - 2)/2);
        
        if (abs(hspeed) &lt; 0.75){
            if (hspeed &lt; 0){
                hspeed = -0.75;
            }else{
                hspeed = 0.75;
            }
        }else if (abs(hspeed) &gt; 2.5){
            hspeed = -2.5*sign(hspeed);
        }
        vspeed *= 2/3;
        rotSpd = speed/3;
    break;
    
    case 9:
        sprite_index = sprMakerTHOrb;
        indexBase = 0;
        trailPieces = 8;
    break;
}

if (trailPieces != 0){
    for(var i=trailPieces-1; i&gt;=0; i--){
        trailX[i] = -32;
        trailY[i] = -32;
        trailIndex[i] = 8; //only Larry magic
    }
}

image_xscale = 0;
image_yscale = 0;
image_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Buff timed actions
if (buff()){
    if (type == 1 &amp;&amp; false){  // Pieceofcheese - Target player  (disabled)
        if (instance_exists(objPlayer)){
            direction = point_direction(x, y, objPlayer.x, objPlayer.y);
            speed = 0.6;
            friction = -0.072;
            audio_play_sound(sndMakerSampleMagic, 0, 0);
            type = 1.1;
        }
    }else if (type == 4 &amp;&amp; false){  // Kadykunde - Accelerate  (disabled)
        speed *= 2;
        type = 4.1;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pieceofcheese magic trail
if (!shrink &amp;&amp; floor(type) == 1){
    if (!(x &lt; 0 || x &gt; room_width || y &lt; 0 || y &gt; room_height)){
        var _ang = irandom_range(direction-120, direction+120);
        var _rad = irandom_range(3, 8);
        for (var i=0; i&lt;=trailPieces; i++){
            if (i == trailPieces){ //cycled through entire array without finding an opening
                trailX[trailPieces] = x+lengthdir_x(_rad, _ang);
                trailY[trailPieces] = y+lengthdir_y(_rad, _ang);
                trailIndex[trailPieces] = 0;
                trailPieces ++;
                break;
            }else if (i &lt;= trailPieces-1){ //failsafe conditional
                if (trailIndex[i] &gt;= 8){
                    trailX[i] = x+lengthdir_x(_rad, _ang);
                    trailY[i] = y+lengthdir_y(_rad, _ang);
                    trailIndex[i] = 0;
                    break;
                }
            }
        }
    }
    alarm[0] = 2;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (sprite_index == sprMakerFruit){
    image_index = indexBase + (global.count mod 30)/15;
}else if (sprite_index == sprMakerTHPointed || sprite_index == sprMakerTHOrb || sprite_index == sprMakerTHRounded){
    if (indexBase &gt;= 0 &amp;&amp; indexBase &lt; 36){
        if (sprite_index != sprMakerTHOrb){
            var _frames;
            if (sprite_index == sprMakerTHPointed)
                _frames = 5;
            else
                _frames = 4;
            indexCounter = global.count mod 39;
            if (indexCounter &lt; 14)
                image_index = 0; //animation appears to pause for a brief moment
            else
                image_index = (indexCounter-14)*_frames/25;
            image_index = indexBase + clamp(image_index, 0, _frames-1);
            
            image_angle = direction;
        }else{
            image_index = indexBase + (global.count*4/25) mod 4;
        }
    }
}

if (shrink){
    image_xscale -= 0.2;
    image_yscale = image_xscale;
    image_alpha -= 0.1;
    if (image_alpha &lt;= 0 || image_xscale &lt;= 0){
        instance_destroy();
    }
}else{
    switch(type){
        case 1:
        case 1.1:
            if (image_alpha &gt;= 1){
                for(var i=0;i&lt;trailPieces;i++){
                    if (trailIndex[i] &lt; 8){
                        trailIndex[i] += 0.5;
                        if (trailIndex[i] &lt; 6){
                            image_index = trailIndex[i];
                            if (image_alpha &gt;= 1 &amp;&amp; place_meeting(trailX[i], trailY[i], objPlayer)){
                                scrKillPlayer();
                            }
                        }
                    }
                }
            }
            
            /*  // Scrapped buffed targetting
            if (buff()){
                if (type == 1 &amp;&amp; global.dead){  // can't aim toward player in Alarm 1
                    image_alpha -= 0.05;
                    if (image_alpha &lt;= 0){
                        instance_destroy();
                    }
                }else if (type == 1.1){
                    if (friction &lt; 0 &amp;&amp; speed &gt;= 16){
                        speed = 16;
                        friction = 0;
                    }
                    if (image_alpha &lt; 1){
                        image_alpha = min(image_alpha + 0.04, 1);
                    }
                }
            }*/
        break;
        
        case 4.1:  // Kadykunde (buffed)
            if (trailPieces &lt; trailPieceMax-1)
                trailPieces = min(trailPieces+1, trailPieceMax-1);
            
            for (i=trailPieceMax-1; i &gt; 0; i--){
                trailX[i] = trailX[i-1];
                trailY[i] = trailY[i-1];
            }
            trailX[0] = x+hspeed;
            trailY[0] = y+vspeed;
        break;
        
        case 5:
            image_angle = direction + 180;
            if (buff() &amp;&amp; place_meeting(x+hspeed, y+vspeed, objBetterBlock)){
                event_user(0); //Kurath - Break apart
            }
        break;
        
        case 8:
            image_angle += rotSpd * (-sign(hspeed));
            
            if (buff() &amp;&amp; instance_exists(objBetterBlock)){
                if (vspeed &gt; 0 &amp;&amp; collision_line(objBetterBlock.bbox_left, 1088-vspeed, objBetterBlock.bbox_right, 1088-vspeed, id, true, false) == id){
                    var _loopCounter = 0;
                    while (collision_line(objBetterBlock.bbox_left, 1088, objBetterBlock.bbox_right, 1088, id, true, false) == id){
                        y -= 1;
                        _loopCounter ++;
                        if (_loopCounter &gt;= vspeed)
                            break;
                    }
                    vspeed = -(vspeed+0.1); //+0.1 for rounding errors
                    var _inst;
                    _inst = instance_create(x, y, objExpandFade);
                    _inst.sprite_index = sprite_index;
                    _inst.image_angle = image_angle;
                    _inst.alphaInc = -1/10;
                    _inst.scaleInc = 2/15;
                    //_inst.visible = false;
                    audio_sound_pitch(audio_play_sound(sndMakerReflector, 0, 0), random_range(1.2, 1.3));
                }
            }
        break;
        
        default:
            for (i=floor(trailPieces-1); i &gt; 0; i--){
                trailX[i] = trailX[i-1];
                trailY[i] = trailY[i-1];
            }
            trailX[0] = xprevious;
            trailY[0] = yprevious;
        break;
    }
    
    if (floor(type) != 1 &amp;&amp; place_meeting(x, y, objPlayer)){
        scrKillPlayer()
    }
    
    if (bbox_top &gt; room_height + 80){
        instance_destroy();
    }
    
    if (image_xscale &lt; 1){
        image_xscale = min(image_xscale + 0.025, 1);
        image_yscale = image_xscale;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Kurath - Break apart
var _gore = -4;
for (var i = -1 ; i &lt;= 1; i++){
    _gore = instance_create(x+hspeed, y+vspeed, objFinalP4KurathSpikeShard);
    _gore.piece = i+1;
    _gore.image_angle = image_angle;
    if (i != 0){
        _gore.x += - (-(8*i))*dsin(_gore.image_angle);
        _gore.y += -((-(8*i))*dcos(_gore.image_angle));
        //_gore.x = (0 * dcos(_gore.image_angle) - -(-8/0/8) * dsin(_gore.image_angle));
        //_gore.y = -(0 * dsin(_gore.image_angle) + -(-8/0/8) * dcos(_gore.image_angle));
    }
    _gore.hspeed *= choose(1, -1);
    with (_gore)
        event_perform(ev_alarm, 0);
}
audio_sound_pitch(audio_play_sound(sndPlantsLimb, 0, 0), random_range(0.95, 1.1));

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (floor(type) == 1){ //Larry magic
    var i;
    for(i=0;i&lt;trailPieces;i++){
        if (trailIndex[i] &lt; 8){
            draw_sprite_ext(sprFinalLarryMagic, trailIndex[i], trailX[i] + drawXOff, trailY[i] + drawYOff, image_xscale, image_yscale, 0, c_white, image_alpha);
        }
    }
}else if (type == 9){ //Torch proj
    for(var i=floor(trailPieces-1); i&gt;=0; i-=1){
        draw_sprite_ext(sprite_index, image_index, trailX[i] + drawXOff, trailY[i] + drawYOff, (1 - (i+1)/trailPieces)*image_xscale, (1 - (i+1)/trailPieces)*image_yscale, 0, c_red, sqr(image_alpha * 1 - ((i+1)/trailPieces)));
        draw_sprite_ext(sprite_index, image_index+4, trailX[i] + drawXOff, trailY[i] + drawYOff, (1 - (i+1)/trailPieces)*image_xscale*0.6667, (1 - (i+1)/trailPieces)*image_yscale*0.6667, 0, c_orange, sqr(image_alpha * 1 - ((i+1)/trailPieces)));
        draw_sprite_ext(sprite_index, image_index+8, trailX[i] + drawXOff, trailY[i] + drawYOff, (1 - (i+1)/trailPieces)*image_xscale*0.3333, (1 - (i+1)/trailPieces)*image_yscale*0.3333, 0, c_yellow, sqr(image_alpha * 1 - ((i+1)/trailPieces)));
    }
    
    draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, c_red, sqr(image_alpha));
    draw_sprite_ext(sprite_index, image_index+4, x, y, image_xscale*0.6667, image_yscale*0.6667, 0, c_orange, sqr(image_alpha));
    draw_sprite_ext(sprite_index, image_index+8, x, y, image_xscale*0.3333, image_yscale*0.3333, 0, c_yellow, sqr(image_alpha));
}else{
    draw_sprite_ext(sprite_index, image_index, x, y, image_xscale, image_yscale, image_angle, image_blend, image_alpha);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
